Version 3.2 HI-TECH Software Intermediate Code
"87 ff.h
[s S1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `us 1 `us 1 `us 1 `*us 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `uc -> 512 `i ]
[n S1 . fs_type pdrv n_fats wflag fsi_flag id n_rootdir csize lfnbuf last_clst free_clst n_fatent fsize volbase fatbase dirbase database winsect win ]
"305
[v _ff_oem2uni `(us ~T0 @X0 0 ef2`us`us ]
"306
[v _ff_uni2oem `(us ~T0 @X0 0 ef2`ul`us ]
"1034 ff.c
[c E69 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 .. ]
[n E69 . FR_OK FR_DISK_ERR FR_INT_ERR FR_NOT_READY FR_NO_FILE FR_NO_PATH FR_INVALID_NAME FR_DENIED FR_EXIST FR_INVALID_OBJECT FR_WRITE_PROTECTED FR_INVALID_DRIVE FR_NOT_ENABLED FR_NO_FILESYSTEM FR_MKFS_ABORTED FR_TIMEOUT FR_LOCKED FR_NOT_ENOUGH_CORE FR_TOO_MANY_OPEN_FILES FR_INVALID_PARAMETER  ]
"1039
[c E216 0 1 2 3 4 .. ]
[n E216 . RES_OK RES_ERROR RES_WRPRT RES_NOTRDY RES_PARERR  ]
"45 diskio.h
[v _disk_write `(E216 ~T0 @X0 0 ef4`uc`*Cuc`ul`ui ]
"44
[v _disk_read `(E216 ~T0 @X0 0 ef4`uc`*uc`ul`ui ]
"46
[v _disk_ioctl `(E216 ~T0 @X0 0 ef3`uc`uc`*v ]
"134 ff.h
[s S2 `*S1 1 `us 1 `uc 1 `uc 1 `ul 1 `ul 1 ]
[n S2 . fs id attr stat sclust objsize ]
"180
[s S4 `S2 1 `ul 1 `ul 1 `ul 1 `*uc 1 `uc -> 12 `i `ul 1 ]
[n S4 . obj dptr clust sect dir fn blk_ofs ]
"307
[v _ff_wtoupper `(ul ~T0 @X0 0 ef1`ul ]
"199
[s S5 `ul 1 `us 1 `us 1 `uc 1 `uc + -> 12 `i -> 1 `i `uc + -> 255 `i -> 1 `i ]
[n S5 . fsize fdate ftime fattrib altname fname ]
"43 diskio.h
[v _disk_status `(uc ~T0 @X0 0 ef1`uc ]
"42
[v _disk_initialize `(uc ~T0 @X0 0 ef1`uc ]
"157 ff.h
[s S3 `S2 1 `uc 1 `uc 1 `ul 1 `ul 1 `ul 1 `ul 1 `*uc 1 `uc -> 512 `i ]
[n S3 . obj flag err fptr clust sect dir_sect dir_ptr buf ]
"300
[v _get_fattime `(ul ~T0 @X0 0 ef ]
[; ;integer.h: 18: typedef int INT;
[; ;integer.h: 19: typedef unsigned int UINT;
[; ;integer.h: 22: typedef unsigned char BYTE;
[; ;integer.h: 25: typedef short SHORT;
[; ;integer.h: 26: typedef unsigned short WORD;
[; ;integer.h: 27: typedef unsigned short WCHAR;
[; ;integer.h: 30: typedef long LONG;
[; ;integer.h: 31: typedef unsigned long DWORD;
[; ;integer.h: 34: typedef unsigned long long QWORD;
[; ;ff.h: 66: typedef char TCHAR;
[; ;ff.h: 80: typedef DWORD FSIZE_t;
[; ;ff.h: 87: typedef struct {
[; ;ff.h: 88: BYTE fs_type;
[; ;ff.h: 89: BYTE pdrv;
[; ;ff.h: 90: BYTE n_fats;
[; ;ff.h: 91: BYTE wflag;
[; ;ff.h: 92: BYTE fsi_flag;
[; ;ff.h: 93: WORD id;
[; ;ff.h: 94: WORD n_rootdir;
[; ;ff.h: 95: WORD csize;
[; ;ff.h: 100: WCHAR* lfnbuf;
[; ;ff.h: 109: DWORD last_clst;
[; ;ff.h: 110: DWORD free_clst;
[; ;ff.h: 120: DWORD n_fatent;
[; ;ff.h: 121: DWORD fsize;
[; ;ff.h: 122: DWORD volbase;
[; ;ff.h: 123: DWORD fatbase;
[; ;ff.h: 124: DWORD dirbase;
[; ;ff.h: 125: DWORD database;
[; ;ff.h: 126: DWORD winsect;
[; ;ff.h: 127: BYTE win[512];
[; ;ff.h: 128: } FATFS;
[; ;ff.h: 134: typedef struct {
[; ;ff.h: 135: FATFS* fs;
[; ;ff.h: 136: WORD id;
[; ;ff.h: 137: BYTE attr;
[; ;ff.h: 138: BYTE stat;
[; ;ff.h: 139: DWORD sclust;
[; ;ff.h: 140: FSIZE_t objsize;
[; ;ff.h: 151: } FFOBJID;
[; ;ff.h: 157: typedef struct {
[; ;ff.h: 158: FFOBJID obj;
[; ;ff.h: 159: BYTE flag;
[; ;ff.h: 160: BYTE err;
[; ;ff.h: 161: FSIZE_t fptr;
[; ;ff.h: 162: DWORD clust;
[; ;ff.h: 163: DWORD sect;
[; ;ff.h: 165: DWORD dir_sect;
[; ;ff.h: 166: BYTE* dir_ptr;
[; ;ff.h: 172: BYTE buf[512];
[; ;ff.h: 174: } FIL;
[; ;ff.h: 180: typedef struct {
[; ;ff.h: 181: FFOBJID obj;
[; ;ff.h: 182: DWORD dptr;
[; ;ff.h: 183: DWORD clust;
[; ;ff.h: 184: DWORD sect;
[; ;ff.h: 185: BYTE* dir;
[; ;ff.h: 186: BYTE fn[12];
[; ;ff.h: 188: DWORD blk_ofs;
[; ;ff.h: 193: } DIR;
[; ;ff.h: 199: typedef struct {
[; ;ff.h: 200: FSIZE_t fsize;
[; ;ff.h: 201: WORD fdate;
[; ;ff.h: 202: WORD ftime;
[; ;ff.h: 203: BYTE fattrib;
[; ;ff.h: 205: TCHAR altname[12 + 1];
[; ;ff.h: 206: TCHAR fname[255 + 1];
[; ;ff.h: 210: } FILINFO;
[; ;ff.h: 216: typedef enum {
[; ;ff.h: 217: FR_OK = 0,
[; ;ff.h: 218: FR_DISK_ERR,
[; ;ff.h: 219: FR_INT_ERR,
[; ;ff.h: 220: FR_NOT_READY,
[; ;ff.h: 221: FR_NO_FILE,
[; ;ff.h: 222: FR_NO_PATH,
[; ;ff.h: 223: FR_INVALID_NAME,
[; ;ff.h: 224: FR_DENIED,
[; ;ff.h: 225: FR_EXIST,
[; ;ff.h: 226: FR_INVALID_OBJECT,
[; ;ff.h: 227: FR_WRITE_PROTECTED,
[; ;ff.h: 228: FR_INVALID_DRIVE,
[; ;ff.h: 229: FR_NOT_ENABLED,
[; ;ff.h: 230: FR_NO_FILESYSTEM,
[; ;ff.h: 231: FR_MKFS_ABORTED,
[; ;ff.h: 232: FR_TIMEOUT,
[; ;ff.h: 233: FR_LOCKED,
[; ;ff.h: 234: FR_NOT_ENOUGH_CORE,
[; ;ff.h: 235: FR_TOO_MANY_OPEN_FILES,
[; ;ff.h: 236: FR_INVALID_PARAMETER
[; ;ff.h: 237: } FRESULT;
[; ;ff.h: 244: FRESULT f_open (FIL* fp, const TCHAR* path, BYTE mode);
[; ;ff.h: 245: FRESULT f_close (FIL* fp);
[; ;ff.h: 246: FRESULT f_read (FIL* fp, void* buff, UINT btr, UINT* br);
[; ;ff.h: 247: FRESULT f_write (FIL* fp, const void* buff, UINT btw, UINT* bw);
[; ;ff.h: 248: FRESULT f_lseek (FIL* fp, FSIZE_t ofs);
[; ;ff.h: 249: FRESULT f_truncate (FIL* fp);
[; ;ff.h: 250: FRESULT f_sync (FIL* fp);
[; ;ff.h: 251: FRESULT f_opendir (DIR* dp, const TCHAR* path);
[; ;ff.h: 252: FRESULT f_closedir (DIR* dp);
[; ;ff.h: 253: FRESULT f_readdir (DIR* dp, FILINFO* fno);
[; ;ff.h: 254: FRESULT f_findfirst (DIR* dp, FILINFO* fno, const TCHAR* path, const TCHAR* pattern);
[; ;ff.h: 255: FRESULT f_findnext (DIR* dp, FILINFO* fno);
[; ;ff.h: 256: FRESULT f_mkdir (const TCHAR* path);
[; ;ff.h: 257: FRESULT f_unlink (const TCHAR* path);
[; ;ff.h: 258: FRESULT f_rename (const TCHAR* path_old, const TCHAR* path_new);
[; ;ff.h: 259: FRESULT f_stat (const TCHAR* path, FILINFO* fno);
[; ;ff.h: 260: FRESULT f_chmod (const TCHAR* path, BYTE attr, BYTE mask);
[; ;ff.h: 261: FRESULT f_utime (const TCHAR* path, const FILINFO* fno);
[; ;ff.h: 262: FRESULT f_chdir (const TCHAR* path);
[; ;ff.h: 263: FRESULT f_chdrive (const TCHAR* path);
[; ;ff.h: 264: FRESULT f_getcwd (TCHAR* buff, UINT len);
[; ;ff.h: 265: FRESULT f_getfree (const TCHAR* path, DWORD* nclst, FATFS** fatfs);
[; ;ff.h: 266: FRESULT f_getlabel (const TCHAR* path, TCHAR* label, DWORD* vsn);
[; ;ff.h: 267: FRESULT f_setlabel (const TCHAR* label);
[; ;ff.h: 268: FRESULT f_forward (FIL* fp, UINT(*func)(const BYTE*,UINT), UINT btf, UINT* bf);
[; ;ff.h: 269: FRESULT f_expand (FIL* fp, FSIZE_t szf, BYTE opt);
[; ;ff.h: 270: FRESULT f_mount (FATFS* fs, const TCHAR* path, BYTE opt);
[; ;ff.h: 271: FRESULT f_mkfs (const TCHAR* path, BYTE opt, DWORD au, void* work, UINT len);
[; ;ff.h: 272: FRESULT f_fdisk (BYTE pdrv, const DWORD* szt, void* work);
[; ;ff.h: 273: FRESULT f_setcp (WORD cp);
[; ;ff.h: 274: int f_putc (TCHAR c, FIL* fp);
[; ;ff.h: 275: int f_puts (const TCHAR* str, FIL* cp);
[; ;ff.h: 276: int f_printf (FIL* fp, const TCHAR* str, ...);
[; ;ff.h: 277: TCHAR* f_gets (TCHAR* buff, int len, FIL* fp);
[; ;ff.h: 300: DWORD get_fattime (void);
[; ;ff.h: 305: WCHAR ff_oem2uni (WCHAR oem, WORD cp);
[; ;ff.h: 306: WCHAR ff_uni2oem (DWORD uni, WORD cp);
[; ;ff.h: 307: DWORD ff_wtoupper (DWORD uni);
[; ;diskio.h: 26: typedef BYTE DSTATUS;
[; ;diskio.h: 29: typedef enum {
[; ;diskio.h: 30: RES_OK = 0,
[; ;diskio.h: 31: RES_ERROR,
[; ;diskio.h: 32: RES_WRPRT,
[; ;diskio.h: 33: RES_NOTRDY,
[; ;diskio.h: 34: RES_PARERR
[; ;diskio.h: 35: } DRESULT;
[; ;diskio.h: 42: DSTATUS disk_initialize (BYTE pdrv);
[; ;diskio.h: 43: DSTATUS disk_status (BYTE pdrv);
[; ;diskio.h: 44: DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count);
[; ;diskio.h: 45: DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count);
[; ;diskio.h: 46: DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff);
"429 ff.c
[v _FatFs `*S1 ~T0 @X0 -> -> 1 `i `ux s ]
[; ;ff.c: 429: static FATFS *FatFs[1];
"430
[v _Fsid `us ~T0 @X0 1 s ]
[; ;ff.c: 430: static WORD Fsid;
"465
[v _LfnOfs `Cuc ~T0 @X0 -> 0 `x s ]
[i _LfnOfs
:U ..
-> -> 1 `i `uc
-> -> 3 `i `uc
-> -> 5 `i `uc
-> -> 7 `i `uc
-> -> 9 `i `uc
-> -> 14 `i `uc
-> -> 16 `i `uc
-> -> 18 `i `uc
-> -> 20 `i `uc
-> -> 22 `i `uc
-> -> 24 `i `uc
-> -> 28 `i `uc
-> -> 30 `i `uc
..
]
[; ;ff.c: 465: static const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};
"472
[v _LfnBuf `us ~T0 @X0 + -> 100 `i -> 1 `i s ]
[; ;ff.c: 472: static WCHAR LfnBuf[100 + 1];
"543
[v _ExCvt `Cuc ~T0 @X0 -> 0 `x s ]
[i _ExCvt
:U ..
-> -> 128 `i `uc
-> -> 154 `i `uc
-> -> 144 `i `uc
-> -> 182 `i `uc
-> -> 142 `i `uc
-> -> 183 `i `uc
-> -> 143 `i `uc
-> -> 128 `i `uc
-> -> 210 `i `uc
-> -> 211 `i `uc
-> -> 212 `i `uc
-> -> 216 `i `uc
-> -> 215 `i `uc
-> -> 73 `i `uc
-> -> 142 `i `uc
-> -> 143 `i `uc
-> -> 144 `i `uc
-> -> 146 `i `uc
-> -> 146 `i `uc
-> -> 226 `i `uc
-> -> 153 `i `uc
-> -> 227 `i `uc
-> -> 234 `i `uc
-> -> 235 `i `uc
-> -> 152 `i `uc
-> -> 153 `i `uc
-> -> 154 `i `uc
-> -> 157 `i `uc
-> -> 156 `i `uc
-> -> 157 `i `uc
-> -> 158 `i `uc
-> -> 158 `i `uc
-> -> 181 `i `uc
-> -> 214 `i `uc
-> -> 224 `i `uc
-> -> 233 `i `uc
-> -> 165 `i `uc
-> -> 165 `i `uc
-> -> 166 `i `uc
-> -> 166 `i `uc
-> -> 168 `i `uc
-> -> 169 `i `uc
-> -> 170 `i `uc
-> -> 171 `i `uc
-> -> 172 `i `uc
-> -> 173 `i `uc
-> -> 174 `i `uc
-> -> 175 `i `uc
-> -> 176 `i `uc
-> -> 177 `i `uc
-> -> 178 `i `uc
-> -> 179 `i `uc
-> -> 180 `i `uc
-> -> 181 `i `uc
-> -> 182 `i `uc
-> -> 183 `i `uc
-> -> 184 `i `uc
-> -> 185 `i `uc
-> -> 186 `i `uc
-> -> 187 `i `uc
-> -> 188 `i `uc
-> -> 189 `i `uc
-> -> 190 `i `uc
-> -> 191 `i `uc
-> -> 192 `i `uc
-> -> 193 `i `uc
-> -> 194 `i `uc
-> -> 195 `i `uc
-> -> 196 `i `uc
-> -> 197 `i `uc
-> -> 199 `i `uc
-> -> 199 `i `uc
-> -> 200 `i `uc
-> -> 201 `i `uc
-> -> 202 `i `uc
-> -> 203 `i `uc
-> -> 204 `i `uc
-> -> 205 `i `uc
-> -> 206 `i `uc
-> -> 207 `i `uc
-> -> 208 `i `uc
-> -> 209 `i `uc
-> -> 210 `i `uc
-> -> 211 `i `uc
-> -> 212 `i `uc
-> -> 73 `i `uc
-> -> 214 `i `uc
-> -> 215 `i `uc
-> -> 216 `i `uc
-> -> 217 `i `uc
-> -> 218 `i `uc
-> -> 219 `i `uc
-> -> 220 `i `uc
-> -> 221 `i `uc
-> -> 222 `i `uc
-> -> 223 `i `uc
-> -> 224 `i `uc
-> -> 225 `i `uc
-> -> 226 `i `uc
-> -> 227 `i `uc
-> -> 229 `i `uc
-> -> 229 `i `uc
-> -> 230 `i `uc
-> -> 231 `i `uc
-> -> 232 `i `uc
-> -> 233 `i `uc
-> -> 234 `i `uc
-> -> 235 `i `uc
-> -> 222 `i `uc
-> -> 237 `i `uc
-> -> 238 `i `uc
-> -> 239 `i `uc
-> -> 240 `i `uc
-> -> 241 `i `uc
-> -> 242 `i `uc
-> -> 243 `i `uc
-> -> 244 `i `uc
-> -> 245 `i `uc
-> -> 246 `i `uc
-> -> 247 `i `uc
-> -> 248 `i `uc
-> -> 249 `i `uc
-> -> 250 `i `uc
-> -> 251 `i `uc
-> -> 252 `i `uc
-> -> 253 `i `uc
-> -> 254 `i `uc
-> -> 255 `i `uc
..
]
[; ;ff.c: 543: static const BYTE ExCvt[] = {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x49,0x8E,0x8F, 0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, 0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB
"566
[v _ld_word `(us ~T0 @X0 1 sf1`*Cuc ]
"567
{
[; ;ff.c: 565: static
[; ;ff.c: 566: WORD ld_word (const BYTE* ptr)
[; ;ff.c: 567: {
[e :U _ld_word ]
"566
[v _ptr `*Cuc ~T0 @X0 1 r1 ]
"567
[f ]
"568
[v _rv `us ~T0 @X0 1 a ]
[; ;ff.c: 568: WORD rv;
[; ;ff.c: 570: rv = ptr[1];
"570
[e = _rv -> *U + _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x `us ]
[; ;ff.c: 571: rv = rv << 8 | ptr[0];
"571
[e = _rv -> | << -> _rv `ui -> 8 `i -> *U + _ptr * -> -> 0 `i `x -> -> # *U _ptr `i `x `ui `us ]
[; ;ff.c: 572: return rv;
"572
[e ) _rv ]
[e $UE 6  ]
[; ;ff.c: 573: }
"573
[e :UE 6 ]
}
"576
[v _ld_dword `(ul ~T0 @X0 1 sf1`*Cuc ]
"577
{
[; ;ff.c: 575: static
[; ;ff.c: 576: DWORD ld_dword (const BYTE* ptr)
[; ;ff.c: 577: {
[e :U _ld_dword ]
"576
[v _ptr `*Cuc ~T0 @X0 1 r1 ]
"577
[f ]
"578
[v _rv `ul ~T0 @X0 1 a ]
[; ;ff.c: 578: DWORD rv;
[; ;ff.c: 580: rv = ptr[3];
"580
[e = _rv -> *U + _ptr * -> -> 3 `i `x -> -> # *U _ptr `i `x `ul ]
[; ;ff.c: 581: rv = rv << 8 | ptr[2];
"581
[e = _rv | << _rv -> 8 `i -> *U + _ptr * -> -> 2 `i `x -> -> # *U _ptr `i `x `ul ]
[; ;ff.c: 582: rv = rv << 8 | ptr[1];
"582
[e = _rv | << _rv -> 8 `i -> *U + _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x `ul ]
[; ;ff.c: 583: rv = rv << 8 | ptr[0];
"583
[e = _rv | << _rv -> 8 `i -> *U + _ptr * -> -> 0 `i `x -> -> # *U _ptr `i `x `ul ]
[; ;ff.c: 584: return rv;
"584
[e ) _rv ]
[e $UE 7  ]
[; ;ff.c: 585: }
"585
[e :UE 7 ]
}
"607
[v _st_word `(v ~T0 @X0 1 sf2`*uc`us ]
"608
{
[; ;ff.c: 606: static
[; ;ff.c: 607: void st_word (BYTE* ptr, WORD val)
[; ;ff.c: 608: {
[e :U _st_word ]
"607
[v _ptr `*uc ~T0 @X0 1 r1 ]
[v _val `us ~T0 @X0 1 r2 ]
"608
[f ]
[; ;ff.c: 609: *ptr++ = (BYTE)val; val >>= 8;
"609
[e = *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x -> _val `uc ]
[e =>> _val -> 8 `i ]
[; ;ff.c: 610: *ptr++ = (BYTE)val;
"610
[e = *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x -> _val `uc ]
[; ;ff.c: 611: }
"611
[e :UE 8 ]
}
"614
[v _st_dword `(v ~T0 @X0 1 sf2`*uc`ul ]
"615
{
[; ;ff.c: 613: static
[; ;ff.c: 614: void st_dword (BYTE* ptr, DWORD val)
[; ;ff.c: 615: {
[e :U _st_dword ]
"614
[v _ptr `*uc ~T0 @X0 1 r1 ]
[v _val `ul ~T0 @X0 1 r2 ]
"615
[f ]
[; ;ff.c: 616: *ptr++ = (BYTE)val; val >>= 8;
"616
[e = *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x -> _val `uc ]
[e =>> _val -> 8 `i ]
[; ;ff.c: 617: *ptr++ = (BYTE)val; val >>= 8;
"617
[e = *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x -> _val `uc ]
[e =>> _val -> 8 `i ]
[; ;ff.c: 618: *ptr++ = (BYTE)val; val >>= 8;
"618
[e = *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x -> _val `uc ]
[e =>> _val -> 8 `i ]
[; ;ff.c: 619: *ptr++ = (BYTE)val;
"619
[e = *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x -> _val `uc ]
[; ;ff.c: 620: }
"620
[e :UE 9 ]
}
"646
[v _mem_cpy `(v ~T0 @X0 1 sf3`*v`*Cv`ui ]
"647
{
[; ;ff.c: 645: static
[; ;ff.c: 646: void mem_cpy (void* dst, const void* src, UINT cnt)
[; ;ff.c: 647: {
[e :U _mem_cpy ]
"646
[v _dst `*v ~T0 @X0 1 r1 ]
[v _src `*Cv ~T0 @X0 1 r2 ]
[v _cnt `ui ~T0 @X0 1 r3 ]
"647
[f ]
"648
[v _d `*uc ~T0 @X0 1 a ]
[; ;ff.c: 648: BYTE *d = (BYTE*)dst;
[e = _d -> _dst `*uc ]
"649
[v _s `*Cuc ~T0 @X0 1 a ]
[; ;ff.c: 649: const BYTE *s = (const BYTE*)src;
[e = _s -> _src `*Cuc ]
[; ;ff.c: 651: if (cnt != 0) {
"651
[e $ ! != _cnt -> -> 0 `i `ui 11  ]
{
[; ;ff.c: 652: do {
"652
[e :U 14 ]
{
[; ;ff.c: 653: *d++ = *s++;
"653
[e = *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
"654
}
[; ;ff.c: 654: } while (--cnt);
[e $ != =- _cnt -> -> 1 `i `ui -> -> 0 `i `ui 14  ]
[e :U 13 ]
"655
}
[e :U 11 ]
[; ;ff.c: 655: }
[; ;ff.c: 656: }
"656
[e :UE 10 ]
}
"661
[v _mem_set `(v ~T0 @X0 1 sf3`*v`i`ui ]
"662
{
[; ;ff.c: 660: static
[; ;ff.c: 661: void mem_set (void* dst, int val, UINT cnt)
[; ;ff.c: 662: {
[e :U _mem_set ]
"661
[v _dst `*v ~T0 @X0 1 r1 ]
[v _val `i ~T0 @X0 1 r2 ]
[v _cnt `ui ~T0 @X0 1 r3 ]
"662
[f ]
"663
[v _d `*uc ~T0 @X0 1 a ]
[; ;ff.c: 663: BYTE *d = (BYTE*)dst;
[e = _d -> _dst `*uc ]
[; ;ff.c: 665: do {
"665
[e :U 18 ]
{
[; ;ff.c: 666: *d++ = (BYTE)val;
"666
[e = *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x -> _val `uc ]
"667
}
[; ;ff.c: 667: } while (--cnt);
[e $ != =- _cnt -> -> 1 `i `ui -> -> 0 `i `ui 18  ]
[e :U 17 ]
[; ;ff.c: 668: }
"668
[e :UE 15 ]
}
"673
[v _mem_cmp `(i ~T0 @X0 1 sf3`*Cv`*Cv`ui ]
"674
{
[; ;ff.c: 672: static
[; ;ff.c: 673: int mem_cmp (const void* dst, const void* src, UINT cnt)
[; ;ff.c: 674: {
[e :U _mem_cmp ]
"673
[v _dst `*Cv ~T0 @X0 1 r1 ]
[v _src `*Cv ~T0 @X0 1 r2 ]
[v _cnt `ui ~T0 @X0 1 r3 ]
"674
[f ]
"675
[v _d `*Cuc ~T0 @X0 1 a ]
[; ;ff.c: 675: const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
[e = _d -> _dst `*Cuc ]
[v _s `*Cuc ~T0 @X0 1 a ]
[e = _s -> _src `*Cuc ]
"676
[v _r `i ~T0 @X0 1 a ]
[; ;ff.c: 676: int r = 0;
[e = _r -> 0 `i ]
[; ;ff.c: 678: do {
"678
[e :U 22 ]
{
[; ;ff.c: 679: r = *d++ - *s++;
"679
[e = _r - -> *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x `i -> *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x `i ]
"680
}
[; ;ff.c: 680: } while (--cnt && r == 0);
[e $ && != =- _cnt -> -> 1 `i `ui -> -> 0 `i `ui == _r -> 0 `i 22  ]
[e :U 21 ]
[; ;ff.c: 682: return r;
"682
[e ) _r ]
[e $UE 19  ]
[; ;ff.c: 683: }
"683
[e :UE 19 ]
}
"688
[v _chk_chr `(i ~T0 @X0 1 sf2`*Cuc`i ]
"689
{
[; ;ff.c: 687: static
[; ;ff.c: 688: int chk_chr (const char* str, int chr)
[; ;ff.c: 689: {
[e :U _chk_chr ]
"688
[v _str `*Cuc ~T0 @X0 1 r1 ]
[v _chr `i ~T0 @X0 1 r2 ]
"689
[f ]
[; ;ff.c: 690: while (*str && *str != chr) str++;
"690
[e $U 24  ]
[e :U 25 ]
[e ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
[e :U 24 ]
[e $ && != -> *U _str `i -> -> -> 0 `i `Cuc `i != -> *U _str `i _chr 25  ]
[e :U 26 ]
[; ;ff.c: 691: return *str;
"691
[e ) -> *U _str `i ]
[e $UE 23  ]
[; ;ff.c: 692: }
"692
[e :UE 23 ]
}
"697
[v _dbc_1st `(i ~T0 @X0 1 sf1`uc ]
"698
{
[; ;ff.c: 696: static
[; ;ff.c: 697: int dbc_1st (BYTE c)
[; ;ff.c: 698: {
[e :U _dbc_1st ]
"697
[v _c `uc ~T0 @X0 1 r1 ]
"698
[f ]
[; ;ff.c: 710: if (c != 0) return 0;
"710
[e $ ! != -> _c `i -> 0 `i 28  ]
[e ) -> 0 `i ]
[e $UE 27  ]
[e :U 28 ]
[; ;ff.c: 712: return 0;
"712
[e ) -> 0 `i ]
[e $UE 27  ]
[; ;ff.c: 713: }
"713
[e :UE 27 ]
}
"718
[v _dbc_2nd `(i ~T0 @X0 1 sf1`uc ]
"719
{
[; ;ff.c: 717: static
[; ;ff.c: 718: int dbc_2nd (BYTE c)
[; ;ff.c: 719: {
[e :U _dbc_2nd ]
"718
[v _c `uc ~T0 @X0 1 r1 ]
"719
[f ]
[; ;ff.c: 733: if (c != 0) return 0;
"733
[e $ ! != -> _c `i -> 0 `i 30  ]
[e ) -> 0 `i ]
[e $UE 29  ]
[e :U 30 ]
[; ;ff.c: 735: return 0;
"735
[e ) -> 0 `i ]
[e $UE 29  ]
[; ;ff.c: 736: }
"736
[e :UE 29 ]
}
"743
[v _tchar2uni `(ul ~T0 @X0 1 sf1`**Cuc ]
"746
{
[; ;ff.c: 742: static
[; ;ff.c: 743: DWORD tchar2uni (
[; ;ff.c: 744: const TCHAR** str
[; ;ff.c: 745: )
[; ;ff.c: 746: {
[e :U _tchar2uni ]
"744
[v _str `**Cuc ~T0 @X0 1 r1 ]
"746
[f ]
"747
[v _uc `ul ~T0 @X0 1 a ]
"748
[v _p `*Cuc ~T0 @X0 1 a ]
[; ;ff.c: 747: DWORD uc;
[; ;ff.c: 748: const TCHAR *p = *str;
[e = _p *U _str ]
"789
[v _b `uc ~T0 @X0 1 a ]
"790
[v _wc `us ~T0 @X0 1 a ]
[; ;ff.c: 789: BYTE b;
[; ;ff.c: 790: WCHAR wc;
[; ;ff.c: 792: wc = (BYTE)*p++;
"792
[e = _wc -> *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x `us ]
[; ;ff.c: 793: if (dbc_1st((BYTE)wc)) {
"793
[e $ ! != ( _dbc_1st (1 -> _wc `uc -> 0 `i 32  ]
{
[; ;ff.c: 794: b = (BYTE)*p++;
"794
[e = _b *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x ]
[; ;ff.c: 795: if (!dbc_2nd(b)) return 0xFFFFFFFF;
"795
[e $ ! ! != ( _dbc_2nd (1 _b -> 0 `i 33  ]
[e ) -> -1 `ul ]
[e $UE 31  ]
[e :U 33 ]
[; ;ff.c: 796: wc = (wc << 8) + b;
"796
[e = _wc -> + << -> _wc `ui -> 8 `i -> _b `ui `us ]
"797
}
[e :U 32 ]
[; ;ff.c: 797: }
[; ;ff.c: 798: if (wc != 0) {
"798
[e $ ! != -> _wc `ui -> -> 0 `i `ui 34  ]
{
[; ;ff.c: 799: wc = ff_oem2uni(wc, 857);
"799
[e = _wc ( _ff_oem2uni (2 , _wc -> -> 857 `i `us ]
[; ;ff.c: 800: if (wc == 0) return 0xFFFFFFFF;
"800
[e $ ! == -> _wc `ui -> -> 0 `i `ui 35  ]
[e ) -> -1 `ul ]
[e $UE 31  ]
[e :U 35 ]
"801
}
[e :U 34 ]
[; ;ff.c: 801: }
[; ;ff.c: 802: uc = wc;
"802
[e = _uc -> _wc `ul ]
[; ;ff.c: 805: *str = p;
"805
[e = *U _str _p ]
[; ;ff.c: 806: return uc;
"806
[e ) _uc ]
[e $UE 31  ]
[; ;ff.c: 807: }
"807
[e :UE 31 ]
}
"812
[v _put_utf `(uc ~T0 @X0 1 sf3`ul`*uc`ui ]
"817
{
[; ;ff.c: 811: static
[; ;ff.c: 812: BYTE put_utf (
[; ;ff.c: 813: DWORD chr,
[; ;ff.c: 814: TCHAR* buf,
[; ;ff.c: 815: UINT szb
[; ;ff.c: 816: )
[; ;ff.c: 817: {
[e :U _put_utf ]
"813
[v _chr `ul ~T0 @X0 1 r1 ]
"814
[v _buf `*uc ~T0 @X0 1 r2 ]
"815
[v _szb `ui ~T0 @X0 1 r3 ]
"817
[f ]
"867
[v _wc `us ~T0 @X0 1 a ]
[; ;ff.c: 867: WCHAR wc;
[; ;ff.c: 869: wc = ff_uni2oem(chr, 857);
"869
[e = _wc ( _ff_uni2oem (2 , _chr -> -> 857 `i `us ]
[; ;ff.c: 870: if (wc >= 0x100) {
"870
[e $ ! >= -> _wc `ui -> -> 256 `i `ui 37  ]
{
[; ;ff.c: 871: if (szb < 2) return 0;
"871
[e $ ! < _szb -> -> 2 `i `ui 38  ]
[e ) -> -> 0 `i `uc ]
[e $UE 36  ]
[e :U 38 ]
[; ;ff.c: 872: *buf++ = (char)(wc >> 8);
"872
[e = *U ++ _buf * -> -> 1 `i `x -> -> # *U _buf `i `x -> >> -> _wc `ui -> 8 `i `uc ]
[; ;ff.c: 873: *buf++ = (TCHAR)wc;
"873
[e = *U ++ _buf * -> -> 1 `i `x -> -> # *U _buf `i `x -> _wc `uc ]
[; ;ff.c: 874: return 2;
"874
[e ) -> -> 2 `i `uc ]
[e $UE 36  ]
"875
}
[e :U 37 ]
[; ;ff.c: 875: }
[; ;ff.c: 876: if (wc == 0 || szb < 1) return 0;
"876
[e $ ! || == -> _wc `ui -> -> 0 `i `ui < _szb -> -> 1 `i `ui 39  ]
[e ) -> -> 0 `i `uc ]
[e $UE 36  ]
[e :U 39 ]
[; ;ff.c: 877: *buf++ = (TCHAR)wc;
"877
[e = *U ++ _buf * -> -> 1 `i `x -> -> # *U _buf `i `x -> _wc `uc ]
[; ;ff.c: 878: return 1;
"878
[e ) -> -> 1 `i `uc ]
[e $UE 36  ]
[; ;ff.c: 880: }
"880
[e :UE 36 ]
}
"1031
[v _sync_window `(E69 ~T0 @X0 1 sf1`*S1 ]
"1034
{
[; ;ff.c: 1030: static
[; ;ff.c: 1031: FRESULT sync_window (
[; ;ff.c: 1032: FATFS* fs
[; ;ff.c: 1033: )
[; ;ff.c: 1034: {
[e :U _sync_window ]
"1032
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1034
[f ]
"1035
[v _res `E69 ~T0 @X0 1 a ]
[; ;ff.c: 1035: FRESULT res = FR_OK;
[e = _res . `E69 0 ]
[; ;ff.c: 1038: if (fs->wflag) {
"1038
[e $ ! != -> . *U _fs 3 `i -> -> -> 0 `i `uc `i 41  ]
{
[; ;ff.c: 1039: if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {
"1039
[e $ ! == -> ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fs 18 `*Cuc . *U _fs 17 -> -> 1 `i `ui `i -> . `E216 0 `i 42  ]
{
[; ;ff.c: 1040: fs->wflag = 0;
"1040
[e = . *U _fs 3 -> -> 0 `i `uc ]
[; ;ff.c: 1041: if (fs->winsect - fs->fatbase < fs->fsize) {
"1041
[e $ ! < - . *U _fs 17 . *U _fs 14 . *U _fs 12 43  ]
{
[; ;ff.c: 1042: if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);
"1042
[e $ ! == -> . *U _fs 2 `i -> 2 `i 44  ]
[e ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fs 18 `*Cuc + . *U _fs 17 . *U _fs 12 -> -> 1 `i `ui ]
[e :U 44 ]
"1043
}
[e :U 43 ]
"1044
}
[; ;ff.c: 1043: }
[; ;ff.c: 1044: } else {
[e $U 45  ]
[e :U 42 ]
{
[; ;ff.c: 1045: res = FR_DISK_ERR;
"1045
[e = _res . `E69 1 ]
"1046
}
[e :U 45 ]
"1047
}
[e :U 41 ]
[; ;ff.c: 1046: }
[; ;ff.c: 1047: }
[; ;ff.c: 1048: return res;
"1048
[e ) _res ]
[e $UE 40  ]
[; ;ff.c: 1049: }
"1049
[e :UE 40 ]
}
"1054
[v _move_window `(E69 ~T0 @X0 1 sf2`*S1`ul ]
"1058
{
[; ;ff.c: 1053: static
[; ;ff.c: 1054: FRESULT move_window (
[; ;ff.c: 1055: FATFS* fs,
[; ;ff.c: 1056: DWORD sector
[; ;ff.c: 1057: )
[; ;ff.c: 1058: {
[e :U _move_window ]
"1055
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1056
[v _sector `ul ~T0 @X0 1 r2 ]
"1058
[f ]
"1059
[v _res `E69 ~T0 @X0 1 a ]
[; ;ff.c: 1059: FRESULT res = FR_OK;
[e = _res . `E69 0 ]
[; ;ff.c: 1062: if (sector != fs->winsect) {
"1062
[e $ ! != _sector . *U _fs 17 47  ]
{
[; ;ff.c: 1064: res = sync_window(fs);
"1064
[e = _res ( _sync_window (1 _fs ]
[; ;ff.c: 1066: if (res == FR_OK) {
"1066
[e $ ! == -> _res `i -> . `E69 0 `i 48  ]
{
[; ;ff.c: 1067: if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
"1067
[e $ ! != -> ( _disk_read (4 , , , . *U _fs 1 &U . *U _fs 18 _sector -> -> 1 `i `ui `i -> . `E216 0 `i 49  ]
{
[; ;ff.c: 1068: sector = 0xFFFFFFFF;
"1068
[e = _sector -> -1 `ul ]
[; ;ff.c: 1069: res = FR_DISK_ERR;
"1069
[e = _res . `E69 1 ]
"1070
}
[e :U 49 ]
[; ;ff.c: 1070: }
[; ;ff.c: 1071: fs->winsect = sector;
"1071
[e = . *U _fs 17 _sector ]
"1072
}
[e :U 48 ]
"1073
}
[e :U 47 ]
[; ;ff.c: 1072: }
[; ;ff.c: 1073: }
[; ;ff.c: 1074: return res;
"1074
[e ) _res ]
[e $UE 46  ]
[; ;ff.c: 1075: }
"1075
[e :UE 46 ]
}
"1086
[v _sync_fs `(E69 ~T0 @X0 1 sf1`*S1 ]
"1089
{
[; ;ff.c: 1085: static
[; ;ff.c: 1086: FRESULT sync_fs (
[; ;ff.c: 1087: FATFS* fs
[; ;ff.c: 1088: )
[; ;ff.c: 1089: {
[e :U _sync_fs ]
"1087
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1089
[f ]
"1090
[v _res `E69 ~T0 @X0 1 a ]
[; ;ff.c: 1090: FRESULT res;
[; ;ff.c: 1093: res = sync_window(fs);
"1093
[e = _res ( _sync_window (1 _fs ]
[; ;ff.c: 1094: if (res == FR_OK) {
"1094
[e $ ! == -> _res `i -> . `E69 0 `i 51  ]
{
[; ;ff.c: 1095: if (fs->fs_type == 3 && fs->fsi_flag == 1) {
"1095
[e $ ! && == -> . *U _fs 0 `i -> 3 `i == -> . *U _fs 4 `i -> 1 `i 52  ]
{
[; ;ff.c: 1097: mem_set(fs->win, 0, ((UINT)512));
"1097
[e ( _mem_set (3 , , -> &U . *U _fs 18 `*v -> 0 `i -> -> 512 `i `ui ]
[; ;ff.c: 1098: st_word(fs->win + 510, 0xAA55);
"1098
[e ( _st_word (2 , + &U . *U _fs 18 * -> -> 510 `i `x -> -> # *U &U . *U _fs 18 `i `x -> -> 43605 `ui `us ]
[; ;ff.c: 1099: st_dword(fs->win + 0, 0x41615252);
"1099
[e ( _st_dword (2 , + &U . *U _fs 18 * -> -> 0 `i `x -> -> # *U &U . *U _fs 18 `i `x -> -> 1096897106 `l `ul ]
[; ;ff.c: 1100: st_dword(fs->win + 484, 0x61417272);
"1100
[e ( _st_dword (2 , + &U . *U _fs 18 * -> -> 484 `i `x -> -> # *U &U . *U _fs 18 `i `x -> -> 1631679090 `l `ul ]
[; ;ff.c: 1101: st_dword(fs->win + 488, fs->free_clst);
"1101
[e ( _st_dword (2 , + &U . *U _fs 18 * -> -> 488 `i `x -> -> # *U &U . *U _fs 18 `i `x . *U _fs 10 ]
[; ;ff.c: 1102: st_dword(fs->win + 492, fs->last_clst);
"1102
[e ( _st_dword (2 , + &U . *U _fs 18 * -> -> 492 `i `x -> -> # *U &U . *U _fs 18 `i `x . *U _fs 9 ]
[; ;ff.c: 1104: fs->winsect = fs->volbase + 1;
"1104
[e = . *U _fs 17 + . *U _fs 13 -> -> -> 1 `i `l `ul ]
[; ;ff.c: 1105: disk_write(fs->pdrv, fs->win, fs->winsect, 1);
"1105
[e ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fs 18 `*Cuc . *U _fs 17 -> -> 1 `i `ui ]
[; ;ff.c: 1106: fs->fsi_flag = 0;
"1106
[e = . *U _fs 4 -> -> 0 `i `uc ]
"1107
}
[e :U 52 ]
[; ;ff.c: 1107: }
[; ;ff.c: 1109: if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res = FR_DISK_ERR;
"1109
[e $ ! != -> ( _disk_ioctl (3 , , . *U _fs 1 -> -> 0 `i `uc -> -> 0 `i `*v `i -> . `E216 0 `i 53  ]
[e = _res . `E69 1 ]
[e :U 53 ]
"1110
}
[e :U 51 ]
[; ;ff.c: 1110: }
[; ;ff.c: 1112: return res;
"1112
[e ) _res ]
[e $UE 50  ]
[; ;ff.c: 1113: }
"1113
[e :UE 50 ]
}
"1124
[v _clst2sect `(ul ~T0 @X0 1 sf2`*S1`ul ]
"1128
{
[; ;ff.c: 1123: static
[; ;ff.c: 1124: DWORD clst2sect (
[; ;ff.c: 1125: FATFS* fs,
[; ;ff.c: 1126: DWORD clst
[; ;ff.c: 1127: )
[; ;ff.c: 1128: {
[e :U _clst2sect ]
"1125
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1126
[v _clst `ul ~T0 @X0 1 r2 ]
"1128
[f ]
[; ;ff.c: 1129: clst -= 2;
"1129
[e =- _clst -> -> -> 2 `i `l `ul ]
[; ;ff.c: 1130: if (clst >= fs->n_fatent - 2) return 0;
"1130
[e $ ! >= _clst - . *U _fs 11 -> -> -> 2 `i `l `ul 55  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 54  ]
[e :U 55 ]
[; ;ff.c: 1131: return fs->database + fs->csize * clst;
"1131
[e ) + . *U _fs 16 * -> . *U _fs 7 `ul _clst ]
[e $UE 54  ]
[; ;ff.c: 1132: }
"1132
[e :UE 54 ]
}
"1142
[v _get_fat `(ul ~T0 @X0 1 sf2`*S2`ul ]
"1146
{
[; ;ff.c: 1141: static
[; ;ff.c: 1142: DWORD get_fat (
[; ;ff.c: 1143: FFOBJID* obj,
[; ;ff.c: 1144: DWORD clst
[; ;ff.c: 1145: )
[; ;ff.c: 1146: {
[e :U _get_fat ]
"1143
[v _obj `*S2 ~T0 @X0 1 r1 ]
"1144
[v _clst `ul ~T0 @X0 1 r2 ]
"1146
[f ]
"1147
[v _wc `ui ~T0 @X0 1 a ]
[v _bc `ui ~T0 @X0 1 a ]
"1148
[v _val `ul ~T0 @X0 1 a ]
"1149
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 1147: UINT wc, bc;
[; ;ff.c: 1148: DWORD val;
[; ;ff.c: 1149: FATFS *fs = obj->fs;
[e = _fs . *U _obj 0 ]
[; ;ff.c: 1152: if (clst < 2 || clst >= fs->n_fatent) {
"1152
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U _fs 11 57  ]
{
[; ;ff.c: 1153: val = 1;
"1153
[e = _val -> -> -> 1 `i `l `ul ]
"1155
}
[; ;ff.c: 1155: } else {
[e $U 58  ]
[e :U 57 ]
{
[; ;ff.c: 1156: val = 0xFFFFFFFF;
"1156
[e = _val -> -1 `ul ]
[; ;ff.c: 1158: switch (fs->fs_type) {
"1158
[e $U 60  ]
{
[; ;ff.c: 1159: case 1 :
"1159
[e :U 61 ]
[; ;ff.c: 1160: bc = (UINT)clst; bc += bc / 2;
"1160
[e = _bc -> _clst `ui ]
[e =+ _bc / _bc -> -> 2 `i `ui ]
[; ;ff.c: 1161: if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
"1161
[e $ ! != -> ( _move_window (2 , _fs + . *U _fs 14 -> / _bc -> -> 512 `i `ui `ul `i -> . `E69 0 `i 62  ]
[e $U 59  ]
[e :U 62 ]
[; ;ff.c: 1162: wc = fs->win[bc++ % ((UINT)512)];
"1162
[e = _wc -> *U + &U . *U _fs 18 * -> % ++ _bc -> -> 1 `i `ui -> -> 512 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux `ui ]
[; ;ff.c: 1163: if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
"1163
[e $ ! != -> ( _move_window (2 , _fs + . *U _fs 14 -> / _bc -> -> 512 `i `ui `ul `i -> . `E69 0 `i 63  ]
[e $U 59  ]
[e :U 63 ]
[; ;ff.c: 1164: wc |= fs->win[bc % ((UINT)512)] << 8;
"1164
[e =| _wc -> << -> *U + &U . *U _fs 18 * -> % _bc -> -> 512 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux `i -> 8 `i `ui ]
[; ;ff.c: 1165: val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
"1165
[e = _val -> ? != & _clst -> -> -> 1 `i `l `ul -> -> 0 `i `ul : >> _wc -> 4 `i & _wc -> -> 4095 `i `ui `ul ]
[; ;ff.c: 1166: break;
"1166
[e $U 59  ]
[; ;ff.c: 1168: case 2 :
"1168
[e :U 64 ]
[; ;ff.c: 1169: if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) != FR_OK) break;
"1169
[e $ ! != -> ( _move_window (2 , _fs + . *U _fs 14 / _clst -> / -> -> 512 `i `ui -> -> 2 `i `ui `ul `i -> . `E69 0 `i 65  ]
[e $U 59  ]
[e :U 65 ]
[; ;ff.c: 1170: val = ld_word(fs->win + clst * 2 % ((UINT)512));
"1170
[e = _val -> ( _ld_word (1 -> + &U . *U _fs 18 * -> % * _clst -> -> -> 2 `i `l `ul -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fs 18 `ui `ux `*Cuc `ul ]
[; ;ff.c: 1171: break;
"1171
[e $U 59  ]
[; ;ff.c: 1173: case 3 :
"1173
[e :U 66 ]
[; ;ff.c: 1174: if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) != FR_OK) break;
"1174
[e $ ! != -> ( _move_window (2 , _fs + . *U _fs 14 / _clst -> / -> -> 512 `i `ui -> -> 4 `i `ui `ul `i -> . `E69 0 `i 67  ]
[e $U 59  ]
[e :U 67 ]
[; ;ff.c: 1175: val = ld_dword(fs->win + clst * 4 % ((UINT)512)) & 0x0FFFFFFF;
"1175
[e = _val & ( _ld_dword (1 -> + &U . *U _fs 18 * -> % * _clst -> -> -> 4 `i `l `ul -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fs 18 `ui `ux `*Cuc -> -> 268435455 `l `ul ]
[; ;ff.c: 1176: break;
"1176
[e $U 59  ]
[; ;ff.c: 1203: default:
"1203
[e :U 68 ]
[; ;ff.c: 1204: val = 1;
"1204
[e = _val -> -> -> 1 `i `l `ul ]
"1205
}
[; ;ff.c: 1205: }
[e $U 59  ]
"1158
[e :U 60 ]
[e [\ . *U _fs 0 , $ -> -> 1 `i `uc 61
 , $ -> -> 2 `i `uc 64
 , $ -> -> 3 `i `uc 66
 68 ]
"1205
[e :U 59 ]
"1206
}
[e :U 58 ]
[; ;ff.c: 1206: }
[; ;ff.c: 1208: return val;
"1208
[e ) _val ]
[e $UE 56  ]
[; ;ff.c: 1209: }
"1209
[e :UE 56 ]
}
"1220
[v _put_fat `(E69 ~T0 @X0 1 sf3`*S1`ul`ul ]
"1225
{
[; ;ff.c: 1219: static
[; ;ff.c: 1220: FRESULT put_fat (
[; ;ff.c: 1221: FATFS* fs,
[; ;ff.c: 1222: DWORD clst,
[; ;ff.c: 1223: DWORD val
[; ;ff.c: 1224: )
[; ;ff.c: 1225: {
[e :U _put_fat ]
"1221
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1222
[v _clst `ul ~T0 @X0 1 r2 ]
"1223
[v _val `ul ~T0 @X0 1 r3 ]
"1225
[f ]
"1226
[v _bc `ui ~T0 @X0 1 a ]
"1227
[v _p `*uc ~T0 @X0 1 a ]
"1228
[v _res `E69 ~T0 @X0 1 a ]
[; ;ff.c: 1226: UINT bc;
[; ;ff.c: 1227: BYTE *p;
[; ;ff.c: 1228: FRESULT res = FR_INT_ERR;
[e = _res . `E69 2 ]
[; ;ff.c: 1231: if (clst >= 2 && clst < fs->n_fatent) {
"1231
[e $ ! && >= _clst -> -> -> 2 `i `l `ul < _clst . *U _fs 11 70  ]
{
[; ;ff.c: 1232: switch (fs->fs_type) {
"1232
[e $U 72  ]
{
[; ;ff.c: 1233: case 1 :
"1233
[e :U 73 ]
[; ;ff.c: 1234: bc = (UINT)clst; bc += bc / 2;
"1234
[e = _bc -> _clst `ui ]
[e =+ _bc / _bc -> -> 2 `i `ui ]
[; ;ff.c: 1235: res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
"1235
[e = _res ( _move_window (2 , _fs + . *U _fs 14 -> / _bc -> -> 512 `i `ui `ul ]
[; ;ff.c: 1236: if (res != FR_OK) break;
"1236
[e $ ! != -> _res `i -> . `E69 0 `i 74  ]
[e $U 71  ]
[e :U 74 ]
[; ;ff.c: 1237: p = fs->win + bc++ % ((UINT)512);
"1237
[e = _p + &U . *U _fs 18 * -> % ++ _bc -> -> 1 `i `ui -> -> 512 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux ]
[; ;ff.c: 1238: *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
"1238
[e = *U _p -> ? != & _clst -> -> -> 1 `i `l `ul -> -> 0 `i `ul : | & -> *U _p `i -> 15 `i << -> -> _val `uc `i -> 4 `i -> -> _val `uc `i `uc ]
[; ;ff.c: 1239: fs->wflag = 1;
"1239
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 1240: res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
"1240
[e = _res ( _move_window (2 , _fs + . *U _fs 14 -> / _bc -> -> 512 `i `ui `ul ]
[; ;ff.c: 1241: if (res != FR_OK) break;
"1241
[e $ ! != -> _res `i -> . `E69 0 `i 75  ]
[e $U 71  ]
[e :U 75 ]
[; ;ff.c: 1242: p = fs->win + bc % ((UINT)512);
"1242
[e = _p + &U . *U _fs 18 * -> % _bc -> -> 512 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux ]
[; ;ff.c: 1243: *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
"1243
[e = *U _p -> ? != & _clst -> -> -> 1 `i `l `ul -> -> 0 `i `ul : -> -> >> _val -> 4 `i `uc `i | & -> *U _p `i -> 240 `i & -> -> >> _val -> 8 `i `uc `i -> 15 `i `uc ]
[; ;ff.c: 1244: fs->wflag = 1;
"1244
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 1245: break;
"1245
[e $U 71  ]
[; ;ff.c: 1247: case 2 :
"1247
[e :U 76 ]
[; ;ff.c: 1248: res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)));
"1248
[e = _res ( _move_window (2 , _fs + . *U _fs 14 / _clst -> / -> -> 512 `i `ui -> -> 2 `i `ui `ul ]
[; ;ff.c: 1249: if (res != FR_OK) break;
"1249
[e $ ! != -> _res `i -> . `E69 0 `i 77  ]
[e $U 71  ]
[e :U 77 ]
[; ;ff.c: 1250: st_word(fs->win + clst * 2 % ((UINT)512), (WORD)val);
"1250
[e ( _st_word (2 , + &U . *U _fs 18 * -> % * _clst -> -> -> 2 `i `l `ul -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fs 18 `ui `ux -> _val `us ]
[; ;ff.c: 1251: fs->wflag = 1;
"1251
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 1252: break;
"1252
[e $U 71  ]
[; ;ff.c: 1254: case 3 :
"1254
[e :U 78 ]
[; ;ff.c: 1258: res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)));
"1258
[e = _res ( _move_window (2 , _fs + . *U _fs 14 / _clst -> / -> -> 512 `i `ui -> -> 4 `i `ui `ul ]
[; ;ff.c: 1259: if (res != FR_OK) break;
"1259
[e $ ! != -> _res `i -> . `E69 0 `i 79  ]
[e $U 71  ]
[e :U 79 ]
[; ;ff.c: 1260: if (!0 || fs->fs_type != 4) {
"1260
[e $ ! || ! != -> 0 `i -> 0 `i != -> . *U _fs 0 `i -> 4 `i 80  ]
{
[; ;ff.c: 1261: val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % ((UINT)512)) & 0xF0000000);
"1261
[e = _val | & _val -> -> 268435455 `l `ul & ( _ld_dword (1 -> + &U . *U _fs 18 * -> % * _clst -> -> -> 4 `i `l `ul -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fs 18 `ui `ux `*Cuc -> -268435456 `ul ]
"1262
}
[e :U 80 ]
[; ;ff.c: 1262: }
[; ;ff.c: 1263: st_dword(fs->win + clst * 4 % ((UINT)512), val);
"1263
[e ( _st_dword (2 , + &U . *U _fs 18 * -> % * _clst -> -> -> 4 `i `l `ul -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fs 18 `ui `ux _val ]
[; ;ff.c: 1264: fs->wflag = 1;
"1264
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 1265: break;
"1265
[e $U 71  ]
"1266
}
[; ;ff.c: 1266: }
[e $U 71  ]
"1232
[e :U 72 ]
[e [\ . *U _fs 0 , $ -> -> 1 `i `uc 73
 , $ -> -> 2 `i `uc 76
 , $ -> -> 3 `i `uc 78
 71 ]
"1266
[e :U 71 ]
"1267
}
[e :U 70 ]
[; ;ff.c: 1267: }
[; ;ff.c: 1268: return res;
"1268
[e ) _res ]
[e $UE 69  ]
[; ;ff.c: 1269: }
"1269
[e :UE 69 ]
}
"1414
[v _remove_chain `(E69 ~T0 @X0 1 sf3`*S2`ul`ul ]
"1419
{
[; ;ff.c: 1413: static
[; ;ff.c: 1414: FRESULT remove_chain (
[; ;ff.c: 1415: FFOBJID* obj,
[; ;ff.c: 1416: DWORD clst,
[; ;ff.c: 1417: DWORD pclst
[; ;ff.c: 1418: )
[; ;ff.c: 1419: {
[e :U _remove_chain ]
"1415
[v _obj `*S2 ~T0 @X0 1 r1 ]
"1416
[v _clst `ul ~T0 @X0 1 r2 ]
"1417
[v _pclst `ul ~T0 @X0 1 r3 ]
"1419
[f ]
"1420
[v _res `E69 ~T0 @X0 1 a ]
[; ;ff.c: 1420: FRESULT res = FR_OK;
[e = _res . `E69 0 ]
"1421
[v _nxt `ul ~T0 @X0 1 a ]
"1422
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 1421: DWORD nxt;
[; ;ff.c: 1422: FATFS *fs = obj->fs;
[e = _fs . *U _obj 0 ]
[; ;ff.c: 1430: if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
"1430
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U _fs 11 82  ]
[e ) . `E69 2 ]
[e $UE 81  ]
[e :U 82 ]
[; ;ff.c: 1433: if (pclst != 0 && (!0 || fs->fs_type != 4 || obj->stat != 2)) {
"1433
[e $ ! && != _pclst -> -> -> 0 `i `l `ul || || ! != -> 0 `i -> 0 `i != -> . *U _fs 0 `i -> 4 `i != -> . *U _obj 3 `i -> 2 `i 83  ]
{
[; ;ff.c: 1434: res = put_fat(fs, pclst, 0xFFFFFFFF);
"1434
[e = _res ( _put_fat (3 , , _fs _pclst -> -1 `ul ]
[; ;ff.c: 1435: if (res != FR_OK) return res;
"1435
[e $ ! != -> _res `i -> . `E69 0 `i 84  ]
[e ) _res ]
[e $UE 81  ]
[e :U 84 ]
"1436
}
[e :U 83 ]
[; ;ff.c: 1436: }
[; ;ff.c: 1439: do {
"1439
[e :U 87 ]
{
[; ;ff.c: 1440: nxt = get_fat(obj, clst);
"1440
[e = _nxt ( _get_fat (2 , _obj _clst ]
[; ;ff.c: 1441: if (nxt == 0) break;
"1441
[e $ ! == _nxt -> -> -> 0 `i `l `ul 88  ]
[e $U 86  ]
[e :U 88 ]
[; ;ff.c: 1442: if (nxt == 1) return FR_INT_ERR;
"1442
[e $ ! == _nxt -> -> -> 1 `i `l `ul 89  ]
[e ) . `E69 2 ]
[e $UE 81  ]
[e :U 89 ]
[; ;ff.c: 1443: if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
"1443
[e $ ! == _nxt -> -1 `ul 90  ]
[e ) . `E69 1 ]
[e $UE 81  ]
[e :U 90 ]
[; ;ff.c: 1444: if (!0 || fs->fs_type != 4) {
"1444
[e $ ! || ! != -> 0 `i -> 0 `i != -> . *U _fs 0 `i -> 4 `i 91  ]
{
[; ;ff.c: 1445: res = put_fat(fs, clst, 0);
"1445
[e = _res ( _put_fat (3 , , _fs _clst -> -> -> 0 `i `l `ul ]
[; ;ff.c: 1446: if (res != FR_OK) return res;
"1446
[e $ ! != -> _res `i -> . `E69 0 `i 92  ]
[e ) _res ]
[e $UE 81  ]
[e :U 92 ]
"1447
}
[e :U 91 ]
[; ;ff.c: 1447: }
[; ;ff.c: 1448: if (fs->free_clst < fs->n_fatent - 2) {
"1448
[e $ ! < . *U _fs 10 - . *U _fs 11 -> -> -> 2 `i `l `ul 93  ]
{
[; ;ff.c: 1449: fs->free_clst++;
"1449
[e ++ . *U _fs 10 -> -> -> 1 `i `l `ul ]
[; ;ff.c: 1450: fs->fsi_flag |= 1;
"1450
[e =| . *U _fs 4 -> -> 1 `i `uc ]
"1451
}
[e :U 93 ]
[; ;ff.c: 1451: }
[; ;ff.c: 1470: clst = nxt;
"1470
[e = _clst _nxt ]
"1471
}
[; ;ff.c: 1471: } while (clst < fs->n_fatent);
[e $ < _clst . *U _fs 11 87  ]
[e :U 86 ]
[; ;ff.c: 1499: return FR_OK;
"1499
[e ) . `E69 0 ]
[e $UE 81  ]
[; ;ff.c: 1500: }
"1500
[e :UE 81 ]
}
"1509
[v _create_chain `(ul ~T0 @X0 1 sf2`*S2`ul ]
"1513
{
[; ;ff.c: 1508: static
[; ;ff.c: 1509: DWORD create_chain (
[; ;ff.c: 1510: FFOBJID* obj,
[; ;ff.c: 1511: DWORD clst
[; ;ff.c: 1512: )
[; ;ff.c: 1513: {
[e :U _create_chain ]
"1510
[v _obj `*S2 ~T0 @X0 1 r1 ]
"1511
[v _clst `ul ~T0 @X0 1 r2 ]
"1513
[f ]
"1514
[v _cs `ul ~T0 @X0 1 a ]
[v _ncl `ul ~T0 @X0 1 a ]
[v _scl `ul ~T0 @X0 1 a ]
"1515
[v _res `E69 ~T0 @X0 1 a ]
"1516
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 1514: DWORD cs, ncl, scl;
[; ;ff.c: 1515: FRESULT res;
[; ;ff.c: 1516: FATFS *fs = obj->fs;
[e = _fs . *U _obj 0 ]
[; ;ff.c: 1519: if (clst == 0) {
"1519
[e $ ! == _clst -> -> -> 0 `i `l `ul 95  ]
{
[; ;ff.c: 1520: scl = fs->last_clst;
"1520
[e = _scl . *U _fs 9 ]
[; ;ff.c: 1521: if (scl == 0 || scl >= fs->n_fatent) scl = 1;
"1521
[e $ ! || == _scl -> -> -> 0 `i `l `ul >= _scl . *U _fs 11 96  ]
[e = _scl -> -> -> 1 `i `l `ul ]
[e :U 96 ]
"1522
}
[; ;ff.c: 1522: }
[e $U 97  ]
"1523
[e :U 95 ]
[; ;ff.c: 1523: else {
{
[; ;ff.c: 1524: cs = get_fat(obj, clst);
"1524
[e = _cs ( _get_fat (2 , _obj _clst ]
[; ;ff.c: 1525: if (cs < 2) return 1;
"1525
[e $ ! < _cs -> -> -> 2 `i `l `ul 98  ]
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 94  ]
[e :U 98 ]
[; ;ff.c: 1526: if (cs == 0xFFFFFFFF) return cs;
"1526
[e $ ! == _cs -> -1 `ul 99  ]
[e ) _cs ]
[e $UE 94  ]
[e :U 99 ]
[; ;ff.c: 1527: if (cs < fs->n_fatent) return cs;
"1527
[e $ ! < _cs . *U _fs 11 100  ]
[e ) _cs ]
[e $UE 94  ]
[e :U 100 ]
[; ;ff.c: 1528: scl = clst;
"1528
[e = _scl _clst ]
"1529
}
[e :U 97 ]
[; ;ff.c: 1529: }
[; ;ff.c: 1530: if (fs->free_clst == 0) return 0;
"1530
[e $ ! == . *U _fs 10 -> -> -> 0 `i `l `ul 101  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 94  ]
[e :U 101 ]
[; ;ff.c: 1558: {
"1558
{
[; ;ff.c: 1559: ncl = 0;
"1559
[e = _ncl -> -> -> 0 `i `l `ul ]
[; ;ff.c: 1560: if (scl == clst) {
"1560
[e $ ! == _scl _clst 102  ]
{
[; ;ff.c: 1561: ncl = scl + 1;
"1561
[e = _ncl + _scl -> -> -> 1 `i `l `ul ]
[; ;ff.c: 1562: if (ncl >= fs->n_fatent) ncl = 2;
"1562
[e $ ! >= _ncl . *U _fs 11 103  ]
[e = _ncl -> -> -> 2 `i `l `ul ]
[e :U 103 ]
[; ;ff.c: 1563: cs = get_fat(obj, ncl);
"1563
[e = _cs ( _get_fat (2 , _obj _ncl ]
[; ;ff.c: 1564: if (cs == 1 || cs == 0xFFFFFFFF) return cs;
"1564
[e $ ! || == _cs -> -> -> 1 `i `l `ul == _cs -> -1 `ul 104  ]
[e ) _cs ]
[e $UE 94  ]
[e :U 104 ]
[; ;ff.c: 1565: if (cs != 0) {
"1565
[e $ ! != _cs -> -> -> 0 `i `l `ul 105  ]
{
[; ;ff.c: 1566: cs = fs->last_clst;
"1566
[e = _cs . *U _fs 9 ]
[; ;ff.c: 1567: if (cs >= 2 && cs < fs->n_fatent) scl = cs;
"1567
[e $ ! && >= _cs -> -> -> 2 `i `l `ul < _cs . *U _fs 11 106  ]
[e = _scl _cs ]
[e :U 106 ]
[; ;ff.c: 1568: ncl = 0;
"1568
[e = _ncl -> -> -> 0 `i `l `ul ]
"1569
}
[e :U 105 ]
"1570
}
[e :U 102 ]
[; ;ff.c: 1569: }
[; ;ff.c: 1570: }
[; ;ff.c: 1571: if (ncl == 0) {
"1571
[e $ ! == _ncl -> -> -> 0 `i `l `ul 107  ]
{
[; ;ff.c: 1572: ncl = scl;
"1572
[e = _ncl _scl ]
[; ;ff.c: 1573: for (;;) {
"1573
{
[e :U 108 ]
{
[; ;ff.c: 1574: ncl++;
"1574
[e ++ _ncl -> -> -> 1 `i `l `ul ]
[; ;ff.c: 1575: if (ncl >= fs->n_fatent) {
"1575
[e $ ! >= _ncl . *U _fs 11 111  ]
{
[; ;ff.c: 1576: ncl = 2;
"1576
[e = _ncl -> -> -> 2 `i `l `ul ]
[; ;ff.c: 1577: if (ncl > scl) return 0;
"1577
[e $ ! > _ncl _scl 112  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 94  ]
[e :U 112 ]
"1578
}
[e :U 111 ]
[; ;ff.c: 1578: }
[; ;ff.c: 1579: cs = get_fat(obj, ncl);
"1579
[e = _cs ( _get_fat (2 , _obj _ncl ]
[; ;ff.c: 1580: if (cs == 0) break;
"1580
[e $ ! == _cs -> -> -> 0 `i `l `ul 113  ]
[e $U 109  ]
[e :U 113 ]
[; ;ff.c: 1581: if (cs == 1 || cs == 0xFFFFFFFF) return cs;
"1581
[e $ ! || == _cs -> -> -> 1 `i `l `ul == _cs -> -1 `ul 114  ]
[e ) _cs ]
[e $UE 94  ]
[e :U 114 ]
[; ;ff.c: 1582: if (ncl == scl) return 0;
"1582
[e $ ! == _ncl _scl 115  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 94  ]
[e :U 115 ]
"1583
}
[; ;ff.c: 1583: }
[e $U 108  ]
[e :U 109 ]
}
"1584
}
[e :U 107 ]
[; ;ff.c: 1584: }
[; ;ff.c: 1585: res = put_fat(fs, ncl, 0xFFFFFFFF);
"1585
[e = _res ( _put_fat (3 , , _fs _ncl -> -1 `ul ]
[; ;ff.c: 1586: if (res == FR_OK && clst != 0) {
"1586
[e $ ! && == -> _res `i -> . `E69 0 `i != _clst -> -> -> 0 `i `l `ul 116  ]
{
[; ;ff.c: 1587: res = put_fat(fs, clst, ncl);
"1587
[e = _res ( _put_fat (3 , , _fs _clst _ncl ]
"1588
}
[e :U 116 ]
"1589
}
[; ;ff.c: 1588: }
[; ;ff.c: 1589: }
[; ;ff.c: 1591: if (res == FR_OK) {
"1591
[e $ ! == -> _res `i -> . `E69 0 `i 117  ]
{
[; ;ff.c: 1592: fs->last_clst = ncl;
"1592
[e = . *U _fs 9 _ncl ]
[; ;ff.c: 1593: if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
"1593
[e $ ! <= . *U _fs 10 - . *U _fs 11 -> -> -> 2 `i `l `ul 118  ]
[e -- . *U _fs 10 -> -> -> 1 `i `l `ul ]
[e :U 118 ]
[; ;ff.c: 1594: fs->fsi_flag |= 1;
"1594
[e =| . *U _fs 4 -> -> 1 `i `uc ]
"1595
}
[; ;ff.c: 1595: } else {
[e $U 119  ]
[e :U 117 ]
{
[; ;ff.c: 1596: ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
"1596
[e = _ncl ? == -> _res `i -> . `E69 1 `i : -> -1 `ul -> -> -> 1 `i `l `ul ]
"1597
}
[e :U 119 ]
[; ;ff.c: 1597: }
[; ;ff.c: 1599: return ncl;
"1599
[e ) _ncl ]
[e $UE 94  ]
[; ;ff.c: 1600: }
"1600
[e :UE 94 ]
}
"1644
[v _dir_clear `(E69 ~T0 @X0 1 sf2`*S1`ul ]
"1648
{
[; ;ff.c: 1643: static
[; ;ff.c: 1644: FRESULT dir_clear (
[; ;ff.c: 1645: FATFS *fs,
[; ;ff.c: 1646: DWORD clst
[; ;ff.c: 1647: )
[; ;ff.c: 1648: {
[e :U _dir_clear ]
"1645
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1646
[v _clst `ul ~T0 @X0 1 r2 ]
"1648
[f ]
"1649
[v _sect `ul ~T0 @X0 1 a ]
"1650
[v _n `ui ~T0 @X0 1 a ]
[v _szb `ui ~T0 @X0 1 a ]
"1651
[v _ibuf `*uc ~T0 @X0 1 a ]
[; ;ff.c: 1649: DWORD sect;
[; ;ff.c: 1650: UINT n, szb;
[; ;ff.c: 1651: BYTE *ibuf;
[; ;ff.c: 1654: if (sync_window(fs) != FR_OK) return FR_DISK_ERR;
"1654
[e $ ! != -> ( _sync_window (1 _fs `i -> . `E69 0 `i 121  ]
[e ) . `E69 1 ]
[e $UE 120  ]
[e :U 121 ]
[; ;ff.c: 1655: sect = clst2sect(fs, clst);
"1655
[e = _sect ( _clst2sect (2 , _fs _clst ]
[; ;ff.c: 1656: fs->winsect = sect;
"1656
[e = . *U _fs 17 _sect ]
[; ;ff.c: 1657: mem_set(fs->win, 0, ((UINT)512));
"1657
[e ( _mem_set (3 , , -> &U . *U _fs 18 `*v -> 0 `i -> -> 512 `i `ui ]
[; ;ff.c: 1668: {
"1668
{
[; ;ff.c: 1669: ibuf = fs->win; szb = 1;
"1669
[e = _ibuf &U . *U _fs 18 ]
[e = _szb -> -> 1 `i `ui ]
[; ;ff.c: 1670: for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;
"1670
{
[e = _n -> -> 0 `i `ui ]
[e $U 125  ]
[e :U 122 ]
[e =+ _n _szb ]
[e :U 125 ]
[e $ && < _n -> . *U _fs 7 `ui == -> ( _disk_write (4 , , , . *U _fs 1 -> _ibuf `*Cuc + _sect -> _n `ul _szb `i -> . `E216 0 `i 122  ]
[e :U 123 ]
}
"1671
}
[; ;ff.c: 1671: }
[; ;ff.c: 1672: return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
"1672
[e ) -> ? == _n -> . *U _fs 7 `ui : -> . `E69 0 `i -> . `E69 1 `i `E69 ]
[e $UE 120  ]
[; ;ff.c: 1673: }
"1673
[e :UE 120 ]
}
"1684
[v _dir_sdi `(E69 ~T0 @X0 1 sf2`*S4`ul ]
"1688
{
[; ;ff.c: 1683: static
[; ;ff.c: 1684: FRESULT dir_sdi (
[; ;ff.c: 1685: DIR* dp,
[; ;ff.c: 1686: DWORD ofs
[; ;ff.c: 1687: )
[; ;ff.c: 1688: {
[e :U _dir_sdi ]
"1685
[v _dp `*S4 ~T0 @X0 1 r1 ]
"1686
[v _ofs `ul ~T0 @X0 1 r2 ]
"1688
[f ]
"1689
[v _csz `ul ~T0 @X0 1 a ]
[v _clst `ul ~T0 @X0 1 a ]
"1690
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 1689: DWORD csz, clst;
[; ;ff.c: 1690: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
[; ;ff.c: 1693: if (ofs >= (DWORD)((0 && fs->fs_type == 4) ? 0x10000000 : 0x200000) || ofs % 32) {
"1693
[e $ ! || >= _ofs -> ? && != -> 0 `i -> 0 `i == -> . *U _fs 0 `i -> 4 `i : -> 268435456 `l -> 2097152 `l `ul != % _ofs -> -> -> 32 `i `l `ul -> -> 0 `i `ul 127  ]
{
[; ;ff.c: 1694: return FR_INT_ERR;
"1694
[e ) . `E69 2 ]
[e $UE 126  ]
"1695
}
[e :U 127 ]
[; ;ff.c: 1695: }
[; ;ff.c: 1696: dp->dptr = ofs;
"1696
[e = . *U _dp 1 _ofs ]
[; ;ff.c: 1697: clst = dp->obj.sclust;
"1697
[e = _clst . . *U _dp 0 4 ]
[; ;ff.c: 1698: if (clst == 0 && fs->fs_type >= 3) {
"1698
[e $ ! && == _clst -> -> -> 0 `i `l `ul >= -> . *U _fs 0 `i -> 3 `i 128  ]
{
[; ;ff.c: 1699: clst = fs->dirbase;
"1699
[e = _clst . *U _fs 15 ]
[; ;ff.c: 1700: if (0) dp->obj.stat = 0;
"1700
[e $ ! != -> 0 `i -> 0 `i 129  ]
[e = . . *U _dp 0 3 -> -> 0 `i `uc ]
[e :U 129 ]
"1701
}
[e :U 128 ]
[; ;ff.c: 1701: }
[; ;ff.c: 1703: if (clst == 0) {
"1703
[e $ ! == _clst -> -> -> 0 `i `l `ul 130  ]
{
[; ;ff.c: 1704: if (ofs / 32 >= fs->n_rootdir) return FR_INT_ERR;
"1704
[e $ ! >= / _ofs -> -> -> 32 `i `l `ul -> . *U _fs 6 `ul 131  ]
[e ) . `E69 2 ]
[e $UE 126  ]
[e :U 131 ]
[; ;ff.c: 1705: dp->sect = fs->dirbase;
"1705
[e = . *U _dp 3 . *U _fs 15 ]
"1707
}
[; ;ff.c: 1707: } else {
[e $U 132  ]
[e :U 130 ]
{
[; ;ff.c: 1708: csz = (DWORD)fs->csize * ((UINT)512);
"1708
[e = _csz * -> . *U _fs 7 `ul -> -> -> 512 `i `ui `ul ]
[; ;ff.c: 1709: while (ofs >= csz) {
"1709
[e $U 133  ]
[e :U 134 ]
{
[; ;ff.c: 1710: clst = get_fat(&dp->obj, clst);
"1710
[e = _clst ( _get_fat (2 , &U . *U _dp 0 _clst ]
[; ;ff.c: 1711: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
"1711
[e $ ! == _clst -> -1 `ul 136  ]
[e ) . `E69 1 ]
[e $UE 126  ]
[e :U 136 ]
[; ;ff.c: 1712: if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;
"1712
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U _fs 11 137  ]
[e ) . `E69 2 ]
[e $UE 126  ]
[e :U 137 ]
[; ;ff.c: 1713: ofs -= csz;
"1713
[e =- _ofs _csz ]
"1714
}
[e :U 133 ]
"1709
[e $ >= _ofs _csz 134  ]
[e :U 135 ]
[; ;ff.c: 1714: }
[; ;ff.c: 1715: dp->sect = clst2sect(fs, clst);
"1715
[e = . *U _dp 3 ( _clst2sect (2 , _fs _clst ]
"1716
}
[e :U 132 ]
[; ;ff.c: 1716: }
[; ;ff.c: 1717: dp->clust = clst;
"1717
[e = . *U _dp 2 _clst ]
[; ;ff.c: 1718: if (dp->sect == 0) return FR_INT_ERR;
"1718
[e $ ! == . *U _dp 3 -> -> -> 0 `i `l `ul 138  ]
[e ) . `E69 2 ]
[e $UE 126  ]
[e :U 138 ]
[; ;ff.c: 1719: dp->sect += ofs / ((UINT)512);
"1719
[e =+ . *U _dp 3 / _ofs -> -> -> 512 `i `ui `ul ]
[; ;ff.c: 1720: dp->dir = fs->win + (ofs % ((UINT)512));
"1720
[e = . *U _dp 4 + &U . *U _fs 18 * -> % _ofs -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fs 18 `ui `ux ]
[; ;ff.c: 1722: return FR_OK;
"1722
[e ) . `E69 0 ]
[e $UE 126  ]
[; ;ff.c: 1723: }
"1723
[e :UE 126 ]
}
"1733
[v _dir_next `(E69 ~T0 @X0 1 sf2`*S4`i ]
"1737
{
[; ;ff.c: 1732: static
[; ;ff.c: 1733: FRESULT dir_next (
[; ;ff.c: 1734: DIR* dp,
[; ;ff.c: 1735: int stretch
[; ;ff.c: 1736: )
[; ;ff.c: 1737: {
[e :U _dir_next ]
"1734
[v _dp `*S4 ~T0 @X0 1 r1 ]
"1735
[v _stretch `i ~T0 @X0 1 r2 ]
"1737
[f ]
"1738
[v _ofs `ul ~T0 @X0 1 a ]
[v _clst `ul ~T0 @X0 1 a ]
"1739
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 1738: DWORD ofs, clst;
[; ;ff.c: 1739: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
[; ;ff.c: 1742: ofs = dp->dptr + 32;
"1742
[e = _ofs + . *U _dp 1 -> -> -> 32 `i `l `ul ]
[; ;ff.c: 1743: if (dp->sect == 0 || ofs >= (DWORD)((0 && fs->fs_type == 4) ? 0x10000000 : 0x200000)) return FR_NO_FILE;
"1743
[e $ ! || == . *U _dp 3 -> -> -> 0 `i `l `ul >= _ofs -> ? && != -> 0 `i -> 0 `i == -> . *U _fs 0 `i -> 4 `i : -> 268435456 `l -> 2097152 `l `ul 140  ]
[e ) . `E69 4 ]
[e $UE 139  ]
[e :U 140 ]
[; ;ff.c: 1745: if (ofs % ((UINT)512) == 0) {
"1745
[e $ ! == % _ofs -> -> -> 512 `i `ui `ul -> -> -> 0 `i `l `ul 141  ]
{
[; ;ff.c: 1746: dp->sect++;
"1746
[e ++ . *U _dp 3 -> -> -> 1 `i `l `ul ]
[; ;ff.c: 1748: if (dp->clust == 0) {
"1748
[e $ ! == . *U _dp 2 -> -> -> 0 `i `l `ul 142  ]
{
[; ;ff.c: 1749: if (ofs / 32 >= fs->n_rootdir) {
"1749
[e $ ! >= / _ofs -> -> -> 32 `i `l `ul -> . *U _fs 6 `ul 143  ]
{
[; ;ff.c: 1750: dp->sect = 0; return FR_NO_FILE;
"1750
[e = . *U _dp 3 -> -> -> 0 `i `l `ul ]
[e ) . `E69 4 ]
[e $UE 139  ]
"1751
}
[e :U 143 ]
"1752
}
[; ;ff.c: 1751: }
[; ;ff.c: 1752: }
[e $U 144  ]
"1753
[e :U 142 ]
[; ;ff.c: 1753: else {
{
[; ;ff.c: 1754: if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0) {
"1754
[e $ ! == & / _ofs -> -> -> 512 `i `ui `ul -> - -> . *U _fs 7 `ui -> -> 1 `i `ui `ul -> -> -> 0 `i `l `ul 145  ]
{
[; ;ff.c: 1755: clst = get_fat(&dp->obj, dp->clust);
"1755
[e = _clst ( _get_fat (2 , &U . *U _dp 0 . *U _dp 2 ]
[; ;ff.c: 1756: if (clst <= 1) return FR_INT_ERR;
"1756
[e $ ! <= _clst -> -> -> 1 `i `l `ul 146  ]
[e ) . `E69 2 ]
[e $UE 139  ]
[e :U 146 ]
[; ;ff.c: 1757: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
"1757
[e $ ! == _clst -> -1 `ul 147  ]
[e ) . `E69 1 ]
[e $UE 139  ]
[e :U 147 ]
[; ;ff.c: 1758: if (clst >= fs->n_fatent) {
"1758
[e $ ! >= _clst . *U _fs 11 148  ]
{
[; ;ff.c: 1760: if (!stretch) {
"1760
[e $ ! ! != _stretch -> 0 `i 149  ]
{
[; ;ff.c: 1761: dp->sect = 0; return FR_NO_FILE;
"1761
[e = . *U _dp 3 -> -> -> 0 `i `l `ul ]
[e ) . `E69 4 ]
[e $UE 139  ]
"1762
}
[e :U 149 ]
[; ;ff.c: 1762: }
[; ;ff.c: 1763: clst = create_chain(&dp->obj, dp->clust);
"1763
[e = _clst ( _create_chain (2 , &U . *U _dp 0 . *U _dp 2 ]
[; ;ff.c: 1764: if (clst == 0) return FR_DENIED;
"1764
[e $ ! == _clst -> -> -> 0 `i `l `ul 150  ]
[e ) . `E69 7 ]
[e $UE 139  ]
[e :U 150 ]
[; ;ff.c: 1765: if (clst == 1) return FR_INT_ERR;
"1765
[e $ ! == _clst -> -> -> 1 `i `l `ul 151  ]
[e ) . `E69 2 ]
[e $UE 139  ]
[e :U 151 ]
[; ;ff.c: 1766: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
"1766
[e $ ! == _clst -> -1 `ul 152  ]
[e ) . `E69 1 ]
[e $UE 139  ]
[e :U 152 ]
[; ;ff.c: 1767: if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;
"1767
[e $ ! != -> ( _dir_clear (2 , _fs _clst `i -> . `E69 0 `i 153  ]
[e ) . `E69 1 ]
[e $UE 139  ]
[e :U 153 ]
[; ;ff.c: 1768: if (0) dp->obj.stat |= 4;
"1768
[e $ ! != -> 0 `i -> 0 `i 154  ]
[e =| . . *U _dp 0 3 -> -> 4 `i `uc ]
[e :U 154 ]
"1773
}
[e :U 148 ]
[; ;ff.c: 1773: }
[; ;ff.c: 1774: dp->clust = clst;
"1774
[e = . *U _dp 2 _clst ]
[; ;ff.c: 1775: dp->sect = clst2sect(fs, clst);
"1775
[e = . *U _dp 3 ( _clst2sect (2 , _fs _clst ]
"1776
}
[e :U 145 ]
"1777
}
[e :U 144 ]
"1778
}
[e :U 141 ]
[; ;ff.c: 1776: }
[; ;ff.c: 1777: }
[; ;ff.c: 1778: }
[; ;ff.c: 1779: dp->dptr = ofs;
"1779
[e = . *U _dp 1 _ofs ]
[; ;ff.c: 1780: dp->dir = fs->win + ofs % ((UINT)512);
"1780
[e = . *U _dp 4 + &U . *U _fs 18 * -> % _ofs -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fs 18 `ui `ux ]
[; ;ff.c: 1782: return FR_OK;
"1782
[e ) . `E69 0 ]
[e $UE 139  ]
[; ;ff.c: 1783: }
"1783
[e :UE 139 ]
}
"1794
[v _dir_alloc `(E69 ~T0 @X0 1 sf2`*S4`ui ]
"1798
{
[; ;ff.c: 1793: static
[; ;ff.c: 1794: FRESULT dir_alloc (
[; ;ff.c: 1795: DIR* dp,
[; ;ff.c: 1796: UINT nent
[; ;ff.c: 1797: )
[; ;ff.c: 1798: {
[e :U _dir_alloc ]
"1795
[v _dp `*S4 ~T0 @X0 1 r1 ]
"1796
[v _nent `ui ~T0 @X0 1 r2 ]
"1798
[f ]
"1799
[v _res `E69 ~T0 @X0 1 a ]
"1800
[v _n `ui ~T0 @X0 1 a ]
"1801
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 1799: FRESULT res;
[; ;ff.c: 1800: UINT n;
[; ;ff.c: 1801: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
[; ;ff.c: 1804: res = dir_sdi(dp, 0);
"1804
[e = _res ( _dir_sdi (2 , _dp -> -> -> 0 `i `l `ul ]
[; ;ff.c: 1805: if (res == FR_OK) {
"1805
[e $ ! == -> _res `i -> . `E69 0 `i 156  ]
{
[; ;ff.c: 1806: n = 0;
"1806
[e = _n -> -> 0 `i `ui ]
[; ;ff.c: 1807: do {
"1807
[e :U 159 ]
{
[; ;ff.c: 1808: res = move_window(fs, dp->sect);
"1808
[e = _res ( _move_window (2 , _fs . *U _dp 3 ]
[; ;ff.c: 1809: if (res != FR_OK) break;
"1809
[e $ ! != -> _res `i -> . `E69 0 `i 160  ]
[e $U 158  ]
[e :U 160 ]
[; ;ff.c: 1813: if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
"1813
[e $ ! || == -> *U + . *U _dp 4 * -> -> 0 `i `x -> -> # *U . *U _dp 4 `i `x `i -> 229 `i == -> *U + . *U _dp 4 * -> -> 0 `i `x -> -> # *U . *U _dp 4 `i `x `i -> 0 `i 161  ]
{
[; ;ff.c: 1815: if (++n == nent) break;
"1815
[e $ ! == =+ _n -> -> 1 `i `ui _nent 162  ]
[e $U 158  ]
[e :U 162 ]
"1816
}
[; ;ff.c: 1816: } else {
[e $U 163  ]
[e :U 161 ]
{
[; ;ff.c: 1817: n = 0;
"1817
[e = _n -> -> 0 `i `ui ]
"1818
}
[e :U 163 ]
[; ;ff.c: 1818: }
[; ;ff.c: 1819: res = dir_next(dp, 1);
"1819
[e = _res ( _dir_next (2 , _dp -> 1 `i ]
"1820
}
[; ;ff.c: 1820: } while (res == FR_OK);
[e $ == -> _res `i -> . `E69 0 `i 159  ]
[e :U 158 ]
"1821
}
[e :U 156 ]
[; ;ff.c: 1821: }
[; ;ff.c: 1823: if (res == FR_NO_FILE) res = FR_DENIED;
"1823
[e $ ! == -> _res `i -> . `E69 4 `i 164  ]
[e = _res . `E69 7 ]
[e :U 164 ]
[; ;ff.c: 1824: return res;
"1824
[e ) _res ]
[e $UE 155  ]
[; ;ff.c: 1825: }
"1825
[e :UE 155 ]
}
"1837
[v _ld_clust `(ul ~T0 @X0 1 sf2`*S1`*Cuc ]
"1841
{
[; ;ff.c: 1836: static
[; ;ff.c: 1837: DWORD ld_clust (
[; ;ff.c: 1838: FATFS* fs,
[; ;ff.c: 1839: const BYTE* dir
[; ;ff.c: 1840: )
[; ;ff.c: 1841: {
[e :U _ld_clust ]
"1838
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1839
[v _dir `*Cuc ~T0 @X0 1 r2 ]
"1841
[f ]
"1842
[v _cl `ul ~T0 @X0 1 a ]
[; ;ff.c: 1842: DWORD cl;
[; ;ff.c: 1844: cl = ld_word(dir + 26);
"1844
[e = _cl -> ( _ld_word (1 + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `ul ]
[; ;ff.c: 1845: if (fs->fs_type == 3) {
"1845
[e $ ! == -> . *U _fs 0 `i -> 3 `i 166  ]
{
[; ;ff.c: 1846: cl |= (DWORD)ld_word(dir + 20) << 16;
"1846
[e =| _cl << -> ( _ld_word (1 + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `ul -> 16 `i ]
"1847
}
[e :U 166 ]
[; ;ff.c: 1847: }
[; ;ff.c: 1849: return cl;
"1849
[e ) _cl ]
[e $UE 165  ]
[; ;ff.c: 1850: }
"1850
[e :UE 165 ]
}
"1855
[v _st_clust `(v ~T0 @X0 1 sf3`*S1`*uc`ul ]
"1860
{
[; ;ff.c: 1854: static
[; ;ff.c: 1855: void st_clust (
[; ;ff.c: 1856: FATFS* fs,
[; ;ff.c: 1857: BYTE* dir,
[; ;ff.c: 1858: DWORD cl
[; ;ff.c: 1859: )
[; ;ff.c: 1860: {
[e :U _st_clust ]
"1856
[v _fs `*S1 ~T0 @X0 1 r1 ]
"1857
[v _dir `*uc ~T0 @X0 1 r2 ]
"1858
[v _cl `ul ~T0 @X0 1 r3 ]
"1860
[f ]
[; ;ff.c: 1861: st_word(dir + 26, (WORD)cl);
"1861
[e ( _st_word (2 , + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x -> _cl `us ]
[; ;ff.c: 1862: if (fs->fs_type == 3) {
"1862
[e $ ! == -> . *U _fs 0 `i -> 3 `i 168  ]
{
[; ;ff.c: 1863: st_word(dir + 20, (WORD)(cl >> 16));
"1863
[e ( _st_word (2 , + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x -> >> _cl -> 16 `i `us ]
"1864
}
[e :U 168 ]
[; ;ff.c: 1864: }
[; ;ff.c: 1865: }
"1865
[e :UE 167 ]
}
"1875
[v _cmp_lfn `(i ~T0 @X0 1 sf2`*Cus`*uc ]
"1879
{
[; ;ff.c: 1874: static
[; ;ff.c: 1875: int cmp_lfn (
[; ;ff.c: 1876: const WCHAR* lfnbuf,
[; ;ff.c: 1877: BYTE* dir
[; ;ff.c: 1878: )
[; ;ff.c: 1879: {
[e :U _cmp_lfn ]
"1876
[v _lfnbuf `*Cus ~T0 @X0 1 r1 ]
"1877
[v _dir `*uc ~T0 @X0 1 r2 ]
"1879
[f ]
"1880
[v _i `ui ~T0 @X0 1 a ]
[v _s `ui ~T0 @X0 1 a ]
"1881
[v _wc `us ~T0 @X0 1 a ]
[v _uc `us ~T0 @X0 1 a ]
[; ;ff.c: 1880: UINT i, s;
[; ;ff.c: 1881: WCHAR wc, uc;
[; ;ff.c: 1884: if (ld_word(dir + 26) != 0) return 0;
"1884
[e $ ! != -> ( _ld_word (1 -> + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Cuc `ui -> -> 0 `i `ui 170  ]
[e ) -> 0 `i ]
[e $UE 169  ]
[e :U 170 ]
[; ;ff.c: 1886: i = ((dir[0] & 0x3F) - 1) * 13;
"1886
[e = _i -> * - & -> *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x `i -> 63 `i -> 1 `i -> 13 `i `ui ]
[; ;ff.c: 1888: for (wc = 1, s = 0; s < 13; s++) {
"1888
{
[e ; = _wc -> -> 1 `i `us = _s -> -> 0 `i `ui ]
[e $ < _s -> -> 13 `i `ui 171  ]
[e $U 172  ]
[e :U 171 ]
{
[; ;ff.c: 1889: uc = ld_word(dir + LfnOfs[s]);
"1889
[e = _uc ( _ld_word (1 -> + _dir * -> *U + &U _LfnOfs * -> _s `ux -> -> # *U &U _LfnOfs `ui `ux `ux -> -> # *U _dir `ui `ux `*Cuc ]
[; ;ff.c: 1890: if (wc != 0) {
"1890
[e $ ! != -> _wc `ui -> -> 0 `i `ui 174  ]
{
[; ;ff.c: 1891: if (i >= 100 || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {
"1891
[e $ ! || >= _i -> -> 100 `i `ui != ( _ff_wtoupper (1 -> _uc `ul ( _ff_wtoupper (1 -> *U + _lfnbuf * -> ++ _i -> -> 1 `i `ui `ux -> -> # *U _lfnbuf `ui `ux `ul 175  ]
{
[; ;ff.c: 1892: return 0;
"1892
[e ) -> 0 `i ]
[e $UE 169  ]
"1893
}
[e :U 175 ]
[; ;ff.c: 1893: }
[; ;ff.c: 1894: wc = uc;
"1894
[e = _wc _uc ]
"1895
}
[; ;ff.c: 1895: } else {
[e $U 176  ]
[e :U 174 ]
{
[; ;ff.c: 1896: if (uc != 0xFFFF) return 0;
"1896
[e $ ! != -> _uc `ui -> 65535 `ui 177  ]
[e ) -> 0 `i ]
[e $UE 169  ]
[e :U 177 ]
"1897
}
[e :U 176 ]
"1898
}
"1888
[e ++ _s -> -> 1 `i `ui ]
[e $ < _s -> -> 13 `i `ui 171  ]
[e :U 172 ]
"1898
}
[; ;ff.c: 1897: }
[; ;ff.c: 1898: }
[; ;ff.c: 1900: if ((dir[0] & 0x40) && wc && lfnbuf[i]) return 0;
"1900
[e $ ! && && != & -> *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x `i -> 64 `i -> 0 `i != -> _wc `ui -> -> -> 0 `i `us `ui != -> *U + _lfnbuf * -> _i `ux -> -> # *U _lfnbuf `ui `ux `ui -> -> -> 0 `i `Cus `ui 178  ]
[e ) -> 0 `i ]
[e $UE 169  ]
[e :U 178 ]
[; ;ff.c: 1902: return 1;
"1902
[e ) -> 1 `i ]
[e $UE 169  ]
[; ;ff.c: 1903: }
"1903
[e :UE 169 ]
}
"1911
[v _pick_lfn `(i ~T0 @X0 1 sf2`*us`*uc ]
"1915
{
[; ;ff.c: 1910: static
[; ;ff.c: 1911: int pick_lfn (
[; ;ff.c: 1912: WCHAR* lfnbuf,
[; ;ff.c: 1913: BYTE* dir
[; ;ff.c: 1914: )
[; ;ff.c: 1915: {
[e :U _pick_lfn ]
"1912
[v _lfnbuf `*us ~T0 @X0 1 r1 ]
"1913
[v _dir `*uc ~T0 @X0 1 r2 ]
"1915
[f ]
"1916
[v _i `ui ~T0 @X0 1 a ]
[v _s `ui ~T0 @X0 1 a ]
"1917
[v _wc `us ~T0 @X0 1 a ]
[v _uc `us ~T0 @X0 1 a ]
[; ;ff.c: 1916: UINT i, s;
[; ;ff.c: 1917: WCHAR wc, uc;
[; ;ff.c: 1920: if (ld_word(dir + 26) != 0) return 0;
"1920
[e $ ! != -> ( _ld_word (1 -> + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `*Cuc `ui -> -> 0 `i `ui 180  ]
[e ) -> 0 `i ]
[e $UE 179  ]
[e :U 180 ]
[; ;ff.c: 1922: i = ((dir[0] & ~0x40) - 1) * 13;
"1922
[e = _i -> * - & -> *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x `i ~ -> 64 `i -> 1 `i -> 13 `i `ui ]
[; ;ff.c: 1924: for (wc = 1, s = 0; s < 13; s++) {
"1924
{
[e ; = _wc -> -> 1 `i `us = _s -> -> 0 `i `ui ]
[e $ < _s -> -> 13 `i `ui 181  ]
[e $U 182  ]
[e :U 181 ]
{
[; ;ff.c: 1925: uc = ld_word(dir + LfnOfs[s]);
"1925
[e = _uc ( _ld_word (1 -> + _dir * -> *U + &U _LfnOfs * -> _s `ux -> -> # *U &U _LfnOfs `ui `ux `ux -> -> # *U _dir `ui `ux `*Cuc ]
[; ;ff.c: 1926: if (wc != 0) {
"1926
[e $ ! != -> _wc `ui -> -> 0 `i `ui 184  ]
{
[; ;ff.c: 1927: if (i >= 100) return 0;
"1927
[e $ ! >= _i -> -> 100 `i `ui 185  ]
[e ) -> 0 `i ]
[e $UE 179  ]
[e :U 185 ]
[; ;ff.c: 1928: lfnbuf[i++] = wc = uc;
"1928
[e = *U + _lfnbuf * -> ++ _i -> -> 1 `i `ui `ux -> -> # *U _lfnbuf `ui `ux = _wc _uc ]
"1929
}
[; ;ff.c: 1929: } else {
[e $U 186  ]
[e :U 184 ]
{
[; ;ff.c: 1930: if (uc != 0xFFFF) return 0;
"1930
[e $ ! != -> _uc `ui -> 65535 `ui 187  ]
[e ) -> 0 `i ]
[e $UE 179  ]
[e :U 187 ]
"1931
}
[e :U 186 ]
"1932
}
"1924
[e ++ _s -> -> 1 `i `ui ]
[e $ < _s -> -> 13 `i `ui 181  ]
[e :U 182 ]
"1932
}
[; ;ff.c: 1931: }
[; ;ff.c: 1932: }
[; ;ff.c: 1934: if (dir[0] & 0x40) {
"1934
[e $ ! != & -> *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x `i -> 64 `i -> 0 `i 188  ]
{
[; ;ff.c: 1935: if (i >= 100) return 0;
"1935
[e $ ! >= _i -> -> 100 `i `ui 189  ]
[e ) -> 0 `i ]
[e $UE 179  ]
[e :U 189 ]
[; ;ff.c: 1936: lfnbuf[i] = 0;
"1936
[e = *U + _lfnbuf * -> _i `ux -> -> # *U _lfnbuf `ui `ux -> -> 0 `i `us ]
"1937
}
[e :U 188 ]
[; ;ff.c: 1937: }
[; ;ff.c: 1939: return 1;
"1939
[e ) -> 1 `i ]
[e $UE 179  ]
[; ;ff.c: 1940: }
"1940
[e :UE 179 ]
}
"1949
[v _put_lfn `(v ~T0 @X0 1 sf4`*Cus`*uc`uc`uc ]
"1955
{
[; ;ff.c: 1948: static
[; ;ff.c: 1949: void put_lfn (
[; ;ff.c: 1950: const WCHAR* lfn,
[; ;ff.c: 1951: BYTE* dir,
[; ;ff.c: 1952: BYTE ord,
[; ;ff.c: 1953: BYTE sum
[; ;ff.c: 1954: )
[; ;ff.c: 1955: {
[e :U _put_lfn ]
"1950
[v _lfn `*Cus ~T0 @X0 1 r1 ]
"1951
[v _dir `*uc ~T0 @X0 1 r2 ]
"1952
[v _ord `uc ~T0 @X0 1 r3 ]
"1953
[v _sum `uc ~T0 @X0 1 r4 ]
"1955
[f ]
"1956
[v _i `ui ~T0 @X0 1 a ]
[v _s `ui ~T0 @X0 1 a ]
"1957
[v _wc `us ~T0 @X0 1 a ]
[; ;ff.c: 1956: UINT i, s;
[; ;ff.c: 1957: WCHAR wc;
[; ;ff.c: 1960: dir[13] = sum;
"1960
[e = *U + _dir * -> -> 13 `i `x -> -> # *U _dir `i `x _sum ]
[; ;ff.c: 1961: dir[11] = 0x0F;
"1961
[e = *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 15 `i `uc ]
[; ;ff.c: 1962: dir[12] = 0;
"1962
[e = *U + _dir * -> -> 12 `i `x -> -> # *U _dir `i `x -> -> 0 `i `uc ]
[; ;ff.c: 1963: st_word(dir + 26, 0);
"1963
[e ( _st_word (2 , + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x -> -> 0 `i `us ]
[; ;ff.c: 1965: i = (ord - 1) * 13;
"1965
[e = _i -> * - -> _ord `i -> 1 `i -> 13 `i `ui ]
[; ;ff.c: 1966: s = wc = 0;
"1966
[e = _s -> = _wc -> -> 0 `i `us `ui ]
[; ;ff.c: 1967: do {
"1967
[e :U 193 ]
{
[; ;ff.c: 1968: if (wc != 0xFFFF) wc = lfn[i++];
"1968
[e $ ! != -> _wc `ui -> 65535 `ui 194  ]
[e = _wc *U + _lfn * -> ++ _i -> -> 1 `i `ui `ux -> -> # *U _lfn `ui `ux ]
[e :U 194 ]
[; ;ff.c: 1969: st_word(dir + LfnOfs[s], wc);
"1969
[e ( _st_word (2 , + _dir * -> *U + &U _LfnOfs * -> _s `ux -> -> # *U &U _LfnOfs `ui `ux `ux -> -> # *U _dir `ui `ux _wc ]
[; ;ff.c: 1970: if (wc == 0) wc = 0xFFFF;
"1970
[e $ ! == -> _wc `ui -> -> 0 `i `ui 195  ]
[e = _wc -> -> 65535 `ui `us ]
[e :U 195 ]
"1971
}
[; ;ff.c: 1971: } while (++s < 13);
[e $ < =+ _s -> -> 1 `i `ui -> -> 13 `i `ui 193  ]
[e :U 192 ]
[; ;ff.c: 1972: if (wc == 0xFFFF || !lfn[i]) ord |= 0x40;
"1972
[e $ ! || == -> _wc `ui -> 65535 `ui ! != -> *U + _lfn * -> _i `ux -> -> # *U _lfn `ui `ux `ui -> -> -> 0 `i `Cus `ui 196  ]
[e =| _ord -> -> 64 `i `uc ]
[e :U 196 ]
[; ;ff.c: 1973: dir[0] = ord;
"1973
[e = *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x _ord ]
[; ;ff.c: 1974: }
"1974
[e :UE 190 ]
}
"1987
[v _gen_numname `(v ~T0 @X0 1 sf4`*uc`*Cuc`*Cus`ui ]
"1993
{
[; ;ff.c: 1986: static
[; ;ff.c: 1987: void gen_numname (
[; ;ff.c: 1988: BYTE* dst,
[; ;ff.c: 1989: const BYTE* src,
[; ;ff.c: 1990: const WCHAR* lfn,
[; ;ff.c: 1991: UINT seq
[; ;ff.c: 1992: )
[; ;ff.c: 1993: {
[e :U _gen_numname ]
"1988
[v _dst `*uc ~T0 @X0 1 r1 ]
"1989
[v _src `*Cuc ~T0 @X0 1 r2 ]
"1990
[v _lfn `*Cus ~T0 @X0 1 r3 ]
"1991
[v _seq `ui ~T0 @X0 1 r4 ]
"1993
[f ]
"1994
[v _ns `uc ~T0 @X0 -> 8 `i a ]
[v _c `uc ~T0 @X0 1 a ]
"1995
[v _i `ui ~T0 @X0 1 a ]
[v _j `ui ~T0 @X0 1 a ]
"1996
[v _wc `us ~T0 @X0 1 a ]
"1997
[v _sr `ul ~T0 @X0 1 a ]
[; ;ff.c: 1994: BYTE ns[8], c;
[; ;ff.c: 1995: UINT i, j;
[; ;ff.c: 1996: WCHAR wc;
[; ;ff.c: 1997: DWORD sr;
[; ;ff.c: 2000: mem_cpy(dst, src, 11);
"2000
[e ( _mem_cpy (3 , , -> _dst `*v -> _src `*Cv -> -> 11 `i `ui ]
[; ;ff.c: 2002: if (seq > 5) {
"2002
[e $ ! > _seq -> -> 5 `i `ui 198  ]
{
[; ;ff.c: 2003: sr = seq;
"2003
[e = _sr -> _seq `ul ]
[; ;ff.c: 2004: while (*lfn) {
"2004
[e $U 199  ]
[e :U 200 ]
{
[; ;ff.c: 2005: wc = *lfn++;
"2005
[e = _wc *U ++ _lfn * -> -> 1 `i `x -> -> # *U _lfn `i `x ]
[; ;ff.c: 2006: for (i = 0; i < 16; i++) {
"2006
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 16 `i `ui 202  ]
[e $U 203  ]
[e :U 202 ]
{
[; ;ff.c: 2007: sr = (sr << 1) + (wc & 1);
"2007
[e = _sr + << _sr -> 1 `i -> & -> _wc `ui -> -> 1 `i `ui `ul ]
[; ;ff.c: 2008: wc >>= 1;
"2008
[e =>> _wc -> 1 `i ]
[; ;ff.c: 2009: if (sr & 0x10000) sr ^= 0x11021;
"2009
[e $ ! != & _sr -> -> 65536 `l `ul -> -> 0 `i `ul 205  ]
[e =^ _sr -> -> 69665 `l `ul ]
[e :U 205 ]
"2010
}
"2006
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 16 `i `ui 202  ]
[e :U 203 ]
"2010
}
"2011
}
[e :U 199 ]
"2004
[e $ != -> *U _lfn `ui -> -> -> 0 `i `Cus `ui 200  ]
[e :U 201 ]
[; ;ff.c: 2010: }
[; ;ff.c: 2011: }
[; ;ff.c: 2012: seq = (UINT)sr;
"2012
[e = _seq -> _sr `ui ]
"2013
}
[e :U 198 ]
[; ;ff.c: 2013: }
[; ;ff.c: 2016: i = 7;
"2016
[e = _i -> -> 7 `i `ui ]
[; ;ff.c: 2017: do {
"2017
[e :U 208 ]
{
[; ;ff.c: 2018: c = (BYTE)((seq % 16) + '0');
"2018
[e = _c -> + % _seq -> -> 16 `i `ui -> 48 `ui `uc ]
[; ;ff.c: 2019: if (c > '9') c += 7;
"2019
[e $ ! > -> _c `ui -> 57 `ui 209  ]
[e =+ _c -> -> 7 `i `uc ]
[e :U 209 ]
[; ;ff.c: 2020: ns[i--] = c;
"2020
[e = *U + &U _ns * -> -- _i -> -> 1 `i `ui `ux -> -> # *U &U _ns `ui `ux _c ]
[; ;ff.c: 2021: seq /= 16;
"2021
[e =/ _seq -> -> 16 `uc `ui ]
"2022
}
[; ;ff.c: 2022: } while (seq);
[e $ != _seq -> -> 0 `i `ui 208  ]
[e :U 207 ]
[; ;ff.c: 2023: ns[i] = '~';
"2023
[e = *U + &U _ns * -> _i `ux -> -> # *U &U _ns `ui `ux -> -> 126 `ui `uc ]
[; ;ff.c: 2026: for (j = 0; j < i && dst[j] != ' '; j++) {
"2026
{
[e = _j -> -> 0 `i `ui ]
[e $U 213  ]
[e :U 210 ]
{
[; ;ff.c: 2027: if (dbc_1st(dst[j])) {
"2027
[e $ ! != ( _dbc_1st (1 *U + _dst * -> _j `ux -> -> # *U _dst `ui `ux -> 0 `i 214  ]
{
[; ;ff.c: 2028: if (j == i - 1) break;
"2028
[e $ ! == _j - _i -> -> 1 `i `ui 215  ]
[e $U 211  ]
[e :U 215 ]
[; ;ff.c: 2029: j++;
"2029
[e ++ _j -> -> 1 `i `ui ]
"2030
}
[e :U 214 ]
"2031
}
"2026
[e ++ _j -> -> 1 `i `ui ]
[e :U 213 ]
[e $ && < _j _i != -> *U + _dst * -> _j `ux -> -> # *U _dst `ui `ux `ui -> 32 `ui 210  ]
[e :U 211 ]
"2031
}
[; ;ff.c: 2030: }
[; ;ff.c: 2031: }
[; ;ff.c: 2032: do {
"2032
[e :U 218 ]
{
[; ;ff.c: 2033: dst[j++] = (i < 8) ? ns[i++] : ' ';
"2033
[e = *U + _dst * -> ++ _j -> -> 1 `i `ui `ux -> -> # *U _dst `ui `ux -> ? < _i -> -> 8 `i `ui : -> *U + &U _ns * -> ++ _i -> -> 1 `i `ui `ux -> -> # *U &U _ns `ui `ux `ui -> 32 `ui `uc ]
"2034
}
[; ;ff.c: 2034: } while (j < 8);
[e $ < _j -> -> 8 `i `ui 218  ]
[e :U 217 ]
[; ;ff.c: 2035: }
"2035
[e :UE 197 ]
}
"2046
[v _sum_sfn `(uc ~T0 @X0 1 sf1`*Cuc ]
"2049
{
[; ;ff.c: 2045: static
[; ;ff.c: 2046: BYTE sum_sfn (
[; ;ff.c: 2047: const BYTE* dir
[; ;ff.c: 2048: )
[; ;ff.c: 2049: {
[e :U _sum_sfn ]
"2047
[v _dir `*Cuc ~T0 @X0 1 r1 ]
"2049
[f ]
"2050
[v _sum `uc ~T0 @X0 1 a ]
[; ;ff.c: 2050: BYTE sum = 0;
[e = _sum -> -> 0 `i `uc ]
"2051
[v _n `ui ~T0 @X0 1 a ]
[; ;ff.c: 2051: UINT n = 11;
[e = _n -> -> 11 `i `ui ]
[; ;ff.c: 2053: do {
"2053
[e :U 222 ]
{
[; ;ff.c: 2054: sum = (sum >> 1) + (sum << 7) + *dir++;
"2054
[e = _sum -> + + >> -> _sum `i -> 1 `i << -> _sum `i -> 7 `i -> *U ++ _dir * -> -> 1 `i `x -> -> # *U _dir `i `x `i `uc ]
"2055
}
[; ;ff.c: 2055: } while (--n);
[e $ != =- _n -> -> 1 `i `ui -> -> 0 `i `ui 222  ]
[e :U 221 ]
[; ;ff.c: 2056: return sum;
"2056
[e ) _sum ]
[e $UE 219  ]
[; ;ff.c: 2057: }
"2057
[e :UE 219 ]
}
"2348
[v _dir_read `(E69 ~T0 @X0 1 sf2`*S4`i ]
"2352
{
[; ;ff.c: 2347: static
[; ;ff.c: 2348: FRESULT dir_read (
[; ;ff.c: 2349: DIR* dp,
[; ;ff.c: 2350: int vol
[; ;ff.c: 2351: )
[; ;ff.c: 2352: {
[e :U _dir_read ]
"2349
[v _dp `*S4 ~T0 @X0 1 r1 ]
"2350
[v _vol `i ~T0 @X0 1 r2 ]
"2352
[f ]
"2353
[v _res `E69 ~T0 @X0 1 a ]
[; ;ff.c: 2353: FRESULT res = FR_NO_FILE;
[e = _res . `E69 4 ]
"2354
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 2354: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
"2355
[v _a `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
"2357
[v _ord `uc ~T0 @X0 1 a ]
[; ;ff.c: 2355: BYTE a, c;
[; ;ff.c: 2357: BYTE ord = 0xFF, sum = 0xFF;
[e = _ord -> -> 255 `i `uc ]
[v _sum `uc ~T0 @X0 1 a ]
[e = _sum -> -> 255 `i `uc ]
[; ;ff.c: 2360: while (dp->sect) {
"2360
[e $U 224  ]
[e :U 225 ]
{
[; ;ff.c: 2361: res = move_window(fs, dp->sect);
"2361
[e = _res ( _move_window (2 , _fs . *U _dp 3 ]
[; ;ff.c: 2362: if (res != FR_OK) break;
"2362
[e $ ! != -> _res `i -> . `E69 0 `i 227  ]
[e $U 226  ]
[e :U 227 ]
[; ;ff.c: 2363: c = dp->dir[0];
"2363
[e = _c *U + . *U _dp 4 * -> -> 0 `i `x -> -> # *U . *U _dp 4 `i `x ]
[; ;ff.c: 2364: if (c == 0) {
"2364
[e $ ! == -> _c `i -> 0 `i 228  ]
{
[; ;ff.c: 2365: res = FR_NO_FILE; break;
"2365
[e = _res . `E69 4 ]
[e $U 226  ]
"2366
}
[e :U 228 ]
[; ;ff.c: 2366: }
[; ;ff.c: 2383: {
"2383
{
[; ;ff.c: 2384: dp->obj.attr = a = dp->dir[11] & 0x3F;
"2384
[e = . . *U _dp 0 2 = _a -> & -> *U + . *U _dp 4 * -> -> 11 `i `x -> -> # *U . *U _dp 4 `i `x `i -> 63 `i `uc ]
[; ;ff.c: 2386: if (c == 0xE5 || c == '.' || (int)((a & ~0x20) == 0x08) != vol) {
"2386
[e $ ! || || == -> _c `i -> 229 `i == -> _c `ui -> 46 `ui != -> == & -> _a `i ~ -> 32 `i -> 8 `i `i _vol 229  ]
{
[; ;ff.c: 2387: ord = 0xFF;
"2387
[e = _ord -> -> 255 `i `uc ]
"2388
}
[; ;ff.c: 2388: } else {
[e $U 230  ]
[e :U 229 ]
{
[; ;ff.c: 2389: if (a == 0x0F) {
"2389
[e $ ! == -> _a `i -> 15 `i 231  ]
{
[; ;ff.c: 2390: if (c & 0x40) {
"2390
[e $ ! != & -> _c `i -> 64 `i -> 0 `i 232  ]
{
[; ;ff.c: 2391: sum = dp->dir[13];
"2391
[e = _sum *U + . *U _dp 4 * -> -> 13 `i `x -> -> # *U . *U _dp 4 `i `x ]
[; ;ff.c: 2392: c &= (BYTE)~0x40; ord = c;
"2392
[e =& _c -> ~ -> 64 `i `uc ]
[e = _ord _c ]
[; ;ff.c: 2393: dp->blk_ofs = dp->dptr;
"2393
[e = . *U _dp 6 . *U _dp 1 ]
"2394
}
[e :U 232 ]
[; ;ff.c: 2394: }
[; ;ff.c: 2396: ord = (c == ord && sum == dp->dir[13] && pick_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
"2396
[e = _ord -> ? && && == -> _c `i -> _ord `i == -> _sum `i -> *U + . *U _dp 4 * -> -> 13 `i `x -> -> # *U . *U _dp 4 `i `x `i != ( _pick_lfn (2 , . *U _fs 8 . *U _dp 4 -> 0 `i : - -> _ord `i -> 1 `i -> 255 `i `uc ]
"2397
}
[; ;ff.c: 2397: } else {
[e $U 233  ]
[e :U 231 ]
{
[; ;ff.c: 2398: if (ord != 0 || sum != sum_sfn(dp->dir)) {
"2398
[e $ ! || != -> _ord `i -> 0 `i != -> _sum `i -> ( _sum_sfn (1 -> . *U _dp 4 `*Cuc `i 234  ]
{
[; ;ff.c: 2399: dp->blk_ofs = 0xFFFFFFFF;
"2399
[e = . *U _dp 6 -> -1 `ul ]
"2400
}
[e :U 234 ]
[; ;ff.c: 2400: }
[; ;ff.c: 2401: break;
"2401
[e $U 226  ]
"2402
}
[e :U 233 ]
"2403
}
[e :U 230 ]
"2409
}
[; ;ff.c: 2402: }
[; ;ff.c: 2403: }
[; ;ff.c: 2409: }
[; ;ff.c: 2410: res = dir_next(dp, 0);
"2410
[e = _res ( _dir_next (2 , _dp -> 0 `i ]
[; ;ff.c: 2411: if (res != FR_OK) break;
"2411
[e $ ! != -> _res `i -> . `E69 0 `i 235  ]
[e $U 226  ]
[e :U 235 ]
"2412
}
[e :U 224 ]
"2360
[e $ != . *U _dp 3 -> -> 0 `i `ul 225  ]
[e :U 226 ]
[; ;ff.c: 2412: }
[; ;ff.c: 2414: if (res != FR_OK) dp->sect = 0;
"2414
[e $ ! != -> _res `i -> . `E69 0 `i 236  ]
[e = . *U _dp 3 -> -> -> 0 `i `l `ul ]
[e :U 236 ]
[; ;ff.c: 2415: return res;
"2415
[e ) _res ]
[e $UE 223  ]
[; ;ff.c: 2416: }
"2416
[e :UE 223 ]
}
"2427
[v _dir_find `(E69 ~T0 @X0 1 sf1`*S4 ]
"2430
{
[; ;ff.c: 2426: static
[; ;ff.c: 2427: FRESULT dir_find (
[; ;ff.c: 2428: DIR* dp
[; ;ff.c: 2429: )
[; ;ff.c: 2430: {
[e :U _dir_find ]
"2428
[v _dp `*S4 ~T0 @X0 1 r1 ]
"2430
[f ]
"2431
[v _res `E69 ~T0 @X0 1 a ]
"2432
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 2431: FRESULT res;
[; ;ff.c: 2432: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
"2433
[v _c `uc ~T0 @X0 1 a ]
"2435
[v _a `uc ~T0 @X0 1 a ]
[v _ord `uc ~T0 @X0 1 a ]
[v _sum `uc ~T0 @X0 1 a ]
[; ;ff.c: 2433: BYTE c;
[; ;ff.c: 2435: BYTE a, ord, sum;
[; ;ff.c: 2438: res = dir_sdi(dp, 0);
"2438
[e = _res ( _dir_sdi (2 , _dp -> -> -> 0 `i `l `ul ]
[; ;ff.c: 2439: if (res != FR_OK) return res;
"2439
[e $ ! != -> _res `i -> . `E69 0 `i 238  ]
[e ) _res ]
[e $UE 237  ]
[e :U 238 ]
[; ;ff.c: 2462: ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;
"2462
[e = _ord = _sum -> -> 255 `i `uc ]
[e = . *U _dp 6 -> -1 `ul ]
[; ;ff.c: 2464: do {
"2464
[e :U 241 ]
{
[; ;ff.c: 2465: res = move_window(fs, dp->sect);
"2465
[e = _res ( _move_window (2 , _fs . *U _dp 3 ]
[; ;ff.c: 2466: if (res != FR_OK) break;
"2466
[e $ ! != -> _res `i -> . `E69 0 `i 242  ]
[e $U 240  ]
[e :U 242 ]
[; ;ff.c: 2467: c = dp->dir[0];
"2467
[e = _c *U + . *U _dp 4 * -> -> 0 `i `x -> -> # *U . *U _dp 4 `i `x ]
[; ;ff.c: 2468: if (c == 0) { res = FR_NO_FILE; break; }
"2468
[e $ ! == -> _c `i -> 0 `i 243  ]
{
[e = _res . `E69 4 ]
[e $U 240  ]
}
[e :U 243 ]
[; ;ff.c: 2470: dp->obj.attr = a = dp->dir[11] & 0x3F;
"2470
[e = . . *U _dp 0 2 = _a -> & -> *U + . *U _dp 4 * -> -> 11 `i `x -> -> # *U . *U _dp 4 `i `x `i -> 63 `i `uc ]
[; ;ff.c: 2471: if (c == 0xE5 || ((a & 0x08) && a != 0x0F)) {
"2471
[e $ ! || == -> _c `i -> 229 `i && != & -> _a `i -> 8 `i -> 0 `i != -> _a `i -> 15 `i 244  ]
{
[; ;ff.c: 2472: ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;
"2472
[e = _ord -> -> 255 `i `uc ]
[e = . *U _dp 6 -> -1 `ul ]
"2473
}
[; ;ff.c: 2473: } else {
[e $U 245  ]
[e :U 244 ]
{
[; ;ff.c: 2474: if (a == 0x0F) {
"2474
[e $ ! == -> _a `i -> 15 `i 246  ]
{
[; ;ff.c: 2475: if (!(dp->fn[11] & 0x40)) {
"2475
[e $ ! ! != & -> *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux `i -> 64 `i -> 0 `i 247  ]
{
[; ;ff.c: 2476: if (c & 0x40) {
"2476
[e $ ! != & -> _c `i -> 64 `i -> 0 `i 248  ]
{
[; ;ff.c: 2477: sum = dp->dir[13];
"2477
[e = _sum *U + . *U _dp 4 * -> -> 13 `i `x -> -> # *U . *U _dp 4 `i `x ]
[; ;ff.c: 2478: c &= (BYTE)~0x40; ord = c;
"2478
[e =& _c -> ~ -> 64 `i `uc ]
[e = _ord _c ]
[; ;ff.c: 2479: dp->blk_ofs = dp->dptr;
"2479
[e = . *U _dp 6 . *U _dp 1 ]
"2480
}
[e :U 248 ]
[; ;ff.c: 2480: }
[; ;ff.c: 2482: ord = (c == ord && sum == dp->dir[13] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
"2482
[e = _ord -> ? && && == -> _c `i -> _ord `i == -> _sum `i -> *U + . *U _dp 4 * -> -> 13 `i `x -> -> # *U . *U _dp 4 `i `x `i != ( _cmp_lfn (2 , -> . *U _fs 8 `*Cus . *U _dp 4 -> 0 `i : - -> _ord `i -> 1 `i -> 255 `i `uc ]
"2483
}
[e :U 247 ]
"2484
}
[; ;ff.c: 2483: }
[; ;ff.c: 2484: } else {
[e $U 249  ]
[e :U 246 ]
{
[; ;ff.c: 2485: if (ord == 0 && sum == sum_sfn(dp->dir)) break;
"2485
[e $ ! && == -> _ord `i -> 0 `i == -> _sum `i -> ( _sum_sfn (1 -> . *U _dp 4 `*Cuc `i 250  ]
[e $U 240  ]
[e :U 250 ]
[; ;ff.c: 2486: if (!(dp->fn[11] & 0x01) && !mem_cmp(dp->dir, dp->fn, 11)) break;
"2486
[e $ ! && ! != & -> *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux `i -> 1 `i -> 0 `i ! != ( _mem_cmp (3 , , -> . *U _dp 4 `*Cv -> &U . *U _dp 5 `*Cv -> -> 11 `i `ui -> 0 `i 251  ]
[e $U 240  ]
[e :U 251 ]
[; ;ff.c: 2487: ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;
"2487
[e = _ord -> -> 255 `i `uc ]
[e = . *U _dp 6 -> -1 `ul ]
"2488
}
[e :U 249 ]
"2489
}
[e :U 245 ]
[; ;ff.c: 2488: }
[; ;ff.c: 2489: }
[; ;ff.c: 2494: res = dir_next(dp, 0);
"2494
[e = _res ( _dir_next (2 , _dp -> 0 `i ]
"2495
}
[; ;ff.c: 2495: } while (res == FR_OK);
[e $ == -> _res `i -> . `E69 0 `i 241  ]
[e :U 240 ]
[; ;ff.c: 2497: return res;
"2497
[e ) _res ]
[e $UE 237  ]
[; ;ff.c: 2498: }
"2498
[e :UE 237 ]
}
"2509
[v _dir_register `(E69 ~T0 @X0 1 sf1`*S4 ]
"2512
{
[; ;ff.c: 2508: static
[; ;ff.c: 2509: FRESULT dir_register (
[; ;ff.c: 2510: DIR* dp
[; ;ff.c: 2511: )
[; ;ff.c: 2512: {
[e :U _dir_register ]
"2510
[v _dp `*S4 ~T0 @X0 1 r1 ]
"2512
[f ]
"2513
[v _res `E69 ~T0 @X0 1 a ]
"2514
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 2513: FRESULT res;
[; ;ff.c: 2514: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
"2516
[v _n `ui ~T0 @X0 1 a ]
[v _nlen `ui ~T0 @X0 1 a ]
[v _nent `ui ~T0 @X0 1 a ]
"2517
[v _sn `uc ~T0 @X0 -> 12 `i a ]
[v _sum `uc ~T0 @X0 1 a ]
[; ;ff.c: 2516: UINT n, nlen, nent;
[; ;ff.c: 2517: BYTE sn[12], sum;
[; ;ff.c: 2520: if (dp->fn[11] & (0x20 | 0x80)) return FR_INVALID_NAME;
"2520
[e $ ! != & -> *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux `i | -> 32 `i -> 128 `i -> 0 `i 253  ]
[e ) . `E69 6 ]
[e $UE 252  ]
[e :U 253 ]
[; ;ff.c: 2521: for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;
"2521
{
[e = _nlen -> -> 0 `i `ui ]
[e $U 257  ]
[e :U 254 ]
[e ++ _nlen -> -> 1 `i `ui ]
[e :U 257 ]
[e $ != -> *U + . *U _fs 8 * -> _nlen `ux -> -> # *U . *U _fs 8 `ui `ux `ui -> -> -> 0 `i `us `ui 254  ]
[e :U 255 ]
}
[; ;ff.c: 2555: mem_cpy(sn, dp->fn, 12);
"2555
[e ( _mem_cpy (3 , , -> &U _sn `*v -> &U . *U _dp 5 `*Cv -> -> 12 `i `ui ]
[; ;ff.c: 2556: if (sn[11] & 0x01) {
"2556
[e $ ! != & -> *U + &U _sn * -> -> -> 11 `i `ui `ux -> -> # *U &U _sn `ui `ux `i -> 1 `i -> 0 `i 258  ]
{
[; ;ff.c: 2557: dp->fn[11] = 0x40;
"2557
[e = *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux -> -> 64 `i `uc ]
[; ;ff.c: 2558: for (n = 1; n < 100; n++) {
"2558
{
[e = _n -> -> 1 `i `ui ]
[e $ < _n -> -> 100 `i `ui 259  ]
[e $U 260  ]
[e :U 259 ]
{
[; ;ff.c: 2559: gen_numname(dp->fn, sn, fs->lfnbuf, n);
"2559
[e ( _gen_numname (4 , , , &U . *U _dp 5 -> &U _sn `*Cuc -> . *U _fs 8 `*Cus _n ]
[; ;ff.c: 2560: res = dir_find(dp);
"2560
[e = _res ( _dir_find (1 _dp ]
[; ;ff.c: 2561: if (res != FR_OK) break;
"2561
[e $ ! != -> _res `i -> . `E69 0 `i 262  ]
[e $U 260  ]
[e :U 262 ]
"2562
}
"2558
[e ++ _n -> -> 1 `i `ui ]
[e $ < _n -> -> 100 `i `ui 259  ]
[e :U 260 ]
"2562
}
[; ;ff.c: 2562: }
[; ;ff.c: 2563: if (n == 100) return FR_DENIED;
"2563
[e $ ! == _n -> -> 100 `i `ui 263  ]
[e ) . `E69 7 ]
[e $UE 252  ]
[e :U 263 ]
[; ;ff.c: 2564: if (res != FR_NO_FILE) return res;
"2564
[e $ ! != -> _res `i -> . `E69 4 `i 264  ]
[e ) _res ]
[e $UE 252  ]
[e :U 264 ]
[; ;ff.c: 2565: dp->fn[11] = sn[11];
"2565
[e = *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux *U + &U _sn * -> -> -> 11 `i `ui `ux -> -> # *U &U _sn `ui `ux ]
"2566
}
[e :U 258 ]
[; ;ff.c: 2566: }
[; ;ff.c: 2569: nent = (sn[11] & 0x02) ? (nlen + 12) / 13 + 1 : 1;
"2569
[e = _nent ? != & -> *U + &U _sn * -> -> -> 11 `i `ui `ux -> -> # *U &U _sn `ui `ux `i -> 2 `i -> 0 `i : + / + _nlen -> -> 12 `i `ui -> -> 13 `i `ui -> -> 1 `i `ui -> -> 1 `i `ui ]
[; ;ff.c: 2570: res = dir_alloc(dp, nent);
"2570
[e = _res ( _dir_alloc (2 , _dp _nent ]
[; ;ff.c: 2571: if (res == FR_OK && --nent) {
"2571
[e $ ! && == -> _res `i -> . `E69 0 `i != =- _nent -> -> 1 `i `ui -> -> 0 `i `ui 265  ]
{
[; ;ff.c: 2572: res = dir_sdi(dp, dp->dptr - nent * 32);
"2572
[e = _res ( _dir_sdi (2 , _dp - . *U _dp 1 -> * _nent -> -> 32 `i `ui `ul ]
[; ;ff.c: 2573: if (res == FR_OK) {
"2573
[e $ ! == -> _res `i -> . `E69 0 `i 266  ]
{
[; ;ff.c: 2574: sum = sum_sfn(dp->fn);
"2574
[e = _sum ( _sum_sfn (1 -> &U . *U _dp 5 `*Cuc ]
[; ;ff.c: 2575: do {
"2575
[e :U 269 ]
{
[; ;ff.c: 2576: res = move_window(fs, dp->sect);
"2576
[e = _res ( _move_window (2 , _fs . *U _dp 3 ]
[; ;ff.c: 2577: if (res != FR_OK) break;
"2577
[e $ ! != -> _res `i -> . `E69 0 `i 270  ]
[e $U 268  ]
[e :U 270 ]
[; ;ff.c: 2578: put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
"2578
[e ( _put_lfn (4 , , , -> . *U _fs 8 `*Cus . *U _dp 4 -> _nent `uc _sum ]
[; ;ff.c: 2579: fs->wflag = 1;
"2579
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 2580: res = dir_next(dp, 0);
"2580
[e = _res ( _dir_next (2 , _dp -> 0 `i ]
"2581
}
[; ;ff.c: 2581: } while (res == FR_OK && --nent);
[e $ && == -> _res `i -> . `E69 0 `i != =- _nent -> -> 1 `i `ui -> -> 0 `i `ui 269  ]
[e :U 268 ]
"2582
}
[e :U 266 ]
"2583
}
[e :U 265 ]
[; ;ff.c: 2582: }
[; ;ff.c: 2583: }
[; ;ff.c: 2591: if (res == FR_OK) {
"2591
[e $ ! == -> _res `i -> . `E69 0 `i 271  ]
{
[; ;ff.c: 2592: res = move_window(fs, dp->sect);
"2592
[e = _res ( _move_window (2 , _fs . *U _dp 3 ]
[; ;ff.c: 2593: if (res == FR_OK) {
"2593
[e $ ! == -> _res `i -> . `E69 0 `i 272  ]
{
[; ;ff.c: 2594: mem_set(dp->dir, 0, 32);
"2594
[e ( _mem_set (3 , , -> . *U _dp 4 `*v -> 0 `i -> -> 32 `i `ui ]
[; ;ff.c: 2595: mem_cpy(dp->dir + 0, dp->fn, 11);
"2595
[e ( _mem_cpy (3 , , -> + . *U _dp 4 * -> -> 0 `i `x -> -> # *U . *U _dp 4 `i `x `*v -> &U . *U _dp 5 `*Cv -> -> 11 `i `ui ]
[; ;ff.c: 2597: dp->dir[12] = dp->fn[11] & (0x08 | 0x10);
"2597
[e = *U + . *U _dp 4 * -> -> 12 `i `x -> -> # *U . *U _dp 4 `i `x -> & -> *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux `i | -> 8 `i -> 16 `i `uc ]
[; ;ff.c: 2599: fs->wflag = 1;
"2599
[e = . *U _fs 3 -> -> 1 `i `uc ]
"2600
}
[e :U 272 ]
"2601
}
[e :U 271 ]
[; ;ff.c: 2600: }
[; ;ff.c: 2601: }
[; ;ff.c: 2603: return res;
"2603
[e ) _res ]
[e $UE 252  ]
[; ;ff.c: 2604: }
"2604
[e :UE 252 ]
}
"2616
[v _dir_remove `(E69 ~T0 @X0 1 sf1`*S4 ]
"2619
{
[; ;ff.c: 2615: static
[; ;ff.c: 2616: FRESULT dir_remove (
[; ;ff.c: 2617: DIR* dp
[; ;ff.c: 2618: )
[; ;ff.c: 2619: {
[e :U _dir_remove ]
"2617
[v _dp `*S4 ~T0 @X0 1 r1 ]
"2619
[f ]
"2620
[v _res `E69 ~T0 @X0 1 a ]
"2621
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 2620: FRESULT res;
[; ;ff.c: 2621: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
"2623
[v _last `ul ~T0 @X0 1 a ]
[; ;ff.c: 2623: DWORD last = dp->dptr;
[e = _last . *U _dp 1 ]
[; ;ff.c: 2625: res = (dp->blk_ofs == 0xFFFFFFFF) ? FR_OK : dir_sdi(dp, dp->blk_ofs);
"2625
[e = _res -> ? == . *U _dp 6 -> -1 `ul : -> . `E69 0 `i -> ( _dir_sdi (2 , _dp . *U _dp 6 `i `E69 ]
[; ;ff.c: 2626: if (res == FR_OK) {
"2626
[e $ ! == -> _res `i -> . `E69 0 `i 274  ]
{
[; ;ff.c: 2627: do {
"2627
[e :U 277 ]
{
[; ;ff.c: 2628: res = move_window(fs, dp->sect);
"2628
[e = _res ( _move_window (2 , _fs . *U _dp 3 ]
[; ;ff.c: 2629: if (res != FR_OK) break;
"2629
[e $ ! != -> _res `i -> . `E69 0 `i 278  ]
[e $U 276  ]
[e :U 278 ]
[; ;ff.c: 2630: if (0 && fs->fs_type == 4) {
"2630
[e $ ! && != -> 0 `i -> 0 `i == -> . *U _fs 0 `i -> 4 `i 279  ]
{
[; ;ff.c: 2631: dp->dir[0] &= 0x7F;
"2631
[e =& *U + . *U _dp 4 * -> -> 0 `i `x -> -> # *U . *U _dp 4 `i `x -> -> 127 `i `uc ]
"2632
}
[; ;ff.c: 2632: } else {
[e $U 280  ]
[e :U 279 ]
{
[; ;ff.c: 2633: dp->dir[0] = 0xE5;
"2633
[e = *U + . *U _dp 4 * -> -> 0 `i `x -> -> # *U . *U _dp 4 `i `x -> -> 229 `i `uc ]
"2634
}
[e :U 280 ]
[; ;ff.c: 2634: }
[; ;ff.c: 2635: fs->wflag = 1;
"2635
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 2636: if (dp->dptr >= last) break;
"2636
[e $ ! >= . *U _dp 1 _last 281  ]
[e $U 276  ]
[e :U 281 ]
[; ;ff.c: 2637: res = dir_next(dp, 0);
"2637
[e = _res ( _dir_next (2 , _dp -> 0 `i ]
"2638
}
[; ;ff.c: 2638: } while (res == FR_OK);
[e $ == -> _res `i -> . `E69 0 `i 277  ]
[e :U 276 ]
[; ;ff.c: 2639: if (res == FR_NO_FILE) res = FR_INT_ERR;
"2639
[e $ ! == -> _res `i -> . `E69 4 `i 282  ]
[e = _res . `E69 2 ]
[e :U 282 ]
"2640
}
[e :U 274 ]
[; ;ff.c: 2640: }
[; ;ff.c: 2650: return res;
"2650
[e ) _res ]
[e $UE 273  ]
[; ;ff.c: 2651: }
"2651
[e :UE 273 ]
}
"2663
[v _get_fileinfo `(v ~T0 @X0 1 sf2`*S4`*S5 ]
"2667
{
[; ;ff.c: 2662: static
[; ;ff.c: 2663: void get_fileinfo (
[; ;ff.c: 2664: DIR* dp,
[; ;ff.c: 2665: FILINFO* fno
[; ;ff.c: 2666: )
[; ;ff.c: 2667: {
[e :U _get_fileinfo ]
"2664
[v _dp `*S4 ~T0 @X0 1 r1 ]
"2665
[v _fno `*S5 ~T0 @X0 1 r2 ]
"2667
[f ]
"2668
[v _si `ui ~T0 @X0 1 a ]
[v _di `ui ~T0 @X0 1 a ]
"2670
[v _wc `us ~T0 @X0 1 a ]
[v _hs `us ~T0 @X0 1 a ]
"2671
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 2668: UINT si, di;
[; ;ff.c: 2670: WCHAR wc, hs;
[; ;ff.c: 2671: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
[; ;ff.c: 2677: fno->fname[0] = 0;
"2677
[e = *U + &U . *U _fno 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _fno 5 `ui `ux -> -> 0 `i `uc ]
[; ;ff.c: 2678: if (dp->sect == 0) return;
"2678
[e $ ! == . *U _dp 3 -> -> -> 0 `i `l `ul 284  ]
[e $UE 283  ]
[e :U 284 ]
[; ;ff.c: 2687: {
"2687
{
[; ;ff.c: 2688: if (dp->blk_ofs != 0xFFFFFFFF) {
"2688
[e $ ! != . *U _dp 6 -> -1 `ul 285  ]
{
[; ;ff.c: 2689: si = di = hs = 0;
"2689
[e = _si = _di -> = _hs -> -> 0 `i `us `ui ]
[; ;ff.c: 2690: while (fs->lfnbuf[si] != 0) {
"2690
[e $U 286  ]
[e :U 287 ]
{
[; ;ff.c: 2691: wc = fs->lfnbuf[si++];
"2691
[e = _wc *U + . *U _fs 8 * -> ++ _si -> -> 1 `i `ui `ux -> -> # *U . *U _fs 8 `ui `ux ]
[; ;ff.c: 2692: if (hs == 0 && ((wc) >= 0xD800 && (wc) <= 0xDFFF)) {
"2692
[e $ ! && == -> _hs `ui -> -> 0 `i `ui && >= -> _wc `ui -> 55296 `ui <= -> _wc `ui -> 57343 `ui 289  ]
{
[; ;ff.c: 2693: hs = wc; continue;
"2693
[e = _hs _wc ]
[e $U 286  ]
"2694
}
[e :U 289 ]
[; ;ff.c: 2694: }
[; ;ff.c: 2695: wc = put_utf((DWORD)hs << 16 | wc, &fno->fname[di], 255 - di);
"2695
[e = _wc -> ( _put_utf (3 , , | << -> _hs `ul -> 16 `i -> _wc `ul &U *U + &U . *U _fno 5 * -> _di `ux -> -> # *U &U . *U _fno 5 `ui `ux - -> -> 255 `i `ui _di `us ]
[; ;ff.c: 2696: if (wc == 0) { di = 0; break; }
"2696
[e $ ! == -> _wc `ui -> -> 0 `i `ui 290  ]
{
[e = _di -> -> 0 `i `ui ]
[e $U 288  ]
}
[e :U 290 ]
[; ;ff.c: 2697: di += wc;
"2697
[e =+ _di -> _wc `ui ]
[; ;ff.c: 2698: hs = 0;
"2698
[e = _hs -> -> 0 `i `us ]
"2699
}
[e :U 286 ]
"2690
[e $ != -> *U + . *U _fs 8 * -> _si `ux -> -> # *U . *U _fs 8 `ui `ux `ui -> -> 0 `i `ui 287  ]
[e :U 288 ]
[; ;ff.c: 2699: }
[; ;ff.c: 2700: if (hs != 0) di = 0;
"2700
[e $ ! != -> _hs `ui -> -> 0 `i `ui 291  ]
[e = _di -> -> 0 `i `ui ]
[e :U 291 ]
[; ;ff.c: 2701: fno->fname[di] = 0;
"2701
[e = *U + &U . *U _fno 5 * -> _di `ux -> -> # *U &U . *U _fno 5 `ui `ux -> -> 0 `i `uc ]
"2702
}
[e :U 285 ]
"2703
}
[; ;ff.c: 2702: }
[; ;ff.c: 2703: }
[; ;ff.c: 2705: si = di = 0;
"2705
[e = _si = _di -> -> 0 `i `ui ]
[; ;ff.c: 2706: while (si < 11) {
"2706
[e $U 292  ]
[e :U 293 ]
{
[; ;ff.c: 2707: wc = dp->dir[si++];
"2707
[e = _wc -> *U + . *U _dp 4 * -> ++ _si -> -> 1 `i `ui `ux -> -> # *U . *U _dp 4 `ui `ux `us ]
[; ;ff.c: 2708: if (wc == ' ') continue;
"2708
[e $ ! == -> _wc `ui -> 32 `ui 295  ]
[e $U 292  ]
[e :U 295 ]
[; ;ff.c: 2709: if (wc == 0x05) wc = 0xE5;
"2709
[e $ ! == -> _wc `ui -> -> 5 `i `ui 296  ]
[e = _wc -> -> 229 `i `us ]
[e :U 296 ]
[; ;ff.c: 2710: if (si == 9 && di < 12) fno->altname[di++] = '.';
"2710
[e $ ! && == _si -> -> 9 `i `ui < _di -> -> 12 `i `ui 297  ]
[e = *U + &U . *U _fno 4 * -> ++ _di -> -> 1 `i `ui `ux -> -> # *U &U . *U _fno 4 `ui `ux -> -> 46 `ui `uc ]
[e :U 297 ]
[; ;ff.c: 2721: fno->altname[di++] = (TCHAR)wc;
"2721
[e = *U + &U . *U _fno 4 * -> ++ _di -> -> 1 `i `ui `ux -> -> # *U &U . *U _fno 4 `ui `ux -> _wc `uc ]
"2723
}
[e :U 292 ]
"2706
[e $ < _si -> -> 11 `i `ui 293  ]
[e :U 294 ]
[; ;ff.c: 2723: }
[; ;ff.c: 2724: fno->altname[di] = 0;
"2724
[e = *U + &U . *U _fno 4 * -> _di `ux -> -> # *U &U . *U _fno 4 `ui `ux -> -> 0 `i `uc ]
[; ;ff.c: 2726: if (fno->fname[0] == 0) {
"2726
[e $ ! == -> *U + &U . *U _fno 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _fno 5 `ui `ux `i -> 0 `i 298  ]
{
[; ;ff.c: 2727: if (di == 0) {
"2727
[e $ ! == _di -> -> 0 `i `ui 299  ]
{
[; ;ff.c: 2728: fno->fname[di++] = '?';
"2728
[e = *U + &U . *U _fno 5 * -> ++ _di -> -> 1 `i `ui `ux -> -> # *U &U . *U _fno 5 `ui `ux -> -> 63 `ui `uc ]
"2729
}
[; ;ff.c: 2729: } else {
[e $U 300  ]
[e :U 299 ]
{
[; ;ff.c: 2730: for (si = di = 0; fno->altname[si]; si++, di++) {
"2730
{
[e = _si = _di -> -> 0 `i `ui ]
[e $U 304  ]
[e :U 301 ]
{
[; ;ff.c: 2731: wc = (WCHAR)fno->altname[si];
"2731
[e = _wc -> *U + &U . *U _fno 4 * -> _si `ux -> -> # *U &U . *U _fno 4 `ui `ux `us ]
[; ;ff.c: 2732: if (((wc) >= 'A' && (wc) <= 'Z') && (dp->dir[12] & ((si >= 9) ? 0x10 : 0x08))) wc += 0x20;
"2732
[e $ ! && && >= -> _wc `ui -> 65 `ui <= -> _wc `ui -> 90 `ui != & -> *U + . *U _dp 4 * -> -> 12 `i `x -> -> # *U . *U _dp 4 `i `x `i ? >= _si -> -> 9 `i `ui : -> 16 `i -> 8 `i -> 0 `i 305  ]
[e =+ _wc -> -> 32 `i `us ]
[e :U 305 ]
[; ;ff.c: 2733: fno->fname[di] = (TCHAR)wc;
"2733
[e = *U + &U . *U _fno 5 * -> _di `ux -> -> # *U &U . *U _fno 5 `ui `ux -> _wc `uc ]
"2734
}
"2730
[e ; ++ _si -> -> 1 `i `ui ++ _di -> -> 1 `i `ui ]
[e :U 304 ]
[e $ != -> *U + &U . *U _fno 4 * -> _si `ux -> -> # *U &U . *U _fno 4 `ui `ux `i -> -> -> 0 `i `uc `i 301  ]
[e :U 302 ]
"2734
}
"2735
}
[e :U 300 ]
[; ;ff.c: 2734: }
[; ;ff.c: 2735: }
[; ;ff.c: 2736: fno->fname[di] = 0;
"2736
[e = *U + &U . *U _fno 5 * -> _di `ux -> -> # *U &U . *U _fno 5 `ui `ux -> -> 0 `i `uc ]
[; ;ff.c: 2737: if (!dp->dir[12]) fno->altname[0] = 0;
"2737
[e $ ! ! != -> *U + . *U _dp 4 * -> -> 12 `i `x -> -> # *U . *U _dp 4 `i `x `i -> -> -> 0 `i `uc `i 306  ]
[e = *U + &U . *U _fno 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _fno 4 `ui `ux -> -> 0 `i `uc ]
[e :U 306 ]
"2738
}
[e :U 298 ]
[; ;ff.c: 2738: }
[; ;ff.c: 2752: fno->fattrib = dp->dir[11];
"2752
[e = . *U _fno 3 *U + . *U _dp 4 * -> -> 11 `i `x -> -> # *U . *U _dp 4 `i `x ]
[; ;ff.c: 2753: fno->fsize = ld_dword(dp->dir + 28);
"2753
[e = . *U _fno 0 ( _ld_dword (1 -> + . *U _dp 4 * -> -> 28 `i `x -> -> # *U . *U _dp 4 `i `x `*Cuc ]
[; ;ff.c: 2754: fno->ftime = ld_word(dp->dir + 22 + 0);
"2754
[e = . *U _fno 2 ( _ld_word (1 -> + + . *U _dp 4 * -> -> 22 `i `x -> -> # *U . *U _dp 4 `i `x * -> -> 0 `i `x -> -> # *U + . *U _dp 4 * -> -> 22 `i `x -> -> # *U . *U _dp 4 `i `x `i `x `*Cuc ]
[; ;ff.c: 2755: fno->fdate = ld_word(dp->dir + 22 + 2);
"2755
[e = . *U _fno 1 ( _ld_word (1 -> + + . *U _dp 4 * -> -> 22 `i `x -> -> # *U . *U _dp 4 `i `x * -> -> 2 `i `x -> -> # *U + . *U _dp 4 * -> -> 22 `i `x -> -> # *U . *U _dp 4 `i `x `i `x `*Cuc ]
[; ;ff.c: 2756: }
"2756
[e :UE 283 ]
}
"2848
[v _create_name `(E69 ~T0 @X0 1 sf2`*S4`**Cuc ]
"2852
{
[; ;ff.c: 2847: static
[; ;ff.c: 2848: FRESULT create_name (
[; ;ff.c: 2849: DIR* dp,
[; ;ff.c: 2850: const TCHAR** path
[; ;ff.c: 2851: )
[; ;ff.c: 2852: {
[e :U _create_name ]
"2849
[v _dp `*S4 ~T0 @X0 1 r1 ]
"2850
[v _path `**Cuc ~T0 @X0 1 r2 ]
"2852
[f ]
"2854
[v _b `uc ~T0 @X0 1 a ]
[v _cf `uc ~T0 @X0 1 a ]
"2855
[v _wc `us ~T0 @X0 1 a ]
[v _lfn `*us ~T0 @X0 1 a ]
"2856
[v _uc `ul ~T0 @X0 1 a ]
"2857
[v _i `ui ~T0 @X0 1 a ]
[v _ni `ui ~T0 @X0 1 a ]
[v _si `ui ~T0 @X0 1 a ]
[v _di `ui ~T0 @X0 1 a ]
"2858
[v _p `*Cuc ~T0 @X0 1 a ]
[; ;ff.c: 2854: BYTE b, cf;
[; ;ff.c: 2855: WCHAR wc, *lfn;
[; ;ff.c: 2856: DWORD uc;
[; ;ff.c: 2857: UINT i, ni, si, di;
[; ;ff.c: 2858: const TCHAR *p;
[; ;ff.c: 2862: p = *path; lfn = dp->obj.fs->lfnbuf; di = 0;
"2862
[e = _p *U _path ]
[e = _lfn . *U . . *U _dp 0 0 8 ]
[e = _di -> -> 0 `i `ui ]
[; ;ff.c: 2863: for (;;) {
"2863
{
[e :U 308 ]
{
[; ;ff.c: 2864: uc = tchar2uni(&p);
"2864
[e = _uc ( _tchar2uni (1 &U _p ]
[; ;ff.c: 2865: if (uc == 0xFFFFFFFF) return FR_INVALID_NAME;
"2865
[e $ ! == _uc -> -1 `ul 311  ]
[e ) . `E69 6 ]
[e $UE 307  ]
[e :U 311 ]
[; ;ff.c: 2866: if (uc >= 0x10000) lfn[di++] = (WCHAR)(uc >> 16);
"2866
[e $ ! >= _uc -> -> 65536 `l `ul 312  ]
[e = *U + _lfn * -> ++ _di -> -> 1 `i `ui `ux -> -> # *U _lfn `ui `ux -> >> _uc -> 16 `i `us ]
[e :U 312 ]
[; ;ff.c: 2867: wc = (WCHAR)uc;
"2867
[e = _wc -> _uc `us ]
[; ;ff.c: 2868: if (wc < ' ' || wc == '/' || wc == '\\') break;
"2868
[e $ ! || || < -> _wc `ui -> 32 `ui == -> _wc `ui -> 47 `ui == -> _wc `ui -> 92 `ui 313  ]
[e $U 309  ]
[e :U 313 ]
[; ;ff.c: 2869: if (wc < 0x80 && chk_chr("\"*:<>\?|\x7F", wc)) return FR_INVALID_NAME;
"2869
[e $ ! && < -> _wc `ui -> -> 128 `i `ui != ( _chk_chr (2 , :s 1C -> _wc `i -> 0 `i 314  ]
[e ) . `E69 6 ]
[e $UE 307  ]
[e :U 314 ]
[; ;ff.c: 2870: if (di >= 100) return FR_INVALID_NAME;
"2870
[e $ ! >= _di -> -> 100 `i `ui 315  ]
[e ) . `E69 6 ]
[e $UE 307  ]
[e :U 315 ]
[; ;ff.c: 2871: lfn[di++] = wc;
"2871
[e = *U + _lfn * -> ++ _di -> -> 1 `i `ui `ux -> -> # *U _lfn `ui `ux _wc ]
"2872
}
[; ;ff.c: 2872: }
[e $U 308  ]
[e :U 309 ]
}
[; ;ff.c: 2873: while (*p == '/' || *p == '\\') p++;
"2873
[e $U 316  ]
[e :U 317 ]
[e ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x ]
[e :U 316 ]
[e $ || == -> *U _p `ui -> 47 `ui == -> *U _p `ui -> 92 `ui 317  ]
[e :U 318 ]
[; ;ff.c: 2874: *path = p;
"2874
[e = *U _path _p ]
[; ;ff.c: 2875: cf = (wc < ' ') ? 0x04 : 0;
"2875
[e = _cf -> ? < -> _wc `ui -> 32 `ui : -> 4 `i -> 0 `i `uc ]
[; ;ff.c: 2888: while (di) {
"2888
[e $U 319  ]
[e :U 320 ]
{
[; ;ff.c: 2889: wc = lfn[di - 1];
"2889
[e = _wc *U + _lfn * -> - _di -> -> 1 `i `ui `ux -> -> # *U _lfn `ui `ux ]
[; ;ff.c: 2890: if (wc != ' ' && wc != '.') break;
"2890
[e $ ! && != -> _wc `ui -> 32 `ui != -> _wc `ui -> 46 `ui 322  ]
[e $U 321  ]
[e :U 322 ]
[; ;ff.c: 2891: di--;
"2891
[e -- _di -> -> 1 `i `ui ]
"2892
}
[e :U 319 ]
"2888
[e $ != _di -> -> 0 `i `ui 320  ]
[e :U 321 ]
[; ;ff.c: 2892: }
[; ;ff.c: 2893: lfn[di] = 0;
"2893
[e = *U + _lfn * -> _di `ux -> -> # *U _lfn `ui `ux -> -> 0 `i `us ]
[; ;ff.c: 2894: if (di == 0) return FR_INVALID_NAME;
"2894
[e $ ! == _di -> -> 0 `i `ui 323  ]
[e ) . `E69 6 ]
[e $UE 307  ]
[e :U 323 ]
[; ;ff.c: 2897: for (si = 0; lfn[si] == ' '; si++) ;
"2897
{
[e = _si -> -> 0 `i `ui ]
[e $U 327  ]
[e :U 324 ]
[e ++ _si -> -> 1 `i `ui ]
[e :U 327 ]
[e $ == -> *U + _lfn * -> _si `ux -> -> # *U _lfn `ui `ux `ui -> 32 `ui 324  ]
[e :U 325 ]
}
[; ;ff.c: 2898: if (si > 0 || lfn[si] == '.') cf |= 0x01 | 0x02;
"2898
[e $ ! || > _si -> -> 0 `i `ui == -> *U + _lfn * -> _si `ux -> -> # *U _lfn `ui `ux `ui -> 46 `ui 328  ]
[e =| _cf -> | -> 1 `i -> 2 `i `uc ]
[e :U 328 ]
[; ;ff.c: 2899: while (di > 0 && lfn[di - 1] != '.') di--;
"2899
[e $U 329  ]
[e :U 330 ]
[e -- _di -> -> 1 `i `ui ]
[e :U 329 ]
[e $ && > _di -> -> 0 `i `ui != -> *U + _lfn * -> - _di -> -> 1 `i `ui `ux -> -> # *U _lfn `ui `ux `ui -> 46 `ui 330  ]
[e :U 331 ]
[; ;ff.c: 2901: mem_set(dp->fn, ' ', 11);
"2901
[e ( _mem_set (3 , , -> &U . *U _dp 5 `*v -> -> 32 `ui `i -> -> 11 `i `ui ]
[; ;ff.c: 2902: i = b = 0; ni = 8;
"2902
[e = _i -> = _b -> -> 0 `i `uc `ui ]
[e = _ni -> -> 8 `i `ui ]
[; ;ff.c: 2903: for (;;) {
"2903
{
[e :U 332 ]
{
[; ;ff.c: 2904: wc = lfn[si++];
"2904
[e = _wc *U + _lfn * -> ++ _si -> -> 1 `i `ui `ux -> -> # *U _lfn `ui `ux ]
[; ;ff.c: 2905: if (wc == 0) break;
"2905
[e $ ! == -> _wc `ui -> -> 0 `i `ui 335  ]
[e $U 333  ]
[e :U 335 ]
[; ;ff.c: 2906: if (wc == ' ' || (wc == '.' && si != di)) {
"2906
[e $ ! || == -> _wc `ui -> 32 `ui && == -> _wc `ui -> 46 `ui != _si _di 336  ]
{
[; ;ff.c: 2907: cf |= 0x01 | 0x02;
"2907
[e =| _cf -> | -> 1 `i -> 2 `i `uc ]
[; ;ff.c: 2908: continue;
"2908
[e $U 334  ]
"2909
}
[e :U 336 ]
[; ;ff.c: 2909: }
[; ;ff.c: 2911: if (i >= ni || si == di) {
"2911
[e $ ! || >= _i _ni == _si _di 337  ]
{
[; ;ff.c: 2912: if (ni == 11) {
"2912
[e $ ! == _ni -> -> 11 `i `ui 338  ]
{
[; ;ff.c: 2913: cf |= 0x01 | 0x02;
"2913
[e =| _cf -> | -> 1 `i -> 2 `i `uc ]
[; ;ff.c: 2914: break;
"2914
[e $U 333  ]
"2915
}
[e :U 338 ]
[; ;ff.c: 2915: }
[; ;ff.c: 2916: if (si != di) cf |= 0x01 | 0x02;
"2916
[e $ ! != _si _di 339  ]
[e =| _cf -> | -> 1 `i -> 2 `i `uc ]
[e :U 339 ]
[; ;ff.c: 2917: if (si > di) break;
"2917
[e $ ! > _si _di 340  ]
[e $U 333  ]
[e :U 340 ]
[; ;ff.c: 2918: si = di; i = 8; ni = 11; b <<= 2;
"2918
[e = _si _di ]
[e = _i -> -> 8 `i `ui ]
[e = _ni -> -> 11 `i `ui ]
[e =<< _b -> 2 `i ]
[; ;ff.c: 2919: continue;
"2919
[e $U 334  ]
"2920
}
[e :U 337 ]
[; ;ff.c: 2920: }
[; ;ff.c: 2922: if (wc >= 0x80) {
"2922
[e $ ! >= -> _wc `ui -> -> 128 `i `ui 341  ]
{
[; ;ff.c: 2923: cf |= 0x02;
"2923
[e =| _cf -> -> 2 `i `uc ]
[; ;ff.c: 2932: wc = ff_uni2oem(wc, 857);
"2932
[e = _wc ( _ff_uni2oem (2 , -> _wc `ul -> -> 857 `i `us ]
[; ;ff.c: 2933: if (wc & 0x80) wc = ExCvt[wc & 0x7F];
"2933
[e $ ! != & -> _wc `ui -> -> 128 `i `ui -> -> 0 `i `ui 342  ]
[e = _wc -> *U + &U _ExCvt * -> & -> _wc `ui -> -> 127 `i `ui `ux -> -> # *U &U _ExCvt `ui `ux `us ]
[e :U 342 ]
"2937
}
[e :U 341 ]
[; ;ff.c: 2937: }
[; ;ff.c: 2939: if (wc >= 0x100) {
"2939
[e $ ! >= -> _wc `ui -> -> 256 `i `ui 343  ]
{
[; ;ff.c: 2940: if (i >= ni - 1) {
"2940
[e $ ! >= _i - _ni -> -> 1 `i `ui 344  ]
{
[; ;ff.c: 2941: cf |= 0x01 | 0x02;
"2941
[e =| _cf -> | -> 1 `i -> 2 `i `uc ]
[; ;ff.c: 2942: i = ni; continue;
"2942
[e = _i _ni ]
[e $U 334  ]
"2943
}
[e :U 344 ]
[; ;ff.c: 2943: }
[; ;ff.c: 2944: dp->fn[i++] = (BYTE)(wc >> 8);
"2944
[e = *U + &U . *U _dp 5 * -> ++ _i -> -> 1 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux -> >> -> _wc `ui -> 8 `i `uc ]
"2945
}
[; ;ff.c: 2945: } else {
[e $U 345  ]
[e :U 343 ]
{
[; ;ff.c: 2946: if (wc == 0 || chk_chr("+,;=[]", wc)) {
"2946
[e $ ! || == -> _wc `ui -> -> 0 `i `ui != ( _chk_chr (2 , :s 2C -> _wc `i -> 0 `i 346  ]
{
[; ;ff.c: 2947: wc = '_'; cf |= 0x01 | 0x02;
"2947
[e = _wc -> -> 95 `ui `us ]
[e =| _cf -> | -> 1 `i -> 2 `i `uc ]
"2948
}
[; ;ff.c: 2948: } else {
[e $U 347  ]
[e :U 346 ]
{
[; ;ff.c: 2949: if (((wc) >= 'A' && (wc) <= 'Z')) {
"2949
[e $ ! && >= -> _wc `ui -> 65 `ui <= -> _wc `ui -> 90 `ui 348  ]
{
[; ;ff.c: 2950: b |= 2;
"2950
[e =| _b -> -> 2 `i `uc ]
"2951
}
[e :U 348 ]
[; ;ff.c: 2951: }
[; ;ff.c: 2952: if (((wc) >= 'a' && (wc) <= 'z')) {
"2952
[e $ ! && >= -> _wc `ui -> 97 `ui <= -> _wc `ui -> 122 `ui 349  ]
{
[; ;ff.c: 2953: b |= 1; wc -= 0x20;
"2953
[e =| _b -> -> 1 `i `uc ]
[e =- _wc -> -> 32 `i `us ]
"2954
}
[e :U 349 ]
"2955
}
[e :U 347 ]
"2956
}
[e :U 345 ]
[; ;ff.c: 2954: }
[; ;ff.c: 2955: }
[; ;ff.c: 2956: }
[; ;ff.c: 2957: dp->fn[i++] = (BYTE)wc;
"2957
[e = *U + &U . *U _dp 5 * -> ++ _i -> -> 1 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux -> _wc `uc ]
"2958
}
[e :U 334 ]
[; ;ff.c: 2958: }
[e $U 332  ]
[e :U 333 ]
}
[; ;ff.c: 2960: if (dp->fn[0] == 0xE5) dp->fn[0] = 0x05;
"2960
[e $ ! == -> *U + &U . *U _dp 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux `i -> 229 `i 350  ]
[e = *U + &U . *U _dp 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux -> -> 5 `i `uc ]
[e :U 350 ]
[; ;ff.c: 2962: if (ni == 8) b <<= 2;
"2962
[e $ ! == _ni -> -> 8 `i `ui 351  ]
[e =<< _b -> 2 `i ]
[e :U 351 ]
[; ;ff.c: 2963: if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= 0x02;
"2963
[e $ ! || == & -> _b `i -> 12 `i -> 12 `i == & -> _b `i -> 3 `i -> 3 `i 352  ]
[e =| _cf -> -> 2 `i `uc ]
[e :U 352 ]
[; ;ff.c: 2964: if (!(cf & 0x02)) {
"2964
[e $ ! ! != & -> _cf `i -> 2 `i -> 0 `i 353  ]
{
[; ;ff.c: 2965: if (b & 0x01) cf |= 0x10;
"2965
[e $ ! != & -> _b `i -> 1 `i -> 0 `i 354  ]
[e =| _cf -> -> 16 `i `uc ]
[e :U 354 ]
[; ;ff.c: 2966: if (b & 0x04) cf |= 0x08;
"2966
[e $ ! != & -> _b `i -> 4 `i -> 0 `i 355  ]
[e =| _cf -> -> 8 `i `uc ]
[e :U 355 ]
"2967
}
[e :U 353 ]
[; ;ff.c: 2967: }
[; ;ff.c: 2969: dp->fn[11] = cf;
"2969
[e = *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux _cf ]
[; ;ff.c: 2971: return FR_OK;
"2971
[e ) . `E69 0 ]
[e $UE 307  ]
[; ;ff.c: 3036: }
"3036
[e :UE 307 ]
}
"3046
[v _follow_path `(E69 ~T0 @X0 1 sf2`*S4`*Cuc ]
"3050
{
[; ;ff.c: 3045: static
[; ;ff.c: 3046: FRESULT follow_path (
[; ;ff.c: 3047: DIR* dp,
[; ;ff.c: 3048: const TCHAR* path
[; ;ff.c: 3049: )
[; ;ff.c: 3050: {
[e :U _follow_path ]
"3047
[v _dp `*S4 ~T0 @X0 1 r1 ]
"3048
[v _path `*Cuc ~T0 @X0 1 r2 ]
"3050
[f ]
"3051
[v _res `E69 ~T0 @X0 1 a ]
"3052
[v _ns `uc ~T0 @X0 1 a ]
"3053
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 3051: FRESULT res;
[; ;ff.c: 3052: BYTE ns;
[; ;ff.c: 3053: FATFS *fs = dp->obj.fs;
[e = _fs . . *U _dp 0 0 ]
[; ;ff.c: 3061: {
"3061
{
[; ;ff.c: 3062: while (*path == '/' || *path == '\\') path++;
"3062
[e $U 357  ]
[e :U 358 ]
[e ++ _path * -> -> 1 `i `x -> -> # *U _path `i `x ]
[e :U 357 ]
[e $ || == -> *U _path `ui -> 47 `ui == -> *U _path `ui -> 92 `ui 358  ]
[e :U 359 ]
[; ;ff.c: 3063: dp->obj.sclust = 0;
"3063
[e = . . *U _dp 0 4 -> -> -> 0 `i `l `ul ]
"3064
}
[; ;ff.c: 3064: }
[; ;ff.c: 3082: if ((UINT)*path < ' ') {
"3082
[e $ ! < -> *U _path `ui -> 32 `ui 360  ]
{
[; ;ff.c: 3083: dp->fn[11] = 0x80;
"3083
[e = *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux -> -> 128 `i `uc ]
[; ;ff.c: 3084: res = dir_sdi(dp, 0);
"3084
[e = _res ( _dir_sdi (2 , _dp -> -> -> 0 `i `l `ul ]
"3086
}
[; ;ff.c: 3086: } else {
[e $U 361  ]
[e :U 360 ]
{
[; ;ff.c: 3087: for (;;) {
"3087
{
[e :U 362 ]
{
[; ;ff.c: 3088: res = create_name(dp, &path);
"3088
[e = _res ( _create_name (2 , _dp &U _path ]
[; ;ff.c: 3089: if (res != FR_OK) break;
"3089
[e $ ! != -> _res `i -> . `E69 0 `i 365  ]
[e $U 363  ]
[e :U 365 ]
[; ;ff.c: 3090: res = dir_find(dp);
"3090
[e = _res ( _dir_find (1 _dp ]
[; ;ff.c: 3091: ns = dp->fn[11];
"3091
[e = _ns *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux ]
[; ;ff.c: 3092: if (res != FR_OK) {
"3092
[e $ ! != -> _res `i -> . `E69 0 `i 366  ]
{
[; ;ff.c: 3093: if (res == FR_NO_FILE) {
"3093
[e $ ! == -> _res `i -> . `E69 4 `i 367  ]
{
[; ;ff.c: 3094: if (0 && (ns & 0x20)) {
"3094
[e $ ! && != -> 0 `i -> 0 `i != & -> _ns `i -> 32 `i -> 0 `i 368  ]
{
[; ;ff.c: 3095: if (!(ns & 0x04)) continue;
"3095
[e $ ! ! != & -> _ns `i -> 4 `i -> 0 `i 369  ]
[e $U 364  ]
[e :U 369 ]
[; ;ff.c: 3096: dp->fn[11] = 0x80;
"3096
[e = *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux -> -> 128 `i `uc ]
[; ;ff.c: 3097: res = FR_OK;
"3097
[e = _res . `E69 0 ]
"3098
}
[; ;ff.c: 3098: } else {
[e $U 370  ]
[e :U 368 ]
{
[; ;ff.c: 3099: if (!(ns & 0x04)) res = FR_NO_PATH;
"3099
[e $ ! ! != & -> _ns `i -> 4 `i -> 0 `i 371  ]
[e = _res . `E69 5 ]
[e :U 371 ]
"3100
}
[e :U 370 ]
"3101
}
[e :U 367 ]
[; ;ff.c: 3100: }
[; ;ff.c: 3101: }
[; ;ff.c: 3102: break;
"3102
[e $U 363  ]
"3103
}
[e :U 366 ]
[; ;ff.c: 3103: }
[; ;ff.c: 3104: if (ns & 0x04) break;
"3104
[e $ ! != & -> _ns `i -> 4 `i -> 0 `i 372  ]
[e $U 363  ]
[e :U 372 ]
[; ;ff.c: 3106: if (!(dp->obj.attr & 0x10)) {
"3106
[e $ ! ! != & -> . . *U _dp 0 2 `i -> 16 `i -> 0 `i 373  ]
{
[; ;ff.c: 3107: res = FR_NO_PATH; break;
"3107
[e = _res . `E69 5 ]
[e $U 363  ]
"3108
}
[e :U 373 ]
[; ;ff.c: 3108: }
[; ;ff.c: 3117: {
"3117
{
[; ;ff.c: 3118: dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr % ((UINT)512));
"3118
[e = . . *U _dp 0 4 ( _ld_clust (2 , _fs -> + &U . *U _fs 18 * -> % . *U _dp 1 -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fs 18 `ui `ux `*Cuc ]
"3119
}
"3120
}
[e :U 364 ]
[; ;ff.c: 3119: }
[; ;ff.c: 3120: }
[e $U 362  ]
[e :U 363 ]
}
"3121
}
[e :U 361 ]
[; ;ff.c: 3121: }
[; ;ff.c: 3123: return res;
"3123
[e ) _res ]
[e $UE 356  ]
[; ;ff.c: 3124: }
"3124
[e :UE 356 ]
}
"3134
[v _get_ldnumber `(i ~T0 @X0 1 sf1`**Cuc ]
"3137
{
[; ;ff.c: 3133: static
[; ;ff.c: 3134: int get_ldnumber (
[; ;ff.c: 3135: const TCHAR** path
[; ;ff.c: 3136: )
[; ;ff.c: 3137: {
[e :U _get_ldnumber ]
"3135
[v _path `**Cuc ~T0 @X0 1 r1 ]
"3137
[f ]
"3138
[v _tp `*Cuc ~T0 @X0 1 a ]
[v _tt `*Cuc ~T0 @X0 1 a ]
"3139
[v _i `ui ~T0 @X0 1 a ]
"3140
[v _vol `i ~T0 @X0 1 a ]
[; ;ff.c: 3138: const TCHAR *tp, *tt;
[; ;ff.c: 3139: UINT i;
[; ;ff.c: 3140: int vol = -1;
[e = _vol -U -> 1 `i ]
[; ;ff.c: 3149: if (*path != 0) {
"3149
[e $ ! != *U _path -> -> 0 `i `*Cuc 375  ]
{
[; ;ff.c: 3150: for (tt = *path; (UINT)*tt >= (1 ? ' ' : '!') && *tt != ':'; tt++) ;
"3150
{
[e = _tt *U _path ]
[e $U 379  ]
[e :U 376 ]
[e ++ _tt * -> -> 1 `i `x -> -> # *U _tt `i `x ]
[e :U 379 ]
[e $ && >= -> *U _tt `ui ? != -> 1 `i -> 0 `i : -> 32 `ui -> 33 `ui != -> *U _tt `ui -> 58 `ui 376  ]
[e :U 377 ]
}
[; ;ff.c: 3151: if (*tt == ':') {
"3151
[e $ ! == -> *U _tt `ui -> 58 `ui 380  ]
{
[; ;ff.c: 3152: tp = *path;
"3152
[e = _tp *U _path ]
[; ;ff.c: 3153: i = *tp++;
"3153
[e = _i -> *U ++ _tp * -> -> 1 `i `x -> -> # *U _tp `i `x `ui ]
[; ;ff.c: 3154: if (((i) >= '0' && (i) <= '9') && tp == tt) {
"3154
[e $ ! && && >= _i -> 48 `ui <= _i -> 57 `ui == _tp _tt 381  ]
{
[; ;ff.c: 3155: if ((i -= '0') < 1) {
"3155
[e $ ! < =- _i -> 48 `ui -> -> 1 `i `ui 382  ]
{
[; ;ff.c: 3156: vol = (int)i;
"3156
[e = _vol -> _i `i ]
[; ;ff.c: 3157: *path = ++tt;
"3157
[e = *U _path =+ _tt * -> -> 1 `i `x -> -> # *U _tt `i `x ]
"3158
}
[e :U 382 ]
"3159
}
[e :U 381 ]
"3176
}
[; ;ff.c: 3158: }
[; ;ff.c: 3159: }
[; ;ff.c: 3176: } else {
[e $U 383  ]
[e :U 380 ]
{
[; ;ff.c: 3180: vol = 0;
"3180
[e = _vol -> 0 `i ]
"3182
}
[e :U 383 ]
"3183
}
[e :U 375 ]
[; ;ff.c: 3182: }
[; ;ff.c: 3183: }
[; ;ff.c: 3184: return vol;
"3184
[e ) _vol ]
[e $UE 374  ]
[; ;ff.c: 3185: }
"3185
[e :UE 374 ]
}
"3195
[v _check_fs `(uc ~T0 @X0 1 sf2`*S1`ul ]
"3199
{
[; ;ff.c: 3194: static
[; ;ff.c: 3195: BYTE check_fs (
[; ;ff.c: 3196: FATFS* fs,
[; ;ff.c: 3197: DWORD sect
[; ;ff.c: 3198: )
[; ;ff.c: 3199: {
[e :U _check_fs ]
"3196
[v _fs `*S1 ~T0 @X0 1 r1 ]
"3197
[v _sect `ul ~T0 @X0 1 r2 ]
"3199
[f ]
[; ;ff.c: 3200: fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
"3200
[e = . *U _fs 3 -> -> 0 `i `uc ]
[e = . *U _fs 17 -> -1 `ul ]
[; ;ff.c: 3201: if (move_window(fs, sect) != FR_OK) return 4;
"3201
[e $ ! != -> ( _move_window (2 , _fs _sect `i -> . `E69 0 `i 385  ]
[e ) -> -> 4 `i `uc ]
[e $UE 384  ]
[e :U 385 ]
[; ;ff.c: 3203: if (ld_word(fs->win + 510) != 0xAA55) return 3;
"3203
[e $ ! != -> ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 510 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc `ui -> 43605 `ui 386  ]
[e ) -> -> 3 `i `uc ]
[e $UE 384  ]
[e :U 386 ]
[; ;ff.c: 3208: if (fs->win[0] == 0xE9 || fs->win[0] == 0xEB || fs->win[0] == 0xE8) {
"3208
[e $ ! || || == -> *U + &U . *U _fs 18 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux `i -> 233 `i == -> *U + &U . *U _fs 18 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux `i -> 235 `i == -> *U + &U . *U _fs 18 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux `i -> 232 `i 387  ]
{
[; ;ff.c: 3209: if (!mem_cmp(fs->win + 54, "FAT", 3)) return 0;
"3209
[e $ ! ! != ( _mem_cmp (3 , , -> + &U . *U _fs 18 * -> -> 54 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cv -> :s 3C `*Cv -> -> 3 `i `ui -> 0 `i 388  ]
[e ) -> -> 0 `i `uc ]
[e $UE 384  ]
[e :U 388 ]
[; ;ff.c: 3210: if (!mem_cmp(fs->win + 82, "FAT32", 5)) return 0;
"3210
[e $ ! ! != ( _mem_cmp (3 , , -> + &U . *U _fs 18 * -> -> 82 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cv -> :s 4C `*Cv -> -> 5 `i `ui -> 0 `i 389  ]
[e ) -> -> 0 `i `uc ]
[e $UE 384  ]
[e :U 389 ]
"3211
}
[e :U 387 ]
[; ;ff.c: 3211: }
[; ;ff.c: 3212: return 2;
"3212
[e ) -> -> 2 `i `uc ]
[e $UE 384  ]
[; ;ff.c: 3213: }
"3213
[e :UE 384 ]
}
"3223
[v _find_volume `(E69 ~T0 @X0 1 sf3`**Cuc`**S1`uc ]
"3228
{
[; ;ff.c: 3222: static
[; ;ff.c: 3223: FRESULT find_volume (
[; ;ff.c: 3224: const TCHAR** path,
[; ;ff.c: 3225: FATFS** rfs,
[; ;ff.c: 3226: BYTE mode
[; ;ff.c: 3227: )
[; ;ff.c: 3228: {
[e :U _find_volume ]
"3224
[v _path `**Cuc ~T0 @X0 1 r1 ]
"3225
[v _rfs `**S1 ~T0 @X0 1 r2 ]
"3226
[v _mode `uc ~T0 @X0 1 r3 ]
"3228
[f ]
"3229
[v _fmt `uc ~T0 @X0 1 a ]
[v _pt `*uc ~T0 @X0 1 a ]
"3230
[v _vol `i ~T0 @X0 1 a ]
"3231
[v _stat `uc ~T0 @X0 1 a ]
"3232
[v _bsect `ul ~T0 @X0 1 a ]
[v _fasize `ul ~T0 @X0 1 a ]
[v _tsect `ul ~T0 @X0 1 a ]
[v _sysect `ul ~T0 @X0 1 a ]
[v _nclst `ul ~T0 @X0 1 a ]
[v _szbfat `ul ~T0 @X0 1 a ]
[v _br `ul ~T0 @X0 -> 4 `i a ]
"3233
[v _nrsv `us ~T0 @X0 1 a ]
"3234
[v _fs `*S1 ~T0 @X0 1 a ]
"3235
[v _i `ui ~T0 @X0 1 a ]
[; ;ff.c: 3229: BYTE fmt, *pt;
[; ;ff.c: 3230: int vol;
[; ;ff.c: 3231: DSTATUS stat;
[; ;ff.c: 3232: DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
[; ;ff.c: 3233: WORD nrsv;
[; ;ff.c: 3234: FATFS *fs;
[; ;ff.c: 3235: UINT i;
[; ;ff.c: 3239: *rfs = 0;
"3239
[e = *U _rfs -> -> 0 `i `*S1 ]
[; ;ff.c: 3240: vol = get_ldnumber(path);
"3240
[e = _vol ( _get_ldnumber (1 _path ]
[; ;ff.c: 3241: if (vol < 0) return FR_INVALID_DRIVE;
"3241
[e $ ! < _vol -> 0 `i 391  ]
[e ) . `E69 11 ]
[e $UE 390  ]
[e :U 391 ]
[; ;ff.c: 3244: fs = FatFs[vol];
"3244
[e = _fs *U + &U _FatFs * -> -> _vol `ui `ux -> -> # *U &U _FatFs `ui `ux ]
[; ;ff.c: 3245: if (!fs) return FR_NOT_ENABLED;
"3245
[e $ ! ! != _fs -> -> 0 `i `*S1 392  ]
[e ) . `E69 12 ]
[e $UE 390  ]
[e :U 392 ]
[; ;ff.c: 3249: *rfs = fs;
"3249
[e = *U _rfs _fs ]
[; ;ff.c: 3251: mode &= (BYTE)~0x01;
"3251
[e =& _mode -> ~ -> 1 `i `uc ]
[; ;ff.c: 3252: if (fs->fs_type != 0) {
"3252
[e $ ! != -> . *U _fs 0 `i -> 0 `i 393  ]
{
[; ;ff.c: 3253: stat = disk_status(fs->pdrv);
"3253
[e = _stat ( _disk_status (1 . *U _fs 1 ]
[; ;ff.c: 3254: if (!(stat & 0x01)) {
"3254
[e $ ! ! != & -> _stat `i -> 1 `i -> 0 `i 394  ]
{
[; ;ff.c: 3255: if (!0 && mode && (stat & 0x04)) {
"3255
[e $ ! && && ! != -> 0 `i -> 0 `i != -> _mode `i -> -> -> 0 `i `uc `i != & -> _stat `i -> 4 `i -> 0 `i 395  ]
{
[; ;ff.c: 3256: return FR_WRITE_PROTECTED;
"3256
[e ) . `E69 10 ]
[e $UE 390  ]
"3257
}
[e :U 395 ]
[; ;ff.c: 3257: }
[; ;ff.c: 3258: return FR_OK;
"3258
[e ) . `E69 0 ]
[e $UE 390  ]
"3259
}
[e :U 394 ]
"3260
}
[e :U 393 ]
[; ;ff.c: 3259: }
[; ;ff.c: 3260: }
[; ;ff.c: 3265: fs->fs_type = 0;
"3265
[e = . *U _fs 0 -> -> 0 `i `uc ]
[; ;ff.c: 3266: fs->pdrv = (BYTE)(vol);
"3266
[e = . *U _fs 1 -> _vol `uc ]
[; ;ff.c: 3267: stat = disk_initialize(fs->pdrv);
"3267
[e = _stat ( _disk_initialize (1 . *U _fs 1 ]
[; ;ff.c: 3268: if (stat & 0x01) {
"3268
[e $ ! != & -> _stat `i -> 1 `i -> 0 `i 396  ]
{
[; ;ff.c: 3269: return FR_NOT_READY;
"3269
[e ) . `E69 3 ]
[e $UE 390  ]
"3270
}
[e :U 396 ]
[; ;ff.c: 3270: }
[; ;ff.c: 3271: if (!0 && mode && (stat & 0x04)) {
"3271
[e $ ! && && ! != -> 0 `i -> 0 `i != -> _mode `i -> -> -> 0 `i `uc `i != & -> _stat `i -> 4 `i -> 0 `i 397  ]
{
[; ;ff.c: 3272: return FR_WRITE_PROTECTED;
"3272
[e ) . `E69 10 ]
[e $UE 390  ]
"3273
}
[e :U 397 ]
[; ;ff.c: 3273: }
[; ;ff.c: 3280: bsect = 0;
"3280
[e = _bsect -> -> -> 0 `i `l `ul ]
[; ;ff.c: 3281: fmt = check_fs(fs, bsect);
"3281
[e = _fmt ( _check_fs (2 , _fs _bsect ]
[; ;ff.c: 3282: if (fmt == 2 || (fmt < 2 && 0 != 0)) {
"3282
[e $ ! || == -> _fmt `i -> 2 `i && < -> _fmt `i -> 2 `i != -> 0 `i -> 0 `i 398  ]
{
[; ;ff.c: 3283: for (i = 0; i < 4; i++) {
"3283
{
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 4 `i `ui 399  ]
[e $U 400  ]
[e :U 399 ]
{
[; ;ff.c: 3284: pt = fs->win + (446 + i * 16);
"3284
[e = _pt + &U . *U _fs 18 * -> + -> -> 446 `i `ui * _i -> -> 16 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux ]
[; ;ff.c: 3285: br[i] = pt[4] ? ld_dword(pt + 8) : 0;
"3285
[e = *U + &U _br * -> _i `ux -> -> # *U &U _br `ui `ux ? != -> *U + _pt * -> -> 4 `i `x -> -> # *U _pt `i `x `i -> -> -> 0 `i `uc `i : ( _ld_dword (1 -> + _pt * -> -> 8 `i `x -> -> # *U _pt `i `x `*Cuc -> -> -> 0 `i `l `ul ]
"3286
}
"3283
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 4 `i `ui 399  ]
[e :U 400 ]
"3286
}
[; ;ff.c: 3286: }
[; ;ff.c: 3287: i = 0;
"3287
[e = _i -> -> 0 `i `ui ]
[; ;ff.c: 3288: if (i != 0) i--;
"3288
[e $ ! != _i -> -> 0 `i `ui 402  ]
[e -- _i -> -> 1 `i `ui ]
[e :U 402 ]
[; ;ff.c: 3289: do {
"3289
[e :U 405 ]
{
[; ;ff.c: 3290: bsect = br[i];
"3290
[e = _bsect *U + &U _br * -> _i `ux -> -> # *U &U _br `ui `ux ]
[; ;ff.c: 3291: fmt = bsect ? check_fs(fs, bsect) : 3;
"3291
[e = _fmt -> ? != _bsect -> -> 0 `i `ul : -> ( _check_fs (2 , _fs _bsect `i -> 3 `i `uc ]
"3292
}
[; ;ff.c: 3292: } while (0 == 0 && fmt >= 2 && ++i < 4);
[e $ && && == -> 0 `i -> 0 `i >= -> _fmt `i -> 2 `i < =+ _i -> -> 1 `i `ui -> -> 4 `i `ui 405  ]
[e :U 404 ]
"3293
}
[e :U 398 ]
[; ;ff.c: 3293: }
[; ;ff.c: 3294: if (fmt == 4) return FR_DISK_ERR;
"3294
[e $ ! == -> _fmt `i -> 4 `i 406  ]
[e ) . `E69 1 ]
[e $UE 390  ]
[e :U 406 ]
[; ;ff.c: 3295: if (fmt >= 2) return FR_NO_FILESYSTEM;
"3295
[e $ ! >= -> _fmt `i -> 2 `i 407  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 407 ]
[; ;ff.c: 3346: {
"3346
{
[; ;ff.c: 3347: if (ld_word(fs->win + 11) != ((UINT)512)) return FR_NO_FILESYSTEM;
"3347
[e $ ! != -> ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 11 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc `ui -> -> 512 `i `ui 408  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 408 ]
[; ;ff.c: 3349: fasize = ld_word(fs->win + 22);
"3349
[e = _fasize -> ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 22 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc `ul ]
[; ;ff.c: 3350: if (fasize == 0) fasize = ld_dword(fs->win + 36);
"3350
[e $ ! == _fasize -> -> -> 0 `i `l `ul 409  ]
[e = _fasize ( _ld_dword (1 -> + &U . *U _fs 18 * -> -> 36 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc ]
[e :U 409 ]
[; ;ff.c: 3351: fs->fsize = fasize;
"3351
[e = . *U _fs 12 _fasize ]
[; ;ff.c: 3353: fs->n_fats = fs->win[16];
"3353
[e = . *U _fs 2 *U + &U . *U _fs 18 * -> -> -> 16 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux ]
[; ;ff.c: 3354: if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;
"3354
[e $ ! && != -> . *U _fs 2 `i -> 1 `i != -> . *U _fs 2 `i -> 2 `i 410  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 410 ]
[; ;ff.c: 3355: fasize *= fs->n_fats;
"3355
[e =* _fasize -> . *U _fs 2 `ul ]
[; ;ff.c: 3357: fs->csize = fs->win[13];
"3357
[e = . *U _fs 7 -> *U + &U . *U _fs 18 * -> -> -> 13 `i `ui `ux -> -> # *U &U . *U _fs 18 `ui `ux `us ]
[; ;ff.c: 3358: if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;
"3358
[e $ ! || == -> . *U _fs 7 `ui -> -> 0 `i `ui != & -> . *U _fs 7 `ui - -> . *U _fs 7 `ui -> -> 1 `i `ui -> -> 0 `i `ui 411  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 411 ]
[; ;ff.c: 3360: fs->n_rootdir = ld_word(fs->win + 17);
"3360
[e = . *U _fs 6 ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 17 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc ]
[; ;ff.c: 3361: if (fs->n_rootdir % (((UINT)512) / 32)) return FR_NO_FILESYSTEM;
"3361
[e $ ! != % -> . *U _fs 6 `ui / -> -> 512 `i `ui -> -> 32 `i `ui -> -> 0 `i `ui 412  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 412 ]
[; ;ff.c: 3363: tsect = ld_word(fs->win + 19);
"3363
[e = _tsect -> ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 19 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc `ul ]
[; ;ff.c: 3364: if (tsect == 0) tsect = ld_dword(fs->win + 32);
"3364
[e $ ! == _tsect -> -> -> 0 `i `l `ul 413  ]
[e = _tsect ( _ld_dword (1 -> + &U . *U _fs 18 * -> -> 32 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc ]
[e :U 413 ]
[; ;ff.c: 3366: nrsv = ld_word(fs->win + 14);
"3366
[e = _nrsv ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 14 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc ]
[; ;ff.c: 3367: if (nrsv == 0) return FR_NO_FILESYSTEM;
"3367
[e $ ! == -> _nrsv `ui -> -> 0 `i `ui 414  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 414 ]
[; ;ff.c: 3370: sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
"3370
[e = _sysect + + -> _nrsv `ul _fasize -> / -> . *U _fs 6 `ui / -> -> 512 `i `ui -> -> 32 `i `ui `ul ]
[; ;ff.c: 3371: if (tsect < sysect) return FR_NO_FILESYSTEM;
"3371
[e $ ! < _tsect _sysect 415  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 415 ]
[; ;ff.c: 3372: nclst = (tsect - sysect) / fs->csize;
"3372
[e = _nclst / - _tsect _sysect -> . *U _fs 7 `ul ]
[; ;ff.c: 3373: if (nclst == 0) return FR_NO_FILESYSTEM;
"3373
[e $ ! == _nclst -> -> -> 0 `i `l `ul 416  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 416 ]
[; ;ff.c: 3374: fmt = 0;
"3374
[e = _fmt -> -> 0 `i `uc ]
[; ;ff.c: 3375: if (nclst <= 0x0FFFFFF5) fmt = 3;
"3375
[e $ ! <= _nclst -> -> 268435445 `l `ul 417  ]
[e = _fmt -> -> 3 `i `uc ]
[e :U 417 ]
[; ;ff.c: 3376: if (nclst <= 0xFFF5) fmt = 2;
"3376
[e $ ! <= _nclst -> -> 65525 `ui `ul 418  ]
[e = _fmt -> -> 2 `i `uc ]
[e :U 418 ]
[; ;ff.c: 3377: if (nclst <= 0xFF5) fmt = 1;
"3377
[e $ ! <= _nclst -> -> -> 4085 `i `l `ul 419  ]
[e = _fmt -> -> 1 `i `uc ]
[e :U 419 ]
[; ;ff.c: 3378: if (fmt == 0) return FR_NO_FILESYSTEM;
"3378
[e $ ! == -> _fmt `i -> 0 `i 420  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 420 ]
[; ;ff.c: 3381: fs->n_fatent = nclst + 2;
"3381
[e = . *U _fs 11 + _nclst -> -> -> 2 `i `l `ul ]
[; ;ff.c: 3382: fs->volbase = bsect;
"3382
[e = . *U _fs 13 _bsect ]
[; ;ff.c: 3383: fs->fatbase = bsect + nrsv;
"3383
[e = . *U _fs 14 + _bsect -> _nrsv `ul ]
[; ;ff.c: 3384: fs->database = bsect + sysect;
"3384
[e = . *U _fs 16 + _bsect _sysect ]
[; ;ff.c: 3385: if (fmt == 3) {
"3385
[e $ ! == -> _fmt `i -> 3 `i 421  ]
{
[; ;ff.c: 3386: if (ld_word(fs->win + 42) != 0) return FR_NO_FILESYSTEM;
"3386
[e $ ! != -> ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 42 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc `ui -> -> 0 `i `ui 422  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 422 ]
[; ;ff.c: 3387: if (fs->n_rootdir != 0) return FR_NO_FILESYSTEM;
"3387
[e $ ! != -> . *U _fs 6 `ui -> -> 0 `i `ui 423  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 423 ]
[; ;ff.c: 3388: fs->dirbase = ld_dword(fs->win + 44);
"3388
[e = . *U _fs 15 ( _ld_dword (1 -> + &U . *U _fs 18 * -> -> 44 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc ]
[; ;ff.c: 3389: szbfat = fs->n_fatent * 4;
"3389
[e = _szbfat * . *U _fs 11 -> -> -> 4 `i `l `ul ]
"3390
}
[; ;ff.c: 3390: } else {
[e $U 424  ]
[e :U 421 ]
{
[; ;ff.c: 3391: if (fs->n_rootdir == 0) return FR_NO_FILESYSTEM;
"3391
[e $ ! == -> . *U _fs 6 `ui -> -> 0 `i `ui 425  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 425 ]
[; ;ff.c: 3392: fs->dirbase = fs->fatbase + fasize;
"3392
[e = . *U _fs 15 + . *U _fs 14 _fasize ]
[; ;ff.c: 3393: szbfat = (fmt == 2) ?
[; ;ff.c: 3394: fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
"3394
[e = _szbfat ? == -> _fmt `i -> 2 `i : * . *U _fs 11 -> -> -> 2 `i `l `ul + / * . *U _fs 11 -> -> -> 3 `i `l `ul -> -> -> 2 `i `l `ul & . *U _fs 11 -> -> -> 1 `i `l `ul ]
"3395
}
[e :U 424 ]
[; ;ff.c: 3395: }
[; ;ff.c: 3396: if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512)) return FR_NO_FILESYSTEM;
"3396
[e $ ! < . *U _fs 12 / + _szbfat -> - -> -> 512 `i `ui -> -> 1 `i `ui `ul -> -> -> 512 `i `ui `ul 426  ]
[e ) . `E69 13 ]
[e $UE 390  ]
[e :U 426 ]
[; ;ff.c: 3400: fs->last_clst = fs->free_clst = 0xFFFFFFFF;
"3400
[e = . *U _fs 9 = . *U _fs 10 -> -1 `ul ]
[; ;ff.c: 3401: fs->fsi_flag = 0x80;
"3401
[e = . *U _fs 4 -> -> 128 `i `uc ]
[; ;ff.c: 3403: if (fmt == 3
[; ;ff.c: 3404: && ld_word(fs->win + 48) == 1
[; ;ff.c: 3405: && move_window(fs, bsect + 1) == FR_OK)
"3405
[e $ ! && && == -> _fmt `i -> 3 `i == -> ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 48 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc `ui -> -> 1 `i `ui == -> ( _move_window (2 , _fs + _bsect -> -> -> 1 `i `l `ul `i -> . `E69 0 `i 427  ]
[; ;ff.c: 3406: {
"3406
{
[; ;ff.c: 3407: fs->fsi_flag = 0;
"3407
[e = . *U _fs 4 -> -> 0 `i `uc ]
[; ;ff.c: 3408: if (ld_word(fs->win + 510) == 0xAA55
[; ;ff.c: 3409: && ld_dword(fs->win + 0) == 0x41615252
[; ;ff.c: 3410: && ld_dword(fs->win + 484) == 0x61417272)
"3410
[e $ ! && && == -> ( _ld_word (1 -> + &U . *U _fs 18 * -> -> 510 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc `ui -> 43605 `ui == ( _ld_dword (1 -> + &U . *U _fs 18 * -> -> 0 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc -> -> 1096897106 `l `ul == ( _ld_dword (1 -> + &U . *U _fs 18 * -> -> 484 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc -> -> 1631679090 `l `ul 428  ]
[; ;ff.c: 3411: {
"3411
{
[; ;ff.c: 3413: fs->free_clst = ld_dword(fs->win + 488);
"3413
[e = . *U _fs 10 ( _ld_dword (1 -> + &U . *U _fs 18 * -> -> 488 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc ]
[; ;ff.c: 3416: fs->last_clst = ld_dword(fs->win + 492);
"3416
[e = . *U _fs 9 ( _ld_dword (1 -> + &U . *U _fs 18 * -> -> 492 `i `x -> -> # *U &U . *U _fs 18 `i `x `*Cuc ]
"3418
}
[e :U 428 ]
"3419
}
[e :U 427 ]
"3422
}
[; ;ff.c: 3418: }
[; ;ff.c: 3419: }
[; ;ff.c: 3422: }
[; ;ff.c: 3424: fs->fs_type = fmt;
"3424
[e = . *U _fs 0 _fmt ]
[; ;ff.c: 3425: fs->id = ++Fsid;
"3425
[e = . *U _fs 5 =+ _Fsid -> -> 1 `i `us ]
[; ;ff.c: 3427: fs->lfnbuf = LfnBuf;
"3427
[e = . *U _fs 8 &U _LfnBuf ]
[; ;ff.c: 3438: return FR_OK;
"3438
[e ) . `E69 0 ]
[e $UE 390  ]
[; ;ff.c: 3439: }
"3439
[e :UE 390 ]
}
"3449
[v _validate `(E69 ~T0 @X0 1 sf2`*S2`**S1 ]
"3453
{
[; ;ff.c: 3448: static
[; ;ff.c: 3449: FRESULT validate (
[; ;ff.c: 3450: FFOBJID* obj,
[; ;ff.c: 3451: FATFS** rfs
[; ;ff.c: 3452: )
[; ;ff.c: 3453: {
[e :U _validate ]
"3450
[v _obj `*S2 ~T0 @X0 1 r1 ]
"3451
[v _rfs `**S1 ~T0 @X0 1 r2 ]
"3453
[f ]
"3454
[v _res `E69 ~T0 @X0 1 a ]
[; ;ff.c: 3454: FRESULT res = FR_INVALID_OBJECT;
[e = _res . `E69 9 ]
[; ;ff.c: 3457: if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {
"3457
[e $ ! && && && != _obj -> -> 0 `i `*S2 != . *U _obj 0 -> -> 0 `i `*S1 != -> . *U . *U _obj 0 0 `i -> -> -> 0 `i `uc `i == -> . *U _obj 1 `ui -> . *U . *U _obj 0 5 `ui 430  ]
{
[; ;ff.c: 3469: if (!(disk_status(obj->fs->pdrv) & 0x01)) {
"3469
[e $ ! ! != & -> ( _disk_status (1 . *U . *U _obj 0 1 `i -> 1 `i -> 0 `i 431  ]
{
[; ;ff.c: 3470: res = FR_OK;
"3470
[e = _res . `E69 0 ]
"3471
}
[e :U 431 ]
"3473
}
[e :U 430 ]
[; ;ff.c: 3471: }
[; ;ff.c: 3473: }
[; ;ff.c: 3474: *rfs = (res == FR_OK) ? obj->fs : 0;
"3474
[e = *U _rfs ? == -> _res `i -> . `E69 0 `i : . *U _obj 0 -> -> 0 `i `*S1 ]
[; ;ff.c: 3475: return res;
"3475
[e ) _res ]
[e $UE 429  ]
[; ;ff.c: 3476: }
"3476
[e :UE 429 ]
}
"3493
[v _f_mount `(E69 ~T0 @X0 1 ef3`*S1`*Cuc`uc ]
"3498
{
[; ;ff.c: 3493: FRESULT f_mount (
[; ;ff.c: 3494: FATFS* fs,
[; ;ff.c: 3495: const TCHAR* path,
[; ;ff.c: 3496: BYTE opt
[; ;ff.c: 3497: )
[; ;ff.c: 3498: {
[e :U _f_mount ]
"3494
[v _fs `*S1 ~T0 @X0 1 r1 ]
"3495
[v _path `*Cuc ~T0 @X0 1 r2 ]
"3496
[v _opt `uc ~T0 @X0 1 r3 ]
"3498
[f ]
"3499
[v _cfs `*S1 ~T0 @X0 1 a ]
"3500
[v _vol `i ~T0 @X0 1 a ]
"3501
[v _res `E69 ~T0 @X0 1 a ]
"3502
[v _rp `*Cuc ~T0 @X0 1 a ]
[; ;ff.c: 3499: FATFS *cfs;
[; ;ff.c: 3500: int vol;
[; ;ff.c: 3501: FRESULT res;
[; ;ff.c: 3502: const TCHAR *rp = path;
[e = _rp _path ]
[; ;ff.c: 3506: vol = get_ldnumber(&rp);
"3506
[e = _vol ( _get_ldnumber (1 &U _rp ]
[; ;ff.c: 3507: if (vol < 0) return FR_INVALID_DRIVE;
"3507
[e $ ! < _vol -> 0 `i 433  ]
[e ) . `E69 11 ]
[e $UE 432  ]
[e :U 433 ]
[; ;ff.c: 3508: cfs = FatFs[vol];
"3508
[e = _cfs *U + &U _FatFs * -> -> _vol `ui `ux -> -> # *U &U _FatFs `ui `ux ]
[; ;ff.c: 3510: if (cfs) {
"3510
[e $ ! != _cfs -> -> 0 `i `*S1 434  ]
{
[; ;ff.c: 3517: cfs->fs_type = 0;
"3517
[e = . *U _cfs 0 -> -> 0 `i `uc ]
"3518
}
[e :U 434 ]
[; ;ff.c: 3518: }
[; ;ff.c: 3520: if (fs) {
"3520
[e $ ! != _fs -> -> 0 `i `*S1 435  ]
{
[; ;ff.c: 3521: fs->fs_type = 0;
"3521
[e = . *U _fs 0 -> -> 0 `i `uc ]
"3525
}
[e :U 435 ]
[; ;ff.c: 3525: }
[; ;ff.c: 3526: FatFs[vol] = fs;
"3526
[e = *U + &U _FatFs * -> -> _vol `ui `ux -> -> # *U &U _FatFs `ui `ux _fs ]
[; ;ff.c: 3528: if (opt == 0) return FR_OK;
"3528
[e $ ! == -> _opt `i -> 0 `i 436  ]
[e ) . `E69 0 ]
[e $UE 432  ]
[e :U 436 ]
[; ;ff.c: 3530: res = find_volume(&path, &fs, 0);
"3530
[e = _res ( _find_volume (3 , , &U _path &U _fs -> -> 0 `i `uc ]
[; ;ff.c: 3531: return res;
"3531
[e ) _res ]
[e $UE 432  ]
[; ;ff.c: 3532: }
"3532
[e :UE 432 ]
}
"3541
[v _f_open `(E69 ~T0 @X0 1 ef3`*S3`*Cuc`uc ]
"3546
{
[; ;ff.c: 3541: FRESULT f_open (
[; ;ff.c: 3542: FIL* fp,
[; ;ff.c: 3543: const TCHAR* path,
[; ;ff.c: 3544: BYTE mode
[; ;ff.c: 3545: )
[; ;ff.c: 3546: {
[e :U _f_open ]
"3542
[v _fp `*S3 ~T0 @X0 1 r1 ]
"3543
[v _path `*Cuc ~T0 @X0 1 r2 ]
"3544
[v _mode `uc ~T0 @X0 1 r3 ]
"3546
[f ]
"3547
[v _res `E69 ~T0 @X0 1 a ]
"3548
[v _dj `S4 ~T0 @X0 1 a ]
"3549
[v _fs `*S1 ~T0 @X0 1 a ]
"3551
[v _dw `ul ~T0 @X0 1 a ]
[v _cl `ul ~T0 @X0 1 a ]
[v _bcs `ul ~T0 @X0 1 a ]
[v _clst `ul ~T0 @X0 1 a ]
[v _sc `ul ~T0 @X0 1 a ]
"3552
[v _ofs `ul ~T0 @X0 1 a ]
[; ;ff.c: 3547: FRESULT res;
[; ;ff.c: 3548: DIR dj;
[; ;ff.c: 3549: FATFS *fs;
[; ;ff.c: 3551: DWORD dw, cl, bcs, clst, sc;
[; ;ff.c: 3552: FSIZE_t ofs;
[; ;ff.c: 3557: if (!fp) return FR_INVALID_OBJECT;
"3557
[e $ ! ! != _fp -> -> 0 `i `*S3 438  ]
[e ) . `E69 9 ]
[e $UE 437  ]
[e :U 438 ]
[; ;ff.c: 3560: mode &= 0 ? 0x01 : 0x01 | 0x02 | 0x08 | 0x04 | 0x10 | 0x30;
"3560
[e =& _mode -> ? != -> 0 `i -> 0 `i : -> 1 `i | | | | | -> 1 `i -> 2 `i -> 8 `i -> 4 `i -> 16 `i -> 48 `i `uc ]
[; ;ff.c: 3561: res = find_volume(&path, &fs, mode);
"3561
[e = _res ( _find_volume (3 , , &U _path &U _fs _mode ]
[; ;ff.c: 3562: if (res == FR_OK) {
"3562
[e $ ! == -> _res `i -> . `E69 0 `i 439  ]
{
[; ;ff.c: 3563: dj.obj.fs = fs;
"3563
[e = . . _dj 0 0 _fs ]
[; ;ff.c: 3564: ;
[; ;ff.c: 3565: res = follow_path(&dj, path);
"3565
[e = _res ( _follow_path (2 , &U _dj _path ]
[; ;ff.c: 3567: if (res == FR_OK) {
"3567
[e $ ! == -> _res `i -> . `E69 0 `i 440  ]
{
[; ;ff.c: 3568: if (dj.fn[11] & 0x80) {
"3568
[e $ ! != & -> *U + &U . _dj 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . _dj 5 `ui `ux `i -> 128 `i -> 0 `i 441  ]
{
[; ;ff.c: 3569: res = FR_INVALID_NAME;
"3569
[e = _res . `E69 6 ]
"3570
}
[e :U 441 ]
"3576
}
[e :U 440 ]
[; ;ff.c: 3570: }
[; ;ff.c: 3576: }
[; ;ff.c: 3578: if (mode & (0x08 | 0x10 | 0x04)) {
"3578
[e $ ! != & -> _mode `i | | -> 8 `i -> 16 `i -> 4 `i -> 0 `i 442  ]
{
[; ;ff.c: 3579: if (res != FR_OK) {
"3579
[e $ ! != -> _res `i -> . `E69 0 `i 443  ]
{
[; ;ff.c: 3580: if (res == FR_NO_FILE) {
"3580
[e $ ! == -> _res `i -> . `E69 4 `i 444  ]
{
[; ;ff.c: 3584: res = dir_register(&dj);
"3584
[e = _res ( _dir_register (1 &U _dj ]
"3586
}
[e :U 444 ]
[; ;ff.c: 3586: }
[; ;ff.c: 3587: mode |= 0x08;
"3587
[e =| _mode -> -> 8 `i `uc ]
"3588
}
[; ;ff.c: 3588: }
[e $U 445  ]
"3589
[e :U 443 ]
[; ;ff.c: 3589: else {
{
[; ;ff.c: 3590: if (dj.obj.attr & (0x01 | 0x10)) {
"3590
[e $ ! != & -> . . _dj 0 2 `i | -> 1 `i -> 16 `i -> 0 `i 446  ]
{
[; ;ff.c: 3591: res = FR_DENIED;
"3591
[e = _res . `E69 7 ]
"3592
}
[; ;ff.c: 3592: } else {
[e $U 447  ]
[e :U 446 ]
{
[; ;ff.c: 3593: if (mode & 0x04) res = FR_EXIST;
"3593
[e $ ! != & -> _mode `i -> 4 `i -> 0 `i 448  ]
[e = _res . `E69 8 ]
[e :U 448 ]
"3594
}
[e :U 447 ]
"3595
}
[e :U 445 ]
[; ;ff.c: 3594: }
[; ;ff.c: 3595: }
[; ;ff.c: 3596: if (res == FR_OK && (mode & 0x08)) {
"3596
[e $ ! && == -> _res `i -> . `E69 0 `i != & -> _mode `i -> 8 `i -> 0 `i 449  ]
{
[; ;ff.c: 3615: {
"3615
{
[; ;ff.c: 3617: cl = ld_clust(fs, dj.dir);
"3617
[e = _cl ( _ld_clust (2 , _fs -> . _dj 4 `*Cuc ]
[; ;ff.c: 3618: st_dword(dj.dir + 14, get_fattime());
"3618
[e ( _st_dword (2 , + . _dj 4 * -> -> 14 `i `x -> -> # *U . _dj 4 `i `x ( _get_fattime ..  ]
[; ;ff.c: 3619: dj.dir[11] = 0x20;
"3619
[e = *U + . _dj 4 * -> -> 11 `i `x -> -> # *U . _dj 4 `i `x -> -> 32 `i `uc ]
[; ;ff.c: 3620: st_clust(fs, dj.dir, 0);
"3620
[e ( _st_clust (3 , , _fs . _dj 4 -> -> -> 0 `i `l `ul ]
[; ;ff.c: 3621: st_dword(dj.dir + 28, 0);
"3621
[e ( _st_dword (2 , + . _dj 4 * -> -> 28 `i `x -> -> # *U . _dj 4 `i `x -> -> -> 0 `i `l `ul ]
[; ;ff.c: 3622: fs->wflag = 1;
"3622
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 3623: if (cl != 0) {
"3623
[e $ ! != _cl -> -> -> 0 `i `l `ul 450  ]
{
[; ;ff.c: 3624: dw = fs->winsect;
"3624
[e = _dw . *U _fs 17 ]
[; ;ff.c: 3625: res = remove_chain(&dj.obj, cl, 0);
"3625
[e = _res ( _remove_chain (3 , , &U . _dj 0 _cl -> -> -> 0 `i `l `ul ]
[; ;ff.c: 3626: if (res == FR_OK) {
"3626
[e $ ! == -> _res `i -> . `E69 0 `i 451  ]
{
[; ;ff.c: 3627: res = move_window(fs, dw);
"3627
[e = _res ( _move_window (2 , _fs _dw ]
[; ;ff.c: 3628: fs->last_clst = cl - 1;
"3628
[e = . *U _fs 9 - _cl -> -> -> 1 `i `l `ul ]
"3629
}
[e :U 451 ]
"3630
}
[e :U 450 ]
"3631
}
"3632
}
[e :U 449 ]
"3633
}
[; ;ff.c: 3629: }
[; ;ff.c: 3630: }
[; ;ff.c: 3631: }
[; ;ff.c: 3632: }
[; ;ff.c: 3633: }
[e $U 452  ]
"3634
[e :U 442 ]
[; ;ff.c: 3634: else {
{
[; ;ff.c: 3635: if (res == FR_OK) {
"3635
[e $ ! == -> _res `i -> . `E69 0 `i 453  ]
{
[; ;ff.c: 3636: if (dj.obj.attr & 0x10) {
"3636
[e $ ! != & -> . . _dj 0 2 `i -> 16 `i -> 0 `i 454  ]
{
[; ;ff.c: 3637: res = FR_NO_FILE;
"3637
[e = _res . `E69 4 ]
"3638
}
[; ;ff.c: 3638: } else {
[e $U 455  ]
[e :U 454 ]
{
[; ;ff.c: 3639: if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
"3639
[e $ ! && != & -> _mode `i -> 2 `i -> 0 `i != & -> . . _dj 0 2 `i -> 1 `i -> 0 `i 456  ]
{
[; ;ff.c: 3640: res = FR_DENIED;
"3640
[e = _res . `E69 7 ]
"3641
}
[e :U 456 ]
"3642
}
[e :U 455 ]
"3643
}
[e :U 453 ]
"3644
}
[e :U 452 ]
[; ;ff.c: 3641: }
[; ;ff.c: 3642: }
[; ;ff.c: 3643: }
[; ;ff.c: 3644: }
[; ;ff.c: 3645: if (res == FR_OK) {
"3645
[e $ ! == -> _res `i -> . `E69 0 `i 457  ]
{
[; ;ff.c: 3646: if (mode & 0x08) mode |= 0x40;
"3646
[e $ ! != & -> _mode `i -> 8 `i -> 0 `i 458  ]
[e =| _mode -> -> 64 `i `uc ]
[e :U 458 ]
[; ;ff.c: 3647: fp->dir_sect = fs->winsect;
"3647
[e = . *U _fp 6 . *U _fs 17 ]
[; ;ff.c: 3648: fp->dir_ptr = dj.dir;
"3648
[e = . *U _fp 7 . _dj 4 ]
"3653
}
[e :U 457 ]
[; ;ff.c: 3653: }
[; ;ff.c: 3666: if (res == FR_OK) {
"3666
[e $ ! == -> _res `i -> . `E69 0 `i 459  ]
{
[; ;ff.c: 3675: {
"3675
{
[; ;ff.c: 3676: fp->obj.sclust = ld_clust(fs, dj.dir);
"3676
[e = . . *U _fp 0 4 ( _ld_clust (2 , _fs -> . _dj 4 `*Cuc ]
[; ;ff.c: 3677: fp->obj.objsize = ld_dword(dj.dir + 28);
"3677
[e = . . *U _fp 0 5 ( _ld_dword (1 -> + . _dj 4 * -> -> 28 `i `x -> -> # *U . _dj 4 `i `x `*Cuc ]
"3678
}
[; ;ff.c: 3678: }
[; ;ff.c: 3682: fp->obj.fs = fs;
"3682
[e = . . *U _fp 0 0 _fs ]
[; ;ff.c: 3683: fp->obj.id = fs->id;
"3683
[e = . . *U _fp 0 1 . *U _fs 5 ]
[; ;ff.c: 3684: fp->flag = mode;
"3684
[e = . *U _fp 1 _mode ]
[; ;ff.c: 3685: fp->err = 0;
"3685
[e = . *U _fp 2 -> -> 0 `i `uc ]
[; ;ff.c: 3686: fp->sect = 0;
"3686
[e = . *U _fp 5 -> -> -> 0 `i `l `ul ]
[; ;ff.c: 3687: fp->fptr = 0;
"3687
[e = . *U _fp 3 -> -> -> 0 `i `l `ul ]
[; ;ff.c: 3690: mem_set(fp->buf, 0, 512);
"3690
[e ( _mem_set (3 , , -> &U . *U _fp 8 `*v -> 0 `i -> -> 512 `i `ui ]
[; ;ff.c: 3692: if ((mode & 0x20) && fp->obj.objsize > 0) {
"3692
[e $ ! && != & -> _mode `i -> 32 `i -> 0 `i > . . *U _fp 0 5 -> -> -> 0 `i `l `ul 460  ]
{
[; ;ff.c: 3693: fp->fptr = fp->obj.objsize;
"3693
[e = . *U _fp 3 . . *U _fp 0 5 ]
[; ;ff.c: 3694: bcs = (DWORD)fs->csize * ((UINT)512);
"3694
[e = _bcs * -> . *U _fs 7 `ul -> -> -> 512 `i `ui `ul ]
[; ;ff.c: 3695: clst = fp->obj.sclust;
"3695
[e = _clst . . *U _fp 0 4 ]
[; ;ff.c: 3696: for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
"3696
{
[e = _ofs . . *U _fp 0 5 ]
[e $U 464  ]
[e :U 461 ]
{
[; ;ff.c: 3697: clst = get_fat(&fp->obj, clst);
"3697
[e = _clst ( _get_fat (2 , &U . *U _fp 0 _clst ]
[; ;ff.c: 3698: if (clst <= 1) res = FR_INT_ERR;
"3698
[e $ ! <= _clst -> -> -> 1 `i `l `ul 465  ]
[e = _res . `E69 2 ]
[e :U 465 ]
[; ;ff.c: 3699: if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
"3699
[e $ ! == _clst -> -1 `ul 466  ]
[e = _res . `E69 1 ]
[e :U 466 ]
"3700
}
"3696
[e =- _ofs _bcs ]
[e :U 464 ]
[e $ && == -> _res `i -> . `E69 0 `i > _ofs _bcs 461  ]
[e :U 462 ]
"3700
}
[; ;ff.c: 3700: }
[; ;ff.c: 3701: fp->clust = clst;
"3701
[e = . *U _fp 4 _clst ]
[; ;ff.c: 3702: if (res == FR_OK && ofs % ((UINT)512)) {
"3702
[e $ ! && == -> _res `i -> . `E69 0 `i != % _ofs -> -> -> 512 `i `ui `ul -> -> 0 `i `ul 467  ]
{
[; ;ff.c: 3703: if ((sc = clst2sect(fs, clst)) == 0) {
"3703
[e $ ! == = _sc ( _clst2sect (2 , _fs _clst -> -> -> 0 `i `l `ul 468  ]
{
[; ;ff.c: 3704: res = FR_INT_ERR;
"3704
[e = _res . `E69 2 ]
"3705
}
[; ;ff.c: 3705: } else {
[e $U 469  ]
[e :U 468 ]
{
[; ;ff.c: 3706: fp->sect = sc + (DWORD)(ofs / ((UINT)512));
"3706
[e = . *U _fp 5 + _sc / _ofs -> -> -> 512 `i `ui `ul ]
[; ;ff.c: 3708: if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
"3708
[e $ ! != -> ( _disk_read (4 , , , . *U _fs 1 &U . *U _fp 8 . *U _fp 5 -> -> 1 `i `ui `i -> . `E216 0 `i 470  ]
[e = _res . `E69 1 ]
[e :U 470 ]
"3710
}
[e :U 469 ]
"3711
}
[e :U 467 ]
"3712
}
[e :U 460 ]
"3714
}
[e :U 459 ]
[; ;ff.c: 3710: }
[; ;ff.c: 3711: }
[; ;ff.c: 3712: }
[; ;ff.c: 3714: }
[; ;ff.c: 3716: ;
"3717
}
[e :U 439 ]
[; ;ff.c: 3717: }
[; ;ff.c: 3719: if (res != FR_OK) fp->obj.fs = 0;
"3719
[e $ ! != -> _res `i -> . `E69 0 `i 471  ]
[e = . . *U _fp 0 0 -> -> 0 `i `*S1 ]
[e :U 471 ]
[; ;ff.c: 3721: return res;
"3721
[e ) _res ]
[e $UE 437  ]
[; ;ff.c: 3722: }
"3722
[e :UE 437 ]
}
"3731
[v _f_read `(E69 ~T0 @X0 1 ef4`*S3`*v`ui`*ui ]
"3737
{
[; ;ff.c: 3731: FRESULT f_read (
[; ;ff.c: 3732: FIL* fp,
[; ;ff.c: 3733: void* buff,
[; ;ff.c: 3734: UINT btr,
[; ;ff.c: 3735: UINT* br
[; ;ff.c: 3736: )
[; ;ff.c: 3737: {
[e :U _f_read ]
"3732
[v _fp `*S3 ~T0 @X0 1 r1 ]
"3733
[v _buff `*v ~T0 @X0 1 r2 ]
"3734
[v _btr `ui ~T0 @X0 1 r3 ]
"3735
[v _br `*ui ~T0 @X0 1 r4 ]
"3737
[f ]
"3738
[v _res `E69 ~T0 @X0 1 a ]
"3739
[v _fs `*S1 ~T0 @X0 1 a ]
"3740
[v _clst `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
"3741
[v _remain `ul ~T0 @X0 1 a ]
"3742
[v _rcnt `ui ~T0 @X0 1 a ]
[v _cc `ui ~T0 @X0 1 a ]
[v _csect `ui ~T0 @X0 1 a ]
"3743
[v _rbuff `*uc ~T0 @X0 1 a ]
[; ;ff.c: 3738: FRESULT res;
[; ;ff.c: 3739: FATFS *fs;
[; ;ff.c: 3740: DWORD clst, sect;
[; ;ff.c: 3741: FSIZE_t remain;
[; ;ff.c: 3742: UINT rcnt, cc, csect;
[; ;ff.c: 3743: BYTE *rbuff = (BYTE*)buff;
[e = _rbuff -> _buff `*uc ]
[; ;ff.c: 3746: *br = 0;
"3746
[e = *U _br -> -> 0 `i `ui ]
[; ;ff.c: 3747: res = validate(&fp->obj, &fs);
"3747
[e = _res ( _validate (2 , &U . *U _fp 0 &U _fs ]
[; ;ff.c: 3748: if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res;
"3748
[e $ ! || != -> _res `i -> . `E69 0 `i != -> = _res -> . *U _fp 2 `E69 `i -> . `E69 0 `i 473  ]
[e ) _res ]
[e $UE 472  ]
[e :U 473 ]
[; ;ff.c: 3749: if (!(fp->flag & 0x01)) return FR_DENIED;
"3749
[e $ ! ! != & -> . *U _fp 1 `i -> 1 `i -> 0 `i 474  ]
[e ) . `E69 7 ]
[e $UE 472  ]
[e :U 474 ]
[; ;ff.c: 3750: remain = fp->obj.objsize - fp->fptr;
"3750
[e = _remain - . . *U _fp 0 5 . *U _fp 3 ]
[; ;ff.c: 3751: if (btr > remain) btr = (UINT)remain;
"3751
[e $ ! > -> _btr `ul _remain 475  ]
[e = _btr -> _remain `ui ]
[e :U 475 ]
[; ;ff.c: 3753: for ( ; btr;
"3753
{
[; ;ff.c: 3754: btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {
[e $U 479  ]
"3754
[e :U 476 ]
{
[; ;ff.c: 3755: if (fp->fptr % ((UINT)512) == 0) {
"3755
[e $ ! == % . *U _fp 3 -> -> -> 512 `i `ui `ul -> -> -> 0 `i `l `ul 480  ]
{
[; ;ff.c: 3756: csect = (UINT)(fp->fptr / ((UINT)512) & (fs->csize - 1));
"3756
[e = _csect -> & / . *U _fp 3 -> -> -> 512 `i `ui `ul -> - -> . *U _fs 7 `ui -> -> 1 `i `ui `ul `ui ]
[; ;ff.c: 3757: if (csect == 0) {
"3757
[e $ ! == _csect -> -> 0 `i `ui 481  ]
{
[; ;ff.c: 3758: if (fp->fptr == 0) {
"3758
[e $ ! == . *U _fp 3 -> -> -> 0 `i `l `ul 482  ]
{
[; ;ff.c: 3759: clst = fp->obj.sclust;
"3759
[e = _clst . . *U _fp 0 4 ]
"3760
}
[; ;ff.c: 3760: } else {
[e $U 483  ]
[e :U 482 ]
{
[; ;ff.c: 3766: {
"3766
{
[; ;ff.c: 3767: clst = get_fat(&fp->obj, fp->clust);
"3767
[e = _clst ( _get_fat (2 , &U . *U _fp 0 . *U _fp 4 ]
"3768
}
"3769
}
[e :U 483 ]
[; ;ff.c: 3768: }
[; ;ff.c: 3769: }
[; ;ff.c: 3770: if (clst < 2) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
"3770
[e $ ! < _clst -> -> -> 2 `i `l `ul 484  ]
{
[e = . *U _fp 2 -> . `E69 2 `uc ]
[e ) . `E69 2 ]
[e $UE 472  ]
}
[e :U 484 ]
[; ;ff.c: 3771: if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"3771
[e $ ! == _clst -> -1 `ul 485  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 472  ]
}
[e :U 485 ]
[; ;ff.c: 3772: fp->clust = clst;
"3772
[e = . *U _fp 4 _clst ]
"3773
}
[e :U 481 ]
[; ;ff.c: 3773: }
[; ;ff.c: 3774: sect = clst2sect(fs, fp->clust);
"3774
[e = _sect ( _clst2sect (2 , _fs . *U _fp 4 ]
[; ;ff.c: 3775: if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
"3775
[e $ ! == _sect -> -> -> 0 `i `l `ul 486  ]
{
[e = . *U _fp 2 -> . `E69 2 `uc ]
[e ) . `E69 2 ]
[e $UE 472  ]
}
[e :U 486 ]
[; ;ff.c: 3776: sect += csect;
"3776
[e =+ _sect -> _csect `ul ]
[; ;ff.c: 3777: cc = btr / ((UINT)512);
"3777
[e = _cc / _btr -> -> 512 `i `ui ]
[; ;ff.c: 3778: if (cc > 0) {
"3778
[e $ ! > _cc -> -> 0 `i `ui 487  ]
{
[; ;ff.c: 3779: if (csect + cc > fs->csize) {
"3779
[e $ ! > + _csect _cc -> . *U _fs 7 `ui 488  ]
{
[; ;ff.c: 3780: cc = fs->csize - csect;
"3780
[e = _cc - -> . *U _fs 7 `ui _csect ]
"3781
}
[e :U 488 ]
[; ;ff.c: 3781: }
[; ;ff.c: 3782: if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"3782
[e $ ! != -> ( _disk_read (4 , , , . *U _fs 1 _rbuff _sect _cc `i -> . `E216 0 `i 489  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 472  ]
}
[e :U 489 ]
[; ;ff.c: 3789: if ((fp->flag & 0x80) && fp->sect - sect < cc) {
"3789
[e $ ! && != & -> . *U _fp 1 `i -> 128 `i -> 0 `i < - . *U _fp 5 _sect -> _cc `ul 490  ]
{
[; ;ff.c: 3790: mem_cpy(rbuff + ((fp->sect - sect) * ((UINT)512)), fp->buf, ((UINT)512));
"3790
[e ( _mem_cpy (3 , , -> + _rbuff * -> * - . *U _fp 5 _sect -> -> -> 512 `i `ui `ul `ux -> -> # *U _rbuff `ui `ux `*v -> &U . *U _fp 8 `*Cv -> -> 512 `i `ui ]
"3791
}
[e :U 490 ]
[; ;ff.c: 3791: }
[; ;ff.c: 3794: rcnt = ((UINT)512) * cc;
"3794
[e = _rcnt * -> -> 512 `i `ui _cc ]
[; ;ff.c: 3795: continue;
"3795
[e $U 478  ]
"3796
}
[e :U 487 ]
[; ;ff.c: 3796: }
[; ;ff.c: 3798: if (fp->sect != sect) {
"3798
[e $ ! != . *U _fp 5 _sect 491  ]
{
[; ;ff.c: 3800: if (fp->flag & 0x80) {
"3800
[e $ ! != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 492  ]
{
[; ;ff.c: 3801: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"3801
[e $ ! != -> ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fp 8 `*Cuc . *U _fp 5 -> -> 1 `i `ui `i -> . `E216 0 `i 493  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 472  ]
}
[e :U 493 ]
[; ;ff.c: 3802: fp->flag &= (BYTE)~0x80;
"3802
[e =& . *U _fp 1 -> ~ -> 128 `i `uc ]
"3803
}
[e :U 492 ]
[; ;ff.c: 3803: }
[; ;ff.c: 3805: if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"3805
[e $ ! != -> ( _disk_read (4 , , , . *U _fs 1 &U . *U _fp 8 _sect -> -> 1 `i `ui `i -> . `E216 0 `i 494  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 472  ]
}
[e :U 494 ]
"3806
}
[e :U 491 ]
[; ;ff.c: 3806: }
[; ;ff.c: 3808: fp->sect = sect;
"3808
[e = . *U _fp 5 _sect ]
"3809
}
[e :U 480 ]
[; ;ff.c: 3809: }
[; ;ff.c: 3810: rcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
"3810
[e = _rcnt - -> -> 512 `i `ui % -> . *U _fp 3 `ui -> -> 512 `i `ui ]
[; ;ff.c: 3811: if (rcnt > btr) rcnt = btr;
"3811
[e $ ! > _rcnt _btr 495  ]
[e = _rcnt _btr ]
[e :U 495 ]
[; ;ff.c: 3816: mem_cpy(rbuff, fp->buf + fp->fptr % ((UINT)512), rcnt);
"3816
[e ( _mem_cpy (3 , , -> _rbuff `*v -> + &U . *U _fp 8 * -> % . *U _fp 3 -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fp 8 `ui `ux `*Cv _rcnt ]
"3818
}
"3754
[e :U 478 ]
[e ; ; ; =- _btr _rcnt =+ *U _br _rcnt =+ _rbuff * -> _rcnt `ux -> -> # *U _rbuff `ui `ux =+ . *U _fp 3 -> _rcnt `ul ]
"3753
[e :U 479 ]
[e $ != _btr -> -> 0 `i `ui 476  ]
[e :U 477 ]
"3818
}
[; ;ff.c: 3818: }
[; ;ff.c: 3820: return FR_OK;
"3820
[e ) . `E69 0 ]
[e $UE 472  ]
[; ;ff.c: 3821: }
"3821
[e :UE 472 ]
}
"3831
[v _f_write `(E69 ~T0 @X0 1 ef4`*S3`*Cv`ui`*ui ]
"3837
{
[; ;ff.c: 3831: FRESULT f_write (
[; ;ff.c: 3832: FIL* fp,
[; ;ff.c: 3833: const void* buff,
[; ;ff.c: 3834: UINT btw,
[; ;ff.c: 3835: UINT* bw
[; ;ff.c: 3836: )
[; ;ff.c: 3837: {
[e :U _f_write ]
"3832
[v _fp `*S3 ~T0 @X0 1 r1 ]
"3833
[v _buff `*Cv ~T0 @X0 1 r2 ]
"3834
[v _btw `ui ~T0 @X0 1 r3 ]
"3835
[v _bw `*ui ~T0 @X0 1 r4 ]
"3837
[f ]
"3838
[v _res `E69 ~T0 @X0 1 a ]
"3839
[v _fs `*S1 ~T0 @X0 1 a ]
"3840
[v _clst `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
"3841
[v _wcnt `ui ~T0 @X0 1 a ]
[v _cc `ui ~T0 @X0 1 a ]
[v _csect `ui ~T0 @X0 1 a ]
"3842
[v _wbuff `*Cuc ~T0 @X0 1 a ]
[; ;ff.c: 3838: FRESULT res;
[; ;ff.c: 3839: FATFS *fs;
[; ;ff.c: 3840: DWORD clst, sect;
[; ;ff.c: 3841: UINT wcnt, cc, csect;
[; ;ff.c: 3842: const BYTE *wbuff = (const BYTE*)buff;
[e = _wbuff -> _buff `*Cuc ]
[; ;ff.c: 3845: *bw = 0;
"3845
[e = *U _bw -> -> 0 `i `ui ]
[; ;ff.c: 3846: res = validate(&fp->obj, &fs);
"3846
[e = _res ( _validate (2 , &U . *U _fp 0 &U _fs ]
[; ;ff.c: 3847: if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res;
"3847
[e $ ! || != -> _res `i -> . `E69 0 `i != -> = _res -> . *U _fp 2 `E69 `i -> . `E69 0 `i 497  ]
[e ) _res ]
[e $UE 496  ]
[e :U 497 ]
[; ;ff.c: 3848: if (!(fp->flag & 0x02)) return FR_DENIED;
"3848
[e $ ! ! != & -> . *U _fp 1 `i -> 2 `i -> 0 `i 498  ]
[e ) . `E69 7 ]
[e $UE 496  ]
[e :U 498 ]
[; ;ff.c: 3851: if ((!0 || fs->fs_type != 4) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
"3851
[e $ ! && || ! != -> 0 `i -> 0 `i != -> . *U _fs 0 `i -> 4 `i < + . *U _fp 3 -> _btw `ul . *U _fp 3 499  ]
{
[; ;ff.c: 3852: btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
"3852
[e = _btw -> - -> -1 `ul . *U _fp 3 `ui ]
"3853
}
[e :U 499 ]
[; ;ff.c: 3853: }
[; ;ff.c: 3855: for ( ; btw;
"3855
{
[; ;ff.c: 3856: btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) {
[e $U 503  ]
"3856
[e :U 500 ]
{
[; ;ff.c: 3857: if (fp->fptr % ((UINT)512) == 0) {
"3857
[e $ ! == % . *U _fp 3 -> -> -> 512 `i `ui `ul -> -> -> 0 `i `l `ul 504  ]
{
[; ;ff.c: 3858: csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->csize - 1);
"3858
[e = _csect & -> / . *U _fp 3 -> -> -> 512 `i `ui `ul `ui - -> . *U _fs 7 `ui -> -> 1 `i `ui ]
[; ;ff.c: 3859: if (csect == 0) {
"3859
[e $ ! == _csect -> -> 0 `i `ui 505  ]
{
[; ;ff.c: 3860: if (fp->fptr == 0) {
"3860
[e $ ! == . *U _fp 3 -> -> -> 0 `i `l `ul 506  ]
{
[; ;ff.c: 3861: clst = fp->obj.sclust;
"3861
[e = _clst . . *U _fp 0 4 ]
[; ;ff.c: 3862: if (clst == 0) {
"3862
[e $ ! == _clst -> -> -> 0 `i `l `ul 507  ]
{
[; ;ff.c: 3863: clst = create_chain(&fp->obj, 0);
"3863
[e = _clst ( _create_chain (2 , &U . *U _fp 0 -> -> -> 0 `i `l `ul ]
"3864
}
[e :U 507 ]
"3865
}
[; ;ff.c: 3864: }
[; ;ff.c: 3865: } else {
[e $U 508  ]
[e :U 506 ]
{
[; ;ff.c: 3871: {
"3871
{
[; ;ff.c: 3872: clst = create_chain(&fp->obj, fp->clust);
"3872
[e = _clst ( _create_chain (2 , &U . *U _fp 0 . *U _fp 4 ]
"3873
}
"3874
}
[e :U 508 ]
[; ;ff.c: 3873: }
[; ;ff.c: 3874: }
[; ;ff.c: 3875: if (clst == 0) break;
"3875
[e $ ! == _clst -> -> -> 0 `i `l `ul 509  ]
[e $U 501  ]
[e :U 509 ]
[; ;ff.c: 3876: if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
"3876
[e $ ! == _clst -> -> -> 1 `i `l `ul 510  ]
{
[e = . *U _fp 2 -> . `E69 2 `uc ]
[e ) . `E69 2 ]
[e $UE 496  ]
}
[e :U 510 ]
[; ;ff.c: 3877: if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"3877
[e $ ! == _clst -> -1 `ul 511  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 496  ]
}
[e :U 511 ]
[; ;ff.c: 3878: fp->clust = clst;
"3878
[e = . *U _fp 4 _clst ]
[; ;ff.c: 3879: if (fp->obj.sclust == 0) fp->obj.sclust = clst;
"3879
[e $ ! == . . *U _fp 0 4 -> -> -> 0 `i `l `ul 512  ]
[e = . . *U _fp 0 4 _clst ]
[e :U 512 ]
"3880
}
[e :U 505 ]
[; ;ff.c: 3880: }
[; ;ff.c: 3884: if (fp->flag & 0x80) {
"3884
[e $ ! != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 513  ]
{
[; ;ff.c: 3885: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"3885
[e $ ! != -> ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fp 8 `*Cuc . *U _fp 5 -> -> 1 `i `ui `i -> . `E216 0 `i 514  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 496  ]
}
[e :U 514 ]
[; ;ff.c: 3886: fp->flag &= (BYTE)~0x80;
"3886
[e =& . *U _fp 1 -> ~ -> 128 `i `uc ]
"3887
}
[e :U 513 ]
[; ;ff.c: 3887: }
[; ;ff.c: 3889: sect = clst2sect(fs, fp->clust);
"3889
[e = _sect ( _clst2sect (2 , _fs . *U _fp 4 ]
[; ;ff.c: 3890: if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
"3890
[e $ ! == _sect -> -> -> 0 `i `l `ul 515  ]
{
[e = . *U _fp 2 -> . `E69 2 `uc ]
[e ) . `E69 2 ]
[e $UE 496  ]
}
[e :U 515 ]
[; ;ff.c: 3891: sect += csect;
"3891
[e =+ _sect -> _csect `ul ]
[; ;ff.c: 3892: cc = btw / ((UINT)512);
"3892
[e = _cc / _btw -> -> 512 `i `ui ]
[; ;ff.c: 3893: if (cc > 0) {
"3893
[e $ ! > _cc -> -> 0 `i `ui 516  ]
{
[; ;ff.c: 3894: if (csect + cc > fs->csize) {
"3894
[e $ ! > + _csect _cc -> . *U _fs 7 `ui 517  ]
{
[; ;ff.c: 3895: cc = fs->csize - csect;
"3895
[e = _cc - -> . *U _fs 7 `ui _csect ]
"3896
}
[e :U 517 ]
[; ;ff.c: 3896: }
[; ;ff.c: 3897: if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"3897
[e $ ! != -> ( _disk_write (4 , , , . *U _fs 1 _wbuff _sect _cc `i -> . `E216 0 `i 518  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 496  ]
}
[e :U 518 ]
[; ;ff.c: 3905: if (fp->sect - sect < cc) {
"3905
[e $ ! < - . *U _fp 5 _sect -> _cc `ul 519  ]
{
[; ;ff.c: 3906: mem_cpy(fp->buf, wbuff + ((fp->sect - sect) * ((UINT)512)), ((UINT)512));
"3906
[e ( _mem_cpy (3 , , -> &U . *U _fp 8 `*v -> + _wbuff * -> * - . *U _fp 5 _sect -> -> -> 512 `i `ui `ul `ux -> -> # *U _wbuff `ui `ux `*Cv -> -> 512 `i `ui ]
[; ;ff.c: 3907: fp->flag &= (BYTE)~0x80;
"3907
[e =& . *U _fp 1 -> ~ -> 128 `i `uc ]
"3908
}
[e :U 519 ]
[; ;ff.c: 3908: }
[; ;ff.c: 3911: wcnt = ((UINT)512) * cc;
"3911
[e = _wcnt * -> -> 512 `i `ui _cc ]
[; ;ff.c: 3912: continue;
"3912
[e $U 502  ]
"3913
}
[e :U 516 ]
[; ;ff.c: 3913: }
[; ;ff.c: 3920: if (fp->sect != sect &&
[; ;ff.c: 3921: fp->fptr < fp->obj.objsize &&
[; ;ff.c: 3922: disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
"3922
[e $ ! && && != . *U _fp 5 _sect < . *U _fp 3 . . *U _fp 0 5 != -> ( _disk_read (4 , , , . *U _fs 1 &U . *U _fp 8 _sect -> -> 1 `i `ui `i -> . `E216 0 `i 520  ]
{
[; ;ff.c: 3923: { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"3923
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 496  ]
}
"3924
}
[e :U 520 ]
[; ;ff.c: 3924: }
[; ;ff.c: 3926: fp->sect = sect;
"3926
[e = . *U _fp 5 _sect ]
"3927
}
[e :U 504 ]
[; ;ff.c: 3927: }
[; ;ff.c: 3928: wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)512);
"3928
[e = _wcnt - -> -> 512 `i `ui % -> . *U _fp 3 `ui -> -> 512 `i `ui ]
[; ;ff.c: 3929: if (wcnt > btw) wcnt = btw;
"3929
[e $ ! > _wcnt _btw 521  ]
[e = _wcnt _btw ]
[e :U 521 ]
[; ;ff.c: 3935: mem_cpy(fp->buf + fp->fptr % ((UINT)512), wbuff, wcnt);
"3935
[e ( _mem_cpy (3 , , -> + &U . *U _fp 8 * -> % . *U _fp 3 -> -> -> 512 `i `ui `ul `ux -> -> # *U &U . *U _fp 8 `ui `ux `*v -> _wbuff `*Cv _wcnt ]
[; ;ff.c: 3936: fp->flag |= 0x80;
"3936
[e =| . *U _fp 1 -> -> 128 `i `uc ]
"3938
}
"3856
[e :U 502 ]
[e ; ; ; ; =- _btw _wcnt =+ *U _bw _wcnt =+ _wbuff * -> _wcnt `ux -> -> # *U _wbuff `ui `ux =+ . *U _fp 3 -> _wcnt `ul = . . *U _fp 0 5 ? > . *U _fp 3 . . *U _fp 0 5 : . *U _fp 3 . . *U _fp 0 5 ]
"3855
[e :U 503 ]
[e $ != _btw -> -> 0 `i `ui 500  ]
[e :U 501 ]
"3938
}
[; ;ff.c: 3938: }
[; ;ff.c: 3940: fp->flag |= 0x40;
"3940
[e =| . *U _fp 1 -> -> 64 `i `uc ]
[; ;ff.c: 3942: return FR_OK;
"3942
[e ) . `E69 0 ]
[e $UE 496  ]
[; ;ff.c: 3943: }
"3943
[e :UE 496 ]
}
"3952
[v _f_sync `(E69 ~T0 @X0 1 ef1`*S3 ]
"3955
{
[; ;ff.c: 3952: FRESULT f_sync (
[; ;ff.c: 3953: FIL* fp
[; ;ff.c: 3954: )
[; ;ff.c: 3955: {
[e :U _f_sync ]
"3953
[v _fp `*S3 ~T0 @X0 1 r1 ]
"3955
[f ]
"3956
[v _res `E69 ~T0 @X0 1 a ]
"3957
[v _fs `*S1 ~T0 @X0 1 a ]
"3958
[v _tm `ul ~T0 @X0 1 a ]
"3959
[v _dir `*uc ~T0 @X0 1 a ]
[; ;ff.c: 3956: FRESULT res;
[; ;ff.c: 3957: FATFS *fs;
[; ;ff.c: 3958: DWORD tm;
[; ;ff.c: 3959: BYTE *dir;
[; ;ff.c: 3962: res = validate(&fp->obj, &fs);
"3962
[e = _res ( _validate (2 , &U . *U _fp 0 &U _fs ]
[; ;ff.c: 3963: if (res == FR_OK) {
"3963
[e $ ! == -> _res `i -> . `E69 0 `i 523  ]
{
[; ;ff.c: 3964: if (fp->flag & 0x40) {
"3964
[e $ ! != & -> . *U _fp 1 `i -> 64 `i -> 0 `i 524  ]
{
[; ;ff.c: 3966: if (fp->flag & 0x80) {
"3966
[e $ ! != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 525  ]
{
[; ;ff.c: 3967: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) return FR_DISK_ERR;
"3967
[e $ ! != -> ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fp 8 `*Cuc . *U _fp 5 -> -> 1 `i `ui `i -> . `E216 0 `i 526  ]
[e ) . `E69 1 ]
[e $UE 522  ]
[e :U 526 ]
[; ;ff.c: 3968: fp->flag &= (BYTE)~0x80;
"3968
[e =& . *U _fp 1 -> ~ -> 128 `i `uc ]
"3969
}
[e :U 525 ]
[; ;ff.c: 3969: }
[; ;ff.c: 3972: tm = get_fattime();
"3972
[e = _tm ( _get_fattime ..  ]
[; ;ff.c: 4004: {
"4004
{
[; ;ff.c: 4005: res = move_window(fs, fp->dir_sect);
"4005
[e = _res ( _move_window (2 , _fs . *U _fp 6 ]
[; ;ff.c: 4006: if (res == FR_OK) {
"4006
[e $ ! == -> _res `i -> . `E69 0 `i 527  ]
{
[; ;ff.c: 4007: dir = fp->dir_ptr;
"4007
[e = _dir . *U _fp 7 ]
[; ;ff.c: 4008: dir[11] |= 0x20;
"4008
[e =| *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 32 `i `uc ]
[; ;ff.c: 4009: st_clust(fp->obj.fs, dir, fp->obj.sclust);
"4009
[e ( _st_clust (3 , , . . *U _fp 0 0 _dir . . *U _fp 0 4 ]
[; ;ff.c: 4010: st_dword(dir + 28, (DWORD)fp->obj.objsize);
"4010
[e ( _st_dword (2 , + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x . . *U _fp 0 5 ]
[; ;ff.c: 4011: st_dword(dir + 22, tm);
"4011
[e ( _st_dword (2 , + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x _tm ]
[; ;ff.c: 4012: st_word(dir + 18, 0);
"4012
[e ( _st_word (2 , + _dir * -> -> 18 `i `x -> -> # *U _dir `i `x -> -> 0 `i `us ]
[; ;ff.c: 4013: fs->wflag = 1;
"4013
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 4014: res = sync_fs(fs);
"4014
[e = _res ( _sync_fs (1 _fs ]
[; ;ff.c: 4015: fp->flag &= (BYTE)~0x40;
"4015
[e =& . *U _fp 1 -> ~ -> 64 `i `uc ]
"4016
}
[e :U 527 ]
"4017
}
"4018
}
[e :U 524 ]
"4019
}
[e :U 523 ]
[; ;ff.c: 4016: }
[; ;ff.c: 4017: }
[; ;ff.c: 4018: }
[; ;ff.c: 4019: }
[; ;ff.c: 4021: return res;
"4021
[e ) _res ]
[e $UE 522  ]
[; ;ff.c: 4022: }
"4022
[e :UE 522 ]
}
"4033
[v _f_close `(E69 ~T0 @X0 1 ef1`*S3 ]
"4036
{
[; ;ff.c: 4033: FRESULT f_close (
[; ;ff.c: 4034: FIL* fp
[; ;ff.c: 4035: )
[; ;ff.c: 4036: {
[e :U _f_close ]
"4034
[v _fp `*S3 ~T0 @X0 1 r1 ]
"4036
[f ]
"4037
[v _res `E69 ~T0 @X0 1 a ]
"4038
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 4037: FRESULT res;
[; ;ff.c: 4038: FATFS *fs;
[; ;ff.c: 4041: res = f_sync(fp);
"4041
[e = _res ( _f_sync (1 _fp ]
[; ;ff.c: 4042: if (res == FR_OK)
"4042
[e $ ! == -> _res `i -> . `E69 0 `i 529  ]
[; ;ff.c: 4044: {
"4044
{
[; ;ff.c: 4045: res = validate(&fp->obj, &fs);
"4045
[e = _res ( _validate (2 , &U . *U _fp 0 &U _fs ]
[; ;ff.c: 4046: if (res == FR_OK) {
"4046
[e $ ! == -> _res `i -> . `E69 0 `i 530  ]
{
[; ;ff.c: 4051: fp->obj.fs = 0;
"4051
[e = . . *U _fp 0 0 -> -> 0 `i `*S1 ]
"4056
}
[e :U 530 ]
"4057
}
[e :U 529 ]
[; ;ff.c: 4056: }
[; ;ff.c: 4057: }
[; ;ff.c: 4058: return res;
"4058
[e ) _res ]
[e $UE 528  ]
[; ;ff.c: 4059: }
"4059
[e :UE 528 ]
}
"4220
[v _f_lseek `(E69 ~T0 @X0 1 ef2`*S3`ul ]
"4224
{
[; ;ff.c: 4220: FRESULT f_lseek (
[; ;ff.c: 4221: FIL* fp,
[; ;ff.c: 4222: FSIZE_t ofs
[; ;ff.c: 4223: )
[; ;ff.c: 4224: {
[e :U _f_lseek ]
"4221
[v _fp `*S3 ~T0 @X0 1 r1 ]
"4222
[v _ofs `ul ~T0 @X0 1 r2 ]
"4224
[f ]
"4225
[v _res `E69 ~T0 @X0 1 a ]
"4226
[v _fs `*S1 ~T0 @X0 1 a ]
"4227
[v _clst `ul ~T0 @X0 1 a ]
[v _bcs `ul ~T0 @X0 1 a ]
[v _nsect `ul ~T0 @X0 1 a ]
"4228
[v _ifptr `ul ~T0 @X0 1 a ]
[; ;ff.c: 4225: FRESULT res;
[; ;ff.c: 4226: FATFS *fs;
[; ;ff.c: 4227: DWORD clst, bcs, nsect;
[; ;ff.c: 4228: FSIZE_t ifptr;
[; ;ff.c: 4233: res = validate(&fp->obj, &fs);
"4233
[e = _res ( _validate (2 , &U . *U _fp 0 &U _fs ]
[; ;ff.c: 4234: if (res == FR_OK) res = (FRESULT)fp->err;
"4234
[e $ ! == -> _res `i -> . `E69 0 `i 532  ]
[e = _res -> . *U _fp 2 `E69 ]
[e :U 532 ]
[; ;ff.c: 4240: if (res != FR_OK) return res;
"4240
[e $ ! != -> _res `i -> . `E69 0 `i 533  ]
[e ) _res ]
[e $UE 531  ]
[e :U 533 ]
[; ;ff.c: 4295: {
"4295
{
[; ;ff.c: 4299: if (ofs > fp->obj.objsize && (0 || !(fp->flag & 0x02))) {
"4299
[e $ ! && > _ofs . . *U _fp 0 5 || != -> 0 `i -> 0 `i ! != & -> . *U _fp 1 `i -> 2 `i -> 0 `i 534  ]
{
[; ;ff.c: 4300: ofs = fp->obj.objsize;
"4300
[e = _ofs . . *U _fp 0 5 ]
"4301
}
[e :U 534 ]
[; ;ff.c: 4301: }
[; ;ff.c: 4302: ifptr = fp->fptr;
"4302
[e = _ifptr . *U _fp 3 ]
[; ;ff.c: 4303: fp->fptr = nsect = 0;
"4303
[e = . *U _fp 3 = _nsect -> -> -> 0 `i `l `ul ]
[; ;ff.c: 4304: if (ofs > 0) {
"4304
[e $ ! > _ofs -> -> -> 0 `i `l `ul 535  ]
{
[; ;ff.c: 4305: bcs = (DWORD)fs->csize * ((UINT)512);
"4305
[e = _bcs * -> . *U _fs 7 `ul -> -> -> 512 `i `ui `ul ]
[; ;ff.c: 4306: if (ifptr > 0 &&
[; ;ff.c: 4307: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {
"4307
[e $ ! && > _ifptr -> -> -> 0 `i `l `ul >= / - _ofs -> -> -> 1 `i `l `ul _bcs / - _ifptr -> -> -> 1 `i `l `ul _bcs 536  ]
{
[; ;ff.c: 4308: fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);
"4308
[e = . *U _fp 3 & - _ifptr -> -> -> 1 `i `l `ul ~ - _bcs -> -> -> 1 `i `l `ul ]
[; ;ff.c: 4309: ofs -= fp->fptr;
"4309
[e =- _ofs . *U _fp 3 ]
[; ;ff.c: 4310: clst = fp->clust;
"4310
[e = _clst . *U _fp 4 ]
"4311
}
[; ;ff.c: 4311: } else {
[e $U 537  ]
[e :U 536 ]
{
[; ;ff.c: 4312: clst = fp->obj.sclust;
"4312
[e = _clst . . *U _fp 0 4 ]
[; ;ff.c: 4314: if (clst == 0) {
"4314
[e $ ! == _clst -> -> -> 0 `i `l `ul 538  ]
{
[; ;ff.c: 4315: clst = create_chain(&fp->obj, 0);
"4315
[e = _clst ( _create_chain (2 , &U . *U _fp 0 -> -> -> 0 `i `l `ul ]
[; ;ff.c: 4316: if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
"4316
[e $ ! == _clst -> -> -> 1 `i `l `ul 539  ]
{
[e = . *U _fp 2 -> . `E69 2 `uc ]
[e ) . `E69 2 ]
[e $UE 531  ]
}
[e :U 539 ]
[; ;ff.c: 4317: if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"4317
[e $ ! == _clst -> -1 `ul 540  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 531  ]
}
[e :U 540 ]
[; ;ff.c: 4318: fp->obj.sclust = clst;
"4318
[e = . . *U _fp 0 4 _clst ]
"4319
}
[e :U 538 ]
[; ;ff.c: 4319: }
[; ;ff.c: 4321: fp->clust = clst;
"4321
[e = . *U _fp 4 _clst ]
"4322
}
[e :U 537 ]
[; ;ff.c: 4322: }
[; ;ff.c: 4323: if (clst != 0) {
"4323
[e $ ! != _clst -> -> -> 0 `i `l `ul 541  ]
{
[; ;ff.c: 4324: while (ofs > bcs) {
"4324
[e $U 542  ]
[e :U 543 ]
{
[; ;ff.c: 4325: ofs -= bcs; fp->fptr += bcs;
"4325
[e =- _ofs _bcs ]
[e =+ . *U _fp 3 _bcs ]
[; ;ff.c: 4327: if (fp->flag & 0x02) {
"4327
[e $ ! != & -> . *U _fp 1 `i -> 2 `i -> 0 `i 545  ]
{
[; ;ff.c: 4328: if (0 && fp->fptr > fp->obj.objsize) {
"4328
[e $ ! && != -> 0 `i -> 0 `i > . *U _fp 3 . . *U _fp 0 5 546  ]
{
[; ;ff.c: 4329: fp->obj.objsize = fp->fptr;
"4329
[e = . . *U _fp 0 5 . *U _fp 3 ]
[; ;ff.c: 4330: fp->flag |= 0x40;
"4330
[e =| . *U _fp 1 -> -> 64 `i `uc ]
"4331
}
[e :U 546 ]
[; ;ff.c: 4331: }
[; ;ff.c: 4332: clst = create_chain(&fp->obj, clst);
"4332
[e = _clst ( _create_chain (2 , &U . *U _fp 0 _clst ]
[; ;ff.c: 4333: if (clst == 0) {
"4333
[e $ ! == _clst -> -> -> 0 `i `l `ul 547  ]
{
[; ;ff.c: 4334: ofs = 0; break;
"4334
[e = _ofs -> -> -> 0 `i `l `ul ]
[e $U 544  ]
"4335
}
[e :U 547 ]
"4336
}
[; ;ff.c: 4335: }
[; ;ff.c: 4336: } else
[e $U 548  ]
[e :U 545 ]
[; ;ff.c: 4338: {
"4338
{
[; ;ff.c: 4339: clst = get_fat(&fp->obj, clst);
"4339
[e = _clst ( _get_fat (2 , &U . *U _fp 0 _clst ]
"4340
}
[e :U 548 ]
[; ;ff.c: 4340: }
[; ;ff.c: 4341: if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"4341
[e $ ! == _clst -> -1 `ul 549  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 531  ]
}
[e :U 549 ]
[; ;ff.c: 4342: if (clst <= 1 || clst >= fs->n_fatent) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
"4342
[e $ ! || <= _clst -> -> -> 1 `i `l `ul >= _clst . *U _fs 11 550  ]
{
[e = . *U _fp 2 -> . `E69 2 `uc ]
[e ) . `E69 2 ]
[e $UE 531  ]
}
[e :U 550 ]
[; ;ff.c: 4343: fp->clust = clst;
"4343
[e = . *U _fp 4 _clst ]
"4344
}
[e :U 542 ]
"4324
[e $ > _ofs _bcs 543  ]
[e :U 544 ]
[; ;ff.c: 4344: }
[; ;ff.c: 4345: fp->fptr += ofs;
"4345
[e =+ . *U _fp 3 _ofs ]
[; ;ff.c: 4346: if (ofs % ((UINT)512)) {
"4346
[e $ ! != % _ofs -> -> -> 512 `i `ui `ul -> -> 0 `i `ul 551  ]
{
[; ;ff.c: 4347: nsect = clst2sect(fs, clst);
"4347
[e = _nsect ( _clst2sect (2 , _fs _clst ]
[; ;ff.c: 4348: if (nsect == 0) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
"4348
[e $ ! == _nsect -> -> -> 0 `i `l `ul 552  ]
{
[e = . *U _fp 2 -> . `E69 2 `uc ]
[e ) . `E69 2 ]
[e $UE 531  ]
}
[e :U 552 ]
[; ;ff.c: 4349: nsect += (DWORD)(ofs / ((UINT)512));
"4349
[e =+ _nsect / _ofs -> -> -> 512 `i `ui `ul ]
"4350
}
[e :U 551 ]
"4351
}
[e :U 541 ]
"4352
}
[e :U 535 ]
[; ;ff.c: 4350: }
[; ;ff.c: 4351: }
[; ;ff.c: 4352: }
[; ;ff.c: 4353: if (!0 && fp->fptr > fp->obj.objsize) {
"4353
[e $ ! && ! != -> 0 `i -> 0 `i > . *U _fp 3 . . *U _fp 0 5 553  ]
{
[; ;ff.c: 4354: fp->obj.objsize = fp->fptr;
"4354
[e = . . *U _fp 0 5 . *U _fp 3 ]
[; ;ff.c: 4355: fp->flag |= 0x40;
"4355
[e =| . *U _fp 1 -> -> 64 `i `uc ]
"4356
}
[e :U 553 ]
[; ;ff.c: 4356: }
[; ;ff.c: 4357: if (fp->fptr % ((UINT)512) && nsect != fp->sect) {
"4357
[e $ ! && != % . *U _fp 3 -> -> -> 512 `i `ui `ul -> -> 0 `i `ul != _nsect . *U _fp 5 554  ]
{
[; ;ff.c: 4360: if (fp->flag & 0x80) {
"4360
[e $ ! != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 555  ]
{
[; ;ff.c: 4361: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"4361
[e $ ! != -> ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fp 8 `*Cuc . *U _fp 5 -> -> 1 `i `ui `i -> . `E216 0 `i 556  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 531  ]
}
[e :U 556 ]
[; ;ff.c: 4362: fp->flag &= (BYTE)~0x80;
"4362
[e =& . *U _fp 1 -> ~ -> 128 `i `uc ]
"4363
}
[e :U 555 ]
[; ;ff.c: 4363: }
[; ;ff.c: 4365: if (disk_read(fs->pdrv, fp->buf, nsect, 1) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
"4365
[e $ ! != -> ( _disk_read (4 , , , . *U _fs 1 &U . *U _fp 8 _nsect -> -> 1 `i `ui `i -> . `E216 0 `i 557  ]
{
[e = . *U _fp 2 -> . `E69 1 `uc ]
[e ) . `E69 1 ]
[e $UE 531  ]
}
[e :U 557 ]
[; ;ff.c: 4367: fp->sect = nsect;
"4367
[e = . *U _fp 5 _nsect ]
"4368
}
[e :U 554 ]
"4369
}
[; ;ff.c: 4368: }
[; ;ff.c: 4369: }
[; ;ff.c: 4371: return res;
"4371
[e ) _res ]
[e $UE 531  ]
[; ;ff.c: 4372: }
"4372
[e :UE 531 ]
}
"4381
[v _f_opendir `(E69 ~T0 @X0 1 ef2`*S4`*Cuc ]
"4385
{
[; ;ff.c: 4381: FRESULT f_opendir (
[; ;ff.c: 4382: DIR* dp,
[; ;ff.c: 4383: const TCHAR* path
[; ;ff.c: 4384: )
[; ;ff.c: 4385: {
[e :U _f_opendir ]
"4382
[v _dp `*S4 ~T0 @X0 1 r1 ]
"4383
[v _path `*Cuc ~T0 @X0 1 r2 ]
"4385
[f ]
"4386
[v _res `E69 ~T0 @X0 1 a ]
"4387
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 4386: FRESULT res;
[; ;ff.c: 4387: FATFS *fs;
[; ;ff.c: 4391: if (!dp) return FR_INVALID_OBJECT;
"4391
[e $ ! ! != _dp -> -> 0 `i `*S4 559  ]
[e ) . `E69 9 ]
[e $UE 558  ]
[e :U 559 ]
[; ;ff.c: 4394: res = find_volume(&path, &fs, 0);
"4394
[e = _res ( _find_volume (3 , , &U _path &U _fs -> -> 0 `i `uc ]
[; ;ff.c: 4395: if (res == FR_OK) {
"4395
[e $ ! == -> _res `i -> . `E69 0 `i 560  ]
{
[; ;ff.c: 4396: dp->obj.fs = fs;
"4396
[e = . . *U _dp 0 0 _fs ]
[; ;ff.c: 4397: ;
[; ;ff.c: 4398: res = follow_path(dp, path);
"4398
[e = _res ( _follow_path (2 , _dp _path ]
[; ;ff.c: 4399: if (res == FR_OK) {
"4399
[e $ ! == -> _res `i -> . `E69 0 `i 561  ]
{
[; ;ff.c: 4400: if (!(dp->fn[11] & 0x80)) {
"4400
[e $ ! ! != & -> *U + &U . *U _dp 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . *U _dp 5 `ui `ux `i -> 128 `i -> 0 `i 562  ]
{
[; ;ff.c: 4401: if (dp->obj.attr & 0x10) {
"4401
[e $ ! != & -> . . *U _dp 0 2 `i -> 16 `i -> 0 `i 563  ]
{
[; ;ff.c: 4410: {
"4410
{
[; ;ff.c: 4411: dp->obj.sclust = ld_clust(fs, dp->dir);
"4411
[e = . . *U _dp 0 4 ( _ld_clust (2 , _fs -> . *U _dp 4 `*Cuc ]
"4412
}
"4413
}
[; ;ff.c: 4412: }
[; ;ff.c: 4413: } else {
[e $U 564  ]
[e :U 563 ]
{
[; ;ff.c: 4414: res = FR_NO_PATH;
"4414
[e = _res . `E69 5 ]
"4415
}
[e :U 564 ]
"4416
}
[e :U 562 ]
[; ;ff.c: 4415: }
[; ;ff.c: 4416: }
[; ;ff.c: 4417: if (res == FR_OK) {
"4417
[e $ ! == -> _res `i -> . `E69 0 `i 565  ]
{
[; ;ff.c: 4418: dp->obj.id = fs->id;
"4418
[e = . . *U _dp 0 1 . *U _fs 5 ]
[; ;ff.c: 4419: res = dir_sdi(dp, 0);
"4419
[e = _res ( _dir_sdi (2 , _dp -> -> -> 0 `i `l `ul ]
"4430
}
[e :U 565 ]
"4431
}
[e :U 561 ]
[; ;ff.c: 4430: }
[; ;ff.c: 4431: }
[; ;ff.c: 4432: ;
[; ;ff.c: 4433: if (res == FR_NO_FILE) res = FR_NO_PATH;
"4433
[e $ ! == -> _res `i -> . `E69 4 `i 566  ]
[e = _res . `E69 5 ]
[e :U 566 ]
"4434
}
[e :U 560 ]
[; ;ff.c: 4434: }
[; ;ff.c: 4435: if (res != FR_OK) dp->obj.fs = 0;
"4435
[e $ ! != -> _res `i -> . `E69 0 `i 567  ]
[e = . . *U _dp 0 0 -> -> 0 `i `*S1 ]
[e :U 567 ]
[; ;ff.c: 4437: return res;
"4437
[e ) _res ]
[e $UE 558  ]
[; ;ff.c: 4438: }
"4438
[e :UE 558 ]
}
"4447
[v _f_closedir `(E69 ~T0 @X0 1 ef1`*S4 ]
"4450
{
[; ;ff.c: 4447: FRESULT f_closedir (
[; ;ff.c: 4448: DIR *dp
[; ;ff.c: 4449: )
[; ;ff.c: 4450: {
[e :U _f_closedir ]
"4448
[v _dp `*S4 ~T0 @X0 1 r1 ]
"4450
[f ]
"4451
[v _res `E69 ~T0 @X0 1 a ]
"4452
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 4451: FRESULT res;
[; ;ff.c: 4452: FATFS *fs;
[; ;ff.c: 4455: res = validate(&dp->obj, &fs);
"4455
[e = _res ( _validate (2 , &U . *U _dp 0 &U _fs ]
[; ;ff.c: 4456: if (res == FR_OK) {
"4456
[e $ ! == -> _res `i -> . `E69 0 `i 569  ]
{
[; ;ff.c: 4461: dp->obj.fs = 0;
"4461
[e = . . *U _dp 0 0 -> -> 0 `i `*S1 ]
"4466
}
[e :U 569 ]
[; ;ff.c: 4466: }
[; ;ff.c: 4467: return res;
"4467
[e ) _res ]
[e $UE 568  ]
[; ;ff.c: 4468: }
"4468
[e :UE 568 ]
}
"4477
[v _f_readdir `(E69 ~T0 @X0 1 ef2`*S4`*S5 ]
"4481
{
[; ;ff.c: 4477: FRESULT f_readdir (
[; ;ff.c: 4478: DIR* dp,
[; ;ff.c: 4479: FILINFO* fno
[; ;ff.c: 4480: )
[; ;ff.c: 4481: {
[e :U _f_readdir ]
"4478
[v _dp `*S4 ~T0 @X0 1 r1 ]
"4479
[v _fno `*S5 ~T0 @X0 1 r2 ]
"4481
[f ]
"4482
[v _res `E69 ~T0 @X0 1 a ]
"4483
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 4482: FRESULT res;
[; ;ff.c: 4483: FATFS *fs;
[; ;ff.c: 4487: res = validate(&dp->obj, &fs);
"4487
[e = _res ( _validate (2 , &U . *U _dp 0 &U _fs ]
[; ;ff.c: 4488: if (res == FR_OK) {
"4488
[e $ ! == -> _res `i -> . `E69 0 `i 571  ]
{
[; ;ff.c: 4489: if (!fno) {
"4489
[e $ ! ! != _fno -> -> 0 `i `*S5 572  ]
{
[; ;ff.c: 4490: res = dir_sdi(dp, 0);
"4490
[e = _res ( _dir_sdi (2 , _dp -> -> -> 0 `i `l `ul ]
"4491
}
[; ;ff.c: 4491: } else {
[e $U 573  ]
[e :U 572 ]
{
[; ;ff.c: 4492: ;
[; ;ff.c: 4493: res = dir_read(dp, 0);
"4493
[e = _res ( _dir_read (2 , _dp -> 0 `i ]
[; ;ff.c: 4494: if (res == FR_NO_FILE) res = FR_OK;
"4494
[e $ ! == -> _res `i -> . `E69 4 `i 574  ]
[e = _res . `E69 0 ]
[e :U 574 ]
[; ;ff.c: 4495: if (res == FR_OK) {
"4495
[e $ ! == -> _res `i -> . `E69 0 `i 575  ]
{
[; ;ff.c: 4496: get_fileinfo(dp, fno);
"4496
[e ( _get_fileinfo (2 , _dp _fno ]
[; ;ff.c: 4497: res = dir_next(dp, 0);
"4497
[e = _res ( _dir_next (2 , _dp -> 0 `i ]
[; ;ff.c: 4498: if (res == FR_NO_FILE) res = FR_OK;
"4498
[e $ ! == -> _res `i -> . `E69 4 `i 576  ]
[e = _res . `E69 0 ]
[e :U 576 ]
"4499
}
[e :U 575 ]
[; ;ff.c: 4499: }
[; ;ff.c: 4500: ;
"4501
}
[e :U 573 ]
"4502
}
[e :U 571 ]
[; ;ff.c: 4501: }
[; ;ff.c: 4502: }
[; ;ff.c: 4503: return res;
"4503
[e ) _res ]
[e $UE 570  ]
[; ;ff.c: 4504: }
"4504
[e :UE 570 ]
}
"4565
[v _f_stat `(E69 ~T0 @X0 1 ef2`*Cuc`*S5 ]
"4569
{
[; ;ff.c: 4565: FRESULT f_stat (
[; ;ff.c: 4566: const TCHAR* path,
[; ;ff.c: 4567: FILINFO* fno
[; ;ff.c: 4568: )
[; ;ff.c: 4569: {
[e :U _f_stat ]
"4566
[v _path `*Cuc ~T0 @X0 1 r1 ]
"4567
[v _fno `*S5 ~T0 @X0 1 r2 ]
"4569
[f ]
"4570
[v _res `E69 ~T0 @X0 1 a ]
"4571
[v _dj `S4 ~T0 @X0 1 a ]
[; ;ff.c: 4570: FRESULT res;
[; ;ff.c: 4571: DIR dj;
[; ;ff.c: 4576: res = find_volume(&path, &dj.obj.fs, 0);
"4576
[e = _res ( _find_volume (3 , , &U _path &U . . _dj 0 0 -> -> 0 `i `uc ]
[; ;ff.c: 4577: if (res == FR_OK) {
"4577
[e $ ! == -> _res `i -> . `E69 0 `i 578  ]
{
[; ;ff.c: 4578: ;
[; ;ff.c: 4579: res = follow_path(&dj, path);
"4579
[e = _res ( _follow_path (2 , &U _dj _path ]
[; ;ff.c: 4580: if (res == FR_OK) {
"4580
[e $ ! == -> _res `i -> . `E69 0 `i 579  ]
{
[; ;ff.c: 4581: if (dj.fn[11] & 0x80) {
"4581
[e $ ! != & -> *U + &U . _dj 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . _dj 5 `ui `ux `i -> 128 `i -> 0 `i 580  ]
{
[; ;ff.c: 4582: res = FR_INVALID_NAME;
"4582
[e = _res . `E69 6 ]
"4583
}
[; ;ff.c: 4583: } else {
[e $U 581  ]
[e :U 580 ]
{
[; ;ff.c: 4584: if (fno) get_fileinfo(&dj, fno);
"4584
[e $ ! != _fno -> -> 0 `i `*S5 582  ]
[e ( _get_fileinfo (2 , &U _dj _fno ]
[e :U 582 ]
"4585
}
[e :U 581 ]
"4586
}
[e :U 579 ]
[; ;ff.c: 4585: }
[; ;ff.c: 4586: }
[; ;ff.c: 4587: ;
"4588
}
[e :U 578 ]
[; ;ff.c: 4588: }
[; ;ff.c: 4590: return res;
"4590
[e ) _res ]
[e $UE 577  ]
[; ;ff.c: 4591: }
"4591
[e :UE 577 ]
}
"4600
[v _f_getfree `(E69 ~T0 @X0 1 ef3`*Cuc`*ul`**S1 ]
"4605
{
[; ;ff.c: 4600: FRESULT f_getfree (
[; ;ff.c: 4601: const TCHAR* path,
[; ;ff.c: 4602: DWORD* nclst,
[; ;ff.c: 4603: FATFS** fatfs
[; ;ff.c: 4604: )
[; ;ff.c: 4605: {
[e :U _f_getfree ]
"4601
[v _path `*Cuc ~T0 @X0 1 r1 ]
"4602
[v _nclst `*ul ~T0 @X0 1 r2 ]
"4603
[v _fatfs `**S1 ~T0 @X0 1 r3 ]
"4605
[f ]
"4606
[v _res `E69 ~T0 @X0 1 a ]
"4607
[v _fs `*S1 ~T0 @X0 1 a ]
"4608
[v _nfree `ul ~T0 @X0 1 a ]
[v _clst `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
[v _stat `ul ~T0 @X0 1 a ]
"4609
[v _i `ui ~T0 @X0 1 a ]
"4610
[v _obj `S2 ~T0 @X0 1 a ]
[; ;ff.c: 4606: FRESULT res;
[; ;ff.c: 4607: FATFS *fs;
[; ;ff.c: 4608: DWORD nfree, clst, sect, stat;
[; ;ff.c: 4609: UINT i;
[; ;ff.c: 4610: FFOBJID obj;
[; ;ff.c: 4614: res = find_volume(&path, &fs, 0);
"4614
[e = _res ( _find_volume (3 , , &U _path &U _fs -> -> 0 `i `uc ]
[; ;ff.c: 4615: if (res == FR_OK) {
"4615
[e $ ! == -> _res `i -> . `E69 0 `i 584  ]
{
[; ;ff.c: 4616: *fatfs = fs;
"4616
[e = *U _fatfs _fs ]
[; ;ff.c: 4618: if (fs->free_clst <= fs->n_fatent - 2) {
"4618
[e $ ! <= . *U _fs 10 - . *U _fs 11 -> -> -> 2 `i `l `ul 585  ]
{
[; ;ff.c: 4619: *nclst = fs->free_clst;
"4619
[e = *U _nclst . *U _fs 10 ]
"4620
}
[; ;ff.c: 4620: } else {
[e $U 586  ]
[e :U 585 ]
{
[; ;ff.c: 4622: nfree = 0;
"4622
[e = _nfree -> -> -> 0 `i `l `ul ]
[; ;ff.c: 4623: if (fs->fs_type == 1) {
"4623
[e $ ! == -> . *U _fs 0 `i -> 1 `i 587  ]
{
[; ;ff.c: 4624: clst = 2; obj.fs = fs;
"4624
[e = _clst -> -> -> 2 `i `l `ul ]
[e = . _obj 0 _fs ]
[; ;ff.c: 4625: do {
"4625
[e :U 590 ]
{
[; ;ff.c: 4626: stat = get_fat(&obj, clst);
"4626
[e = _stat ( _get_fat (2 , &U _obj _clst ]
[; ;ff.c: 4627: if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
"4627
[e $ ! == _stat -> -1 `ul 591  ]
{
[e = _res . `E69 1 ]
[e $U 589  ]
}
[e :U 591 ]
[; ;ff.c: 4628: if (stat == 1) { res = FR_INT_ERR; break; }
"4628
[e $ ! == _stat -> -> -> 1 `i `l `ul 592  ]
{
[e = _res . `E69 2 ]
[e $U 589  ]
}
[e :U 592 ]
[; ;ff.c: 4629: if (stat == 0) nfree++;
"4629
[e $ ! == _stat -> -> -> 0 `i `l `ul 593  ]
[e ++ _nfree -> -> -> 1 `i `l `ul ]
[e :U 593 ]
"4630
}
[; ;ff.c: 4630: } while (++clst < fs->n_fatent);
[e $ < =+ _clst -> -> -> 1 `i `l `ul . *U _fs 11 590  ]
[e :U 589 ]
"4631
}
[; ;ff.c: 4631: } else {
[e $U 594  ]
[e :U 587 ]
{
[; ;ff.c: 4653: {
"4653
{
[; ;ff.c: 4654: clst = fs->n_fatent;
"4654
[e = _clst . *U _fs 11 ]
[; ;ff.c: 4655: sect = fs->fatbase;
"4655
[e = _sect . *U _fs 14 ]
[; ;ff.c: 4656: i = 0;
"4656
[e = _i -> -> 0 `i `ui ]
[; ;ff.c: 4657: do {
"4657
[e :U 597 ]
{
[; ;ff.c: 4658: if (i == 0) {
"4658
[e $ ! == _i -> -> 0 `i `ui 598  ]
{
[; ;ff.c: 4659: res = move_window(fs, sect++);
"4659
[e = _res ( _move_window (2 , _fs ++ _sect -> -> -> 1 `i `l `ul ]
[; ;ff.c: 4660: if (res != FR_OK) break;
"4660
[e $ ! != -> _res `i -> . `E69 0 `i 599  ]
[e $U 596  ]
[e :U 599 ]
"4661
}
[e :U 598 ]
[; ;ff.c: 4661: }
[; ;ff.c: 4662: if (fs->fs_type == 2) {
"4662
[e $ ! == -> . *U _fs 0 `i -> 2 `i 600  ]
{
[; ;ff.c: 4663: if (ld_word(fs->win + i) == 0) nfree++;
"4663
[e $ ! == -> ( _ld_word (1 -> + &U . *U _fs 18 * -> _i `ux -> -> # *U &U . *U _fs 18 `ui `ux `*Cuc `ui -> -> 0 `i `ui 601  ]
[e ++ _nfree -> -> -> 1 `i `l `ul ]
[e :U 601 ]
[; ;ff.c: 4664: i += 2;
"4664
[e =+ _i -> -> 2 `i `ui ]
"4665
}
[; ;ff.c: 4665: } else {
[e $U 602  ]
[e :U 600 ]
{
[; ;ff.c: 4666: if ((ld_dword(fs->win + i) & 0x0FFFFFFF) == 0) nfree++;
"4666
[e $ ! == & ( _ld_dword (1 -> + &U . *U _fs 18 * -> _i `ux -> -> # *U &U . *U _fs 18 `ui `ux `*Cuc -> -> 268435455 `l `ul -> -> -> 0 `i `l `ul 603  ]
[e ++ _nfree -> -> -> 1 `i `l `ul ]
[e :U 603 ]
[; ;ff.c: 4667: i += 4;
"4667
[e =+ _i -> -> 4 `i `ui ]
"4668
}
[e :U 602 ]
[; ;ff.c: 4668: }
[; ;ff.c: 4669: i %= ((UINT)512);
"4669
[e =% _i -> -> -> 512 `i `ui `ui ]
"4670
}
[; ;ff.c: 4670: } while (--clst);
[e $ != =- _clst -> -> -> 1 `i `l `ul -> -> 0 `i `ul 597  ]
[e :U 596 ]
"4671
}
"4672
}
[e :U 594 ]
[; ;ff.c: 4671: }
[; ;ff.c: 4672: }
[; ;ff.c: 4673: *nclst = nfree;
"4673
[e = *U _nclst _nfree ]
[; ;ff.c: 4674: fs->free_clst = nfree;
"4674
[e = . *U _fs 10 _nfree ]
[; ;ff.c: 4675: fs->fsi_flag |= 1;
"4675
[e =| . *U _fs 4 -> -> 1 `i `uc ]
"4676
}
[e :U 586 ]
"4677
}
[e :U 584 ]
[; ;ff.c: 4676: }
[; ;ff.c: 4677: }
[; ;ff.c: 4679: return res;
"4679
[e ) _res ]
[e $UE 583  ]
[; ;ff.c: 4680: }
"4680
[e :UE 583 ]
}
"4689
[v _f_truncate `(E69 ~T0 @X0 1 ef1`*S3 ]
"4692
{
[; ;ff.c: 4689: FRESULT f_truncate (
[; ;ff.c: 4690: FIL* fp
[; ;ff.c: 4691: )
[; ;ff.c: 4692: {
[e :U _f_truncate ]
"4690
[v _fp `*S3 ~T0 @X0 1 r1 ]
"4692
[f ]
"4693
[v _res `E69 ~T0 @X0 1 a ]
"4694
[v _fs `*S1 ~T0 @X0 1 a ]
"4695
[v _ncl `ul ~T0 @X0 1 a ]
[; ;ff.c: 4693: FRESULT res;
[; ;ff.c: 4694: FATFS *fs;
[; ;ff.c: 4695: DWORD ncl;
[; ;ff.c: 4698: res = validate(&fp->obj, &fs);
"4698
[e = _res ( _validate (2 , &U . *U _fp 0 &U _fs ]
[; ;ff.c: 4699: if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) return res;
"4699
[e $ ! || != -> _res `i -> . `E69 0 `i != -> = _res -> . *U _fp 2 `E69 `i -> . `E69 0 `i 605  ]
[e ) _res ]
[e $UE 604  ]
[e :U 605 ]
[; ;ff.c: 4700: if (!(fp->flag & 0x02)) return FR_DENIED;
"4700
[e $ ! ! != & -> . *U _fp 1 `i -> 2 `i -> 0 `i 606  ]
[e ) . `E69 7 ]
[e $UE 604  ]
[e :U 606 ]
[; ;ff.c: 4702: if (fp->fptr < fp->obj.objsize) {
"4702
[e $ ! < . *U _fp 3 . . *U _fp 0 5 607  ]
{
[; ;ff.c: 4703: if (fp->fptr == 0) {
"4703
[e $ ! == . *U _fp 3 -> -> -> 0 `i `l `ul 608  ]
{
[; ;ff.c: 4704: res = remove_chain(&fp->obj, fp->obj.sclust, 0);
"4704
[e = _res ( _remove_chain (3 , , &U . *U _fp 0 . . *U _fp 0 4 -> -> -> 0 `i `l `ul ]
[; ;ff.c: 4705: fp->obj.sclust = 0;
"4705
[e = . . *U _fp 0 4 -> -> -> 0 `i `l `ul ]
"4706
}
[; ;ff.c: 4706: } else {
[e $U 609  ]
[e :U 608 ]
{
[; ;ff.c: 4707: ncl = get_fat(&fp->obj, fp->clust);
"4707
[e = _ncl ( _get_fat (2 , &U . *U _fp 0 . *U _fp 4 ]
[; ;ff.c: 4708: res = FR_OK;
"4708
[e = _res . `E69 0 ]
[; ;ff.c: 4709: if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
"4709
[e $ ! == _ncl -> -1 `ul 610  ]
[e = _res . `E69 1 ]
[e :U 610 ]
[; ;ff.c: 4710: if (ncl == 1) res = FR_INT_ERR;
"4710
[e $ ! == _ncl -> -> -> 1 `i `l `ul 611  ]
[e = _res . `E69 2 ]
[e :U 611 ]
[; ;ff.c: 4711: if (res == FR_OK && ncl < fs->n_fatent) {
"4711
[e $ ! && == -> _res `i -> . `E69 0 `i < _ncl . *U _fs 11 612  ]
{
[; ;ff.c: 4712: res = remove_chain(&fp->obj, ncl, fp->clust);
"4712
[e = _res ( _remove_chain (3 , , &U . *U _fp 0 _ncl . *U _fp 4 ]
"4713
}
[e :U 612 ]
"4714
}
[e :U 609 ]
[; ;ff.c: 4713: }
[; ;ff.c: 4714: }
[; ;ff.c: 4715: fp->obj.objsize = fp->fptr;
"4715
[e = . . *U _fp 0 5 . *U _fp 3 ]
[; ;ff.c: 4716: fp->flag |= 0x40;
"4716
[e =| . *U _fp 1 -> -> 64 `i `uc ]
[; ;ff.c: 4718: if (res == FR_OK && (fp->flag & 0x80)) {
"4718
[e $ ! && == -> _res `i -> . `E69 0 `i != & -> . *U _fp 1 `i -> 128 `i -> 0 `i 613  ]
{
[; ;ff.c: 4719: if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) {
"4719
[e $ ! != -> ( _disk_write (4 , , , . *U _fs 1 -> &U . *U _fp 8 `*Cuc . *U _fp 5 -> -> 1 `i `ui `i -> . `E216 0 `i 614  ]
{
[; ;ff.c: 4720: res = FR_DISK_ERR;
"4720
[e = _res . `E69 1 ]
"4721
}
[; ;ff.c: 4721: } else {
[e $U 615  ]
[e :U 614 ]
{
[; ;ff.c: 4722: fp->flag &= (BYTE)~0x80;
"4722
[e =& . *U _fp 1 -> ~ -> 128 `i `uc ]
"4723
}
[e :U 615 ]
"4724
}
[e :U 613 ]
[; ;ff.c: 4723: }
[; ;ff.c: 4724: }
[; ;ff.c: 4726: if (res != FR_OK) { fp->err = (BYTE)(res); return res; };
"4726
[e $ ! != -> _res `i -> . `E69 0 `i 616  ]
{
[e = . *U _fp 2 -> _res `uc ]
[e ) _res ]
[e $UE 604  ]
}
[e :U 616 ]
"4727
}
[e :U 607 ]
[; ;ff.c: 4727: }
[; ;ff.c: 4729: return res;
"4729
[e ) _res ]
[e $UE 604  ]
[; ;ff.c: 4730: }
"4730
[e :UE 604 ]
}
"4739
[v _f_unlink `(E69 ~T0 @X0 1 ef1`*Cuc ]
"4742
{
[; ;ff.c: 4739: FRESULT f_unlink (
[; ;ff.c: 4740: const TCHAR* path
[; ;ff.c: 4741: )
[; ;ff.c: 4742: {
[e :U _f_unlink ]
"4740
[v _path `*Cuc ~T0 @X0 1 r1 ]
"4742
[f ]
"4743
[v _res `E69 ~T0 @X0 1 a ]
"4744
[v _dj `S4 ~T0 @X0 1 a ]
[v _sdj `S4 ~T0 @X0 1 a ]
"4745
[v _dclst `ul ~T0 @X0 1 a ]
[; ;ff.c: 4743: FRESULT res;
[; ;ff.c: 4744: DIR dj, sdj;
[; ;ff.c: 4745: DWORD dclst = 0;
[e = _dclst -> -> -> 0 `i `l `ul ]
"4746
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;ff.c: 4746: FATFS *fs;
[; ;ff.c: 4754: res = find_volume(&path, &fs, 0x02);
"4754
[e = _res ( _find_volume (3 , , &U _path &U _fs -> -> 2 `i `uc ]
[; ;ff.c: 4755: if (res == FR_OK) {
"4755
[e $ ! == -> _res `i -> . `E69 0 `i 618  ]
{
[; ;ff.c: 4756: dj.obj.fs = fs;
"4756
[e = . . _dj 0 0 _fs ]
[; ;ff.c: 4757: ;
[; ;ff.c: 4758: res = follow_path(&dj, path);
"4758
[e = _res ( _follow_path (2 , &U _dj _path ]
[; ;ff.c: 4759: if (0 && res == FR_OK && (dj.fn[11] & 0x20)) {
"4759
[e $ ! && && != -> 0 `i -> 0 `i == -> _res `i -> . `E69 0 `i != & -> *U + &U . _dj 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . _dj 5 `ui `ux `i -> 32 `i -> 0 `i 619  ]
{
[; ;ff.c: 4760: res = FR_INVALID_NAME;
"4760
[e = _res . `E69 6 ]
"4761
}
[e :U 619 ]
[; ;ff.c: 4761: }
[; ;ff.c: 4765: if (res == FR_OK) {
"4765
[e $ ! == -> _res `i -> . `E69 0 `i 620  ]
{
[; ;ff.c: 4766: if (dj.fn[11] & 0x80) {
"4766
[e $ ! != & -> *U + &U . _dj 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . _dj 5 `ui `ux `i -> 128 `i -> 0 `i 621  ]
{
[; ;ff.c: 4767: res = FR_INVALID_NAME;
"4767
[e = _res . `E69 6 ]
"4768
}
[; ;ff.c: 4768: } else {
[e $U 622  ]
[e :U 621 ]
{
[; ;ff.c: 4769: if (dj.obj.attr & 0x01) {
"4769
[e $ ! != & -> . . _dj 0 2 `i -> 1 `i -> 0 `i 623  ]
{
[; ;ff.c: 4770: res = FR_DENIED;
"4770
[e = _res . `E69 7 ]
"4771
}
[e :U 623 ]
"4772
}
[e :U 622 ]
[; ;ff.c: 4771: }
[; ;ff.c: 4772: }
[; ;ff.c: 4773: if (res == FR_OK) {
"4773
[e $ ! == -> _res `i -> . `E69 0 `i 624  ]
{
[; ;ff.c: 4781: {
"4781
{
[; ;ff.c: 4782: dclst = ld_clust(fs, dj.dir);
"4782
[e = _dclst ( _ld_clust (2 , _fs -> . _dj 4 `*Cuc ]
"4783
}
[; ;ff.c: 4783: }
[; ;ff.c: 4784: if (dj.obj.attr & 0x10) {
"4784
[e $ ! != & -> . . _dj 0 2 `i -> 16 `i -> 0 `i 625  ]
{
[; ;ff.c: 4790: {
"4790
{
[; ;ff.c: 4791: sdj.obj.fs = fs;
"4791
[e = . . _sdj 0 0 _fs ]
[; ;ff.c: 4792: sdj.obj.sclust = dclst;
"4792
[e = . . _sdj 0 4 _dclst ]
[; ;ff.c: 4799: res = dir_sdi(&sdj, 0);
"4799
[e = _res ( _dir_sdi (2 , &U _sdj -> -> -> 0 `i `l `ul ]
[; ;ff.c: 4800: if (res == FR_OK) {
"4800
[e $ ! == -> _res `i -> . `E69 0 `i 626  ]
{
[; ;ff.c: 4801: res = dir_read(&sdj, 0);
"4801
[e = _res ( _dir_read (2 , &U _sdj -> 0 `i ]
[; ;ff.c: 4802: if (res == FR_OK) res = FR_DENIED;
"4802
[e $ ! == -> _res `i -> . `E69 0 `i 627  ]
[e = _res . `E69 7 ]
[e :U 627 ]
[; ;ff.c: 4803: if (res == FR_NO_FILE) res = FR_OK;
"4803
[e $ ! == -> _res `i -> . `E69 4 `i 628  ]
[e = _res . `E69 0 ]
[e :U 628 ]
"4804
}
[e :U 626 ]
"4805
}
"4806
}
[e :U 625 ]
"4807
}
[e :U 624 ]
[; ;ff.c: 4804: }
[; ;ff.c: 4805: }
[; ;ff.c: 4806: }
[; ;ff.c: 4807: }
[; ;ff.c: 4808: if (res == FR_OK) {
"4808
[e $ ! == -> _res `i -> . `E69 0 `i 629  ]
{
[; ;ff.c: 4809: res = dir_remove(&dj);
"4809
[e = _res ( _dir_remove (1 &U _dj ]
[; ;ff.c: 4810: if (res == FR_OK && dclst != 0) {
"4810
[e $ ! && == -> _res `i -> . `E69 0 `i != _dclst -> -> -> 0 `i `l `ul 630  ]
{
[; ;ff.c: 4814: res = remove_chain(&dj.obj, dclst, 0);
"4814
[e = _res ( _remove_chain (3 , , &U . _dj 0 _dclst -> -> -> 0 `i `l `ul ]
"4816
}
[e :U 630 ]
[; ;ff.c: 4816: }
[; ;ff.c: 4817: if (res == FR_OK) res = sync_fs(fs);
"4817
[e $ ! == -> _res `i -> . `E69 0 `i 631  ]
[e = _res ( _sync_fs (1 _fs ]
[e :U 631 ]
"4818
}
[e :U 629 ]
"4819
}
[e :U 620 ]
[; ;ff.c: 4818: }
[; ;ff.c: 4819: }
[; ;ff.c: 4820: ;
"4821
}
[e :U 618 ]
[; ;ff.c: 4821: }
[; ;ff.c: 4823: return res;
"4823
[e ) _res ]
[e $UE 617  ]
[; ;ff.c: 4824: }
"4824
[e :UE 617 ]
}
"4833
[v _f_mkdir `(E69 ~T0 @X0 1 ef1`*Cuc ]
"4836
{
[; ;ff.c: 4833: FRESULT f_mkdir (
[; ;ff.c: 4834: const TCHAR* path
[; ;ff.c: 4835: )
[; ;ff.c: 4836: {
[e :U _f_mkdir ]
"4834
[v _path `*Cuc ~T0 @X0 1 r1 ]
"4836
[f ]
"4837
[v _res `E69 ~T0 @X0 1 a ]
"4838
[v _dj `S4 ~T0 @X0 1 a ]
"4839
[v _fs `*S1 ~T0 @X0 1 a ]
"4840
[v _dir `*uc ~T0 @X0 1 a ]
"4841
[v _dcl `ul ~T0 @X0 1 a ]
[v _pcl `ul ~T0 @X0 1 a ]
[v _tm `ul ~T0 @X0 1 a ]
[; ;ff.c: 4837: FRESULT res;
[; ;ff.c: 4838: DIR dj;
[; ;ff.c: 4839: FATFS *fs;
[; ;ff.c: 4840: BYTE *dir;
[; ;ff.c: 4841: DWORD dcl, pcl, tm;
[; ;ff.c: 4846: res = find_volume(&path, &fs, 0x02);
"4846
[e = _res ( _find_volume (3 , , &U _path &U _fs -> -> 2 `i `uc ]
[; ;ff.c: 4847: if (res == FR_OK) {
"4847
[e $ ! == -> _res `i -> . `E69 0 `i 633  ]
{
[; ;ff.c: 4848: dj.obj.fs = fs;
"4848
[e = . . _dj 0 0 _fs ]
[; ;ff.c: 4849: ;
[; ;ff.c: 4850: res = follow_path(&dj, path);
"4850
[e = _res ( _follow_path (2 , &U _dj _path ]
[; ;ff.c: 4851: if (res == FR_OK) res = FR_EXIST;
"4851
[e $ ! == -> _res `i -> . `E69 0 `i 634  ]
[e = _res . `E69 8 ]
[e :U 634 ]
[; ;ff.c: 4852: if (0 && res == FR_NO_FILE && (dj.fn[11] & 0x20)) {
"4852
[e $ ! && && != -> 0 `i -> 0 `i == -> _res `i -> . `E69 4 `i != & -> *U + &U . _dj 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . _dj 5 `ui `ux `i -> 32 `i -> 0 `i 635  ]
{
[; ;ff.c: 4853: res = FR_INVALID_NAME;
"4853
[e = _res . `E69 6 ]
"4854
}
[e :U 635 ]
[; ;ff.c: 4854: }
[; ;ff.c: 4855: if (res == FR_NO_FILE) {
"4855
[e $ ! == -> _res `i -> . `E69 4 `i 636  ]
{
[; ;ff.c: 4856: dcl = create_chain(&dj.obj, 0);
"4856
[e = _dcl ( _create_chain (2 , &U . _dj 0 -> -> -> 0 `i `l `ul ]
[; ;ff.c: 4857: dj.obj.objsize = (DWORD)fs->csize * ((UINT)512);
"4857
[e = . . _dj 0 5 * -> . *U _fs 7 `ul -> -> -> 512 `i `ui `ul ]
[; ;ff.c: 4858: res = FR_OK;
"4858
[e = _res . `E69 0 ]
[; ;ff.c: 4859: if (dcl == 0) res = FR_DENIED;
"4859
[e $ ! == _dcl -> -> -> 0 `i `l `ul 637  ]
[e = _res . `E69 7 ]
[e :U 637 ]
[; ;ff.c: 4860: if (dcl == 1) res = FR_INT_ERR;
"4860
[e $ ! == _dcl -> -> -> 1 `i `l `ul 638  ]
[e = _res . `E69 2 ]
[e :U 638 ]
[; ;ff.c: 4861: if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
"4861
[e $ ! == _dcl -> -1 `ul 639  ]
[e = _res . `E69 1 ]
[e :U 639 ]
[; ;ff.c: 4862: if (res == FR_OK) res = sync_window(fs);
"4862
[e $ ! == -> _res `i -> . `E69 0 `i 640  ]
[e = _res ( _sync_window (1 _fs ]
[e :U 640 ]
[; ;ff.c: 4863: tm = get_fattime();
"4863
[e = _tm ( _get_fattime ..  ]
[; ;ff.c: 4864: if (res == FR_OK) {
"4864
[e $ ! == -> _res `i -> . `E69 0 `i 641  ]
{
[; ;ff.c: 4865: res = dir_clear(fs, dcl);
"4865
[e = _res ( _dir_clear (2 , _fs _dcl ]
[; ;ff.c: 4866: if (res == FR_OK && (!0 || fs->fs_type != 4)) {
"4866
[e $ ! && == -> _res `i -> . `E69 0 `i || ! != -> 0 `i -> 0 `i != -> . *U _fs 0 `i -> 4 `i 642  ]
{
[; ;ff.c: 4867: dir = fs->win;
"4867
[e = _dir &U . *U _fs 18 ]
[; ;ff.c: 4868: mem_set(dir + 0, ' ', 11);
"4868
[e ( _mem_set (3 , , -> + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x `*v -> -> 32 `ui `i -> -> 11 `i `ui ]
[; ;ff.c: 4869: dir[0] = '.';
"4869
[e = *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x -> -> 46 `ui `uc ]
[; ;ff.c: 4870: dir[11] = 0x10;
"4870
[e = *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 16 `i `uc ]
[; ;ff.c: 4871: st_dword(dir + 22, tm);
"4871
[e ( _st_dword (2 , + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x _tm ]
[; ;ff.c: 4872: st_clust(fs, dir, dcl);
"4872
[e ( _st_clust (3 , , _fs _dir _dcl ]
[; ;ff.c: 4873: mem_cpy(dir + 32, dir, 32);
"4873
[e ( _mem_cpy (3 , , -> + _dir * -> -> 32 `i `x -> -> # *U _dir `i `x `*v -> _dir `*Cv -> -> 32 `i `ui ]
[; ;ff.c: 4874: dir[32 + 1] = '.'; pcl = dj.obj.sclust;
"4874
[e = *U + _dir * -> + -> 32 `i -> 1 `i `x -> -> # *U _dir `i `x -> -> 46 `ui `uc ]
[e = _pcl . . _dj 0 4 ]
[; ;ff.c: 4875: st_clust(fs, dir + 32, pcl);
"4875
[e ( _st_clust (3 , , _fs + _dir * -> -> 32 `i `x -> -> # *U _dir `i `x _pcl ]
[; ;ff.c: 4876: fs->wflag = 1;
"4876
[e = . *U _fs 3 -> -> 1 `i `uc ]
"4877
}
[e :U 642 ]
"4878
}
[e :U 641 ]
[; ;ff.c: 4877: }
[; ;ff.c: 4878: }
[; ;ff.c: 4879: if (res == FR_OK) {
"4879
[e $ ! == -> _res `i -> . `E69 0 `i 643  ]
{
[; ;ff.c: 4880: res = dir_register(&dj);
"4880
[e = _res ( _dir_register (1 &U _dj ]
"4881
}
[e :U 643 ]
[; ;ff.c: 4881: }
[; ;ff.c: 4882: if (res == FR_OK) {
"4882
[e $ ! == -> _res `i -> . `E69 0 `i 644  ]
{
[; ;ff.c: 4894: {
"4894
{
[; ;ff.c: 4895: dir = dj.dir;
"4895
[e = _dir . _dj 4 ]
[; ;ff.c: 4896: st_dword(dir + 22, tm);
"4896
[e ( _st_dword (2 , + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x _tm ]
[; ;ff.c: 4897: st_clust(fs, dir, dcl);
"4897
[e ( _st_clust (3 , , _fs _dir _dcl ]
[; ;ff.c: 4898: dir[11] = 0x10;
"4898
[e = *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 16 `i `uc ]
[; ;ff.c: 4899: fs->wflag = 1;
"4899
[e = . *U _fs 3 -> -> 1 `i `uc ]
"4900
}
[; ;ff.c: 4900: }
[; ;ff.c: 4901: if (res == FR_OK) {
"4901
[e $ ! == -> _res `i -> . `E69 0 `i 645  ]
{
[; ;ff.c: 4902: res = sync_fs(fs);
"4902
[e = _res ( _sync_fs (1 _fs ]
"4903
}
[e :U 645 ]
"4904
}
[; ;ff.c: 4903: }
[; ;ff.c: 4904: } else {
[e $U 646  ]
[e :U 644 ]
{
[; ;ff.c: 4905: remove_chain(&dj.obj, dcl, 0);
"4905
[e ( _remove_chain (3 , , &U . _dj 0 _dcl -> -> -> 0 `i `l `ul ]
"4906
}
[e :U 646 ]
"4907
}
[e :U 636 ]
[; ;ff.c: 4906: }
[; ;ff.c: 4907: }
[; ;ff.c: 4908: ;
"4909
}
[e :U 633 ]
[; ;ff.c: 4909: }
[; ;ff.c: 4911: return res;
"4911
[e ) _res ]
[e $UE 632  ]
[; ;ff.c: 4912: }
"4912
[e :UE 632 ]
}
"4921
[v _f_rename `(E69 ~T0 @X0 1 ef2`*Cuc`*Cuc ]
"4925
{
[; ;ff.c: 4921: FRESULT f_rename (
[; ;ff.c: 4922: const TCHAR* path_old,
[; ;ff.c: 4923: const TCHAR* path_new
[; ;ff.c: 4924: )
[; ;ff.c: 4925: {
[e :U _f_rename ]
"4922
[v _path_old `*Cuc ~T0 @X0 1 r1 ]
"4923
[v _path_new `*Cuc ~T0 @X0 1 r2 ]
"4925
[f ]
"4926
[v _res `E69 ~T0 @X0 1 a ]
"4927
[v _djo `S4 ~T0 @X0 1 a ]
[v _djn `S4 ~T0 @X0 1 a ]
"4928
[v _fs `*S1 ~T0 @X0 1 a ]
"4929
[v _buf `uc ~T0 @X0 ? != -> 0 `i -> 0 `i : * -> 32 `i -> 2 `i -> 32 `i a ]
[v _dir `*uc ~T0 @X0 1 a ]
"4930
[v _dw `ul ~T0 @X0 1 a ]
[; ;ff.c: 4926: FRESULT res;
[; ;ff.c: 4927: DIR djo, djn;
[; ;ff.c: 4928: FATFS *fs;
[; ;ff.c: 4929: BYTE buf[0 ? 32 * 2 : 32], *dir;
[; ;ff.c: 4930: DWORD dw;
[; ;ff.c: 4934: get_ldnumber(&path_new);
"4934
[e ( _get_ldnumber (1 &U _path_new ]
[; ;ff.c: 4935: res = find_volume(&path_old, &fs, 0x02);
"4935
[e = _res ( _find_volume (3 , , &U _path_old &U _fs -> -> 2 `i `uc ]
[; ;ff.c: 4936: if (res == FR_OK) {
"4936
[e $ ! == -> _res `i -> . `E69 0 `i 648  ]
{
[; ;ff.c: 4937: djo.obj.fs = fs;
"4937
[e = . . _djo 0 0 _fs ]
[; ;ff.c: 4938: ;
[; ;ff.c: 4939: res = follow_path(&djo, path_old);
"4939
[e = _res ( _follow_path (2 , &U _djo _path_old ]
[; ;ff.c: 4940: if (res == FR_OK && (djo.fn[11] & (0x20 | 0x80))) res = FR_INVALID_NAME;
"4940
[e $ ! && == -> _res `i -> . `E69 0 `i != & -> *U + &U . _djo 5 * -> -> -> 11 `i `ui `ux -> -> # *U &U . _djo 5 `ui `ux `i | -> 32 `i -> 128 `i -> 0 `i 649  ]
[e = _res . `E69 6 ]
[e :U 649 ]
[; ;ff.c: 4946: if (res == FR_OK) {
"4946
[e $ ! == -> _res `i -> . `E69 0 `i 650  ]
{
[; ;ff.c: 4973: {
"4973
{
[; ;ff.c: 4974: mem_cpy(buf, djo.dir, 32);
"4974
[e ( _mem_cpy (3 , , -> &U _buf `*v -> . _djo 4 `*Cv -> -> 32 `i `ui ]
[; ;ff.c: 4975: mem_cpy(&djn, &djo, sizeof (DIR));
"4975
[e ( _mem_cpy (3 , , -> &U _djn `*v -> &U _djo `*Cv -> # `S4 `ui ]
[; ;ff.c: 4976: res = follow_path(&djn, path_new);
"4976
[e = _res ( _follow_path (2 , &U _djn _path_new ]
[; ;ff.c: 4977: if (res == FR_OK) {
"4977
[e $ ! == -> _res `i -> . `E69 0 `i 651  ]
{
[; ;ff.c: 4978: res = (djn.obj.sclust == djo.obj.sclust && djn.dptr == djo.dptr) ? FR_NO_FILE : FR_EXIST;
"4978
[e = _res -> ? && == . . _djn 0 4 . . _djo 0 4 == . _djn 1 . _djo 1 : -> . `E69 4 `i -> . `E69 8 `i `E69 ]
"4979
}
[e :U 651 ]
[; ;ff.c: 4979: }
[; ;ff.c: 4980: if (res == FR_NO_FILE) {
"4980
[e $ ! == -> _res `i -> . `E69 4 `i 652  ]
{
[; ;ff.c: 4981: res = dir_register(&djn);
"4981
[e = _res ( _dir_register (1 &U _djn ]
[; ;ff.c: 4982: if (res == FR_OK) {
"4982
[e $ ! == -> _res `i -> . `E69 0 `i 653  ]
{
[; ;ff.c: 4983: dir = djn.dir;
"4983
[e = _dir . _djn 4 ]
[; ;ff.c: 4984: mem_cpy(dir + 13, buf + 13, 32 - 13);
"4984
[e ( _mem_cpy (3 , , -> + _dir * -> -> 13 `i `x -> -> # *U _dir `i `x `*v -> + &U _buf * -> -> 13 `i `x -> -> # *U &U _buf `i `x `*Cv -> - -> 32 `i -> 13 `i `ui ]
[; ;ff.c: 4985: dir[11] = buf[11];
"4985
[e = *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x *U + &U _buf * -> -> -> 11 `i `ui `ux -> -> # *U &U _buf `ui `ux ]
[; ;ff.c: 4986: if (!(dir[11] & 0x10)) dir[11] |= 0x20;
"4986
[e $ ! ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i 654  ]
[e =| *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x -> -> 32 `i `uc ]
[e :U 654 ]
[; ;ff.c: 4987: fs->wflag = 1;
"4987
[e = . *U _fs 3 -> -> 1 `i `uc ]
[; ;ff.c: 4988: if ((dir[11] & 0x10) && djo.obj.sclust != djn.obj.sclust) {
"4988
[e $ ! && != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i != . . _djo 0 4 . . _djn 0 4 655  ]
{
[; ;ff.c: 4989: dw = clst2sect(fs, ld_clust(fs, dir));
"4989
[e = _dw ( _clst2sect (2 , _fs ( _ld_clust (2 , _fs -> _dir `*Cuc ]
[; ;ff.c: 4990: if (dw == 0) {
"4990
[e $ ! == _dw -> -> -> 0 `i `l `ul 656  ]
{
[; ;ff.c: 4991: res = FR_INT_ERR;
"4991
[e = _res . `E69 2 ]
"4992
}
[; ;ff.c: 4992: } else {
[e $U 657  ]
[e :U 656 ]
{
[; ;ff.c: 4994: res = move_window(fs, dw);
"4994
[e = _res ( _move_window (2 , _fs _dw ]
[; ;ff.c: 4995: dir = fs->win + 32 * 1;
"4995
[e = _dir + &U . *U _fs 18 * -> * -> 32 `i -> 1 `i `x -> -> # *U &U . *U _fs 18 `i `x ]
[; ;ff.c: 4996: if (res == FR_OK && dir[1] == '.') {
"4996
[e $ ! && == -> _res `i -> . `E69 0 `i == -> *U + _dir * -> -> 1 `i `x -> -> # *U _dir `i `x `ui -> 46 `ui 658  ]
{
[; ;ff.c: 4997: st_clust(fs, dir, djn.obj.sclust);
"4997
[e ( _st_clust (3 , , _fs _dir . . _djn 0 4 ]
[; ;ff.c: 4998: fs->wflag = 1;
"4998
[e = . *U _fs 3 -> -> 1 `i `uc ]
"4999
}
[e :U 658 ]
"5000
}
[e :U 657 ]
"5001
}
[e :U 655 ]
"5002
}
[e :U 653 ]
"5003
}
[e :U 652 ]
"5004
}
[; ;ff.c: 4999: }
[; ;ff.c: 5000: }
[; ;ff.c: 5001: }
[; ;ff.c: 5002: }
[; ;ff.c: 5003: }
[; ;ff.c: 5004: }
[; ;ff.c: 5005: if (res == FR_OK) {
"5005
[e $ ! == -> _res `i -> . `E69 0 `i 659  ]
{
[; ;ff.c: 5006: res = dir_remove(&djo);
"5006
[e = _res ( _dir_remove (1 &U _djo ]
[; ;ff.c: 5007: if (res == FR_OK) {
"5007
[e $ ! == -> _res `i -> . `E69 0 `i 660  ]
{
[; ;ff.c: 5008: res = sync_fs(fs);
"5008
[e = _res ( _sync_fs (1 _fs ]
"5009
}
[e :U 660 ]
"5010
}
[e :U 659 ]
"5012
}
[e :U 650 ]
[; ;ff.c: 5009: }
[; ;ff.c: 5010: }
[; ;ff.c: 5012: }
[; ;ff.c: 5013: ;
"5014
}
[e :U 648 ]
[; ;ff.c: 5014: }
[; ;ff.c: 5016: return res;
"5016
[e ) _res ]
[e $UE 647  ]
[; ;ff.c: 5017: }
"5017
[e :UE 647 ]
}
[a 1C 34 42 58 60 62 63 124 127 0 ]
[a 2C 43 44 59 61 91 93 0 ]
[a 3C 70 65 84 0 ]
[a 4C 70 65 84 51 50 0 ]
